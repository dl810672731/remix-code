{
	"id": "484da54a37e4ee6b3bb83c089485d2f3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"StakingRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract StakingRewards{\n\n    // 质押token\n    IERC20 public immutable stakingToken;\n\n    // 奖励token\n    IERC20 public immutable rewardsToken;\n\n    address public owner;\n\n    // 奖励持续时间\n    uint public duration;\n\n    // 奖励结束时间\n    uint public finishAt;\n\n    // 合约的更新时间\n    uint public updatedAt;\n\n    // 奖励速率\n    uint public rewardRate;\n\n    // 总质押量\n    uint public rewardPertTokenStored;\n\n    // 每个用户的质押量\n    mapping (address => uint256) public userRewardPertPaid;\n\n    // 每个用户的奖励(待领取，尚未领取的奖励)\n    mapping (address => uint256) public rewards;\n\n    uint public totalSupply;\n    mapping (address => uint256) public balanceOf;\n\n\n    constructor(address _stakingToken, address _rewardsToken) {\n        stakingToken = IERC20(_stakingToken);\n        rewardsToken = IERC20(_rewardsToken);\n        owner = msg.sender;\n        // duration = 60 days;// 60天\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n\n    // 奖励时间\n    function setRewardsDuration(uint _duration) external onlyOwner{\n        require(finishAt < block.timestamp, 'Rewards not finished');\n        duration = _duration;\n    }\n\n\n    // _amount 新打的奖励\n    function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)){\n        if(finishAt < block.timestamp){\n            rewardRate = _amount/duration;\n        }else{\n            // 还在本轮次中，剩余的奖金\n            uint rewardAmount = rewardRate * ( finishAt - block.timestamp );\n            rewardRate = (rewardAmount + _amount) / duration;\n        }\n\n        require(rewardRate > 0,\"Reward rate should > 0\");\n        require(rewardRate * duration <rewardsToken.balanceOf(address(this)),\"No more reward tokens\");\n\n        finishAt = block.timestamp + duration;\n        updatedAt = block.timestamp;\n\n\n    }\n\n    // 质押 _amount 金额的质押 stakingToken\n    function stake(uint _amount) external  updateReward(msg.sender) {\n\n        require(_amount > 0,\"Stake amount must be greater than 0\");\n        stakingToken.transferFrom(msg.sender, address(this), _amount);\n        balanceOf[msg.sender] += _amount;\n\n        totalSupply += _amount;\n\n    }\n\n    function withdraw(uint _amount) external updateReward(msg.sender) {\n\n        require(_amount > 0,\"Withdraw amount must be greater than 0\");\n        balanceOf[msg.sender] -= _amount;\n        totalSupply -= _amount;\n        stakingToken.transfer(msg.sender,_amount);\n    }\n\n    // 计算每个用户可以收到的奖励金额\n    function earned(address _account) public view returns (uint) {\n        balanceOf[_account] *  (rewardPerToken() - userRewardPertPaid[_account])  /1e18\n        +\n         rewards[_account];\n    }\n\n    function rewardPerToken() public view returns (uint256) {\n        if(totalSupply == 0){\n            return rewardPertTokenStored;\n        }\n\n        return rewardPertTokenStored +\n         (\n            rewardRate *\n            (_min(block.timestamp,finishAt) - updatedAt)  // 上一次奖励生效的时间长度\n         ) * 1e18\n          /\n           totalSupply;\n    }\n\n    // 上一次奖励生效的时间长度\n    function lastRewardApplayTime( ) public view returns (uint){\n         return  (_min(block.timestamp,finishAt) - updatedAt) ;\n    }\n\n    // 更新用户的奖励金额\n    modifier  updateReward(address _account){\n        rewardPertTokenStored =  rewardPerToken();\n        updatedAt = lastRewardApplayTime();\n\n        if(_account != address(0)){\n            rewards[_account] = earned(_account);\n            userRewardPertPaid[_account] = rewardPertTokenStored;\n        }\n        _;\n    }\n\n    // 用户领取奖励，注意，这里是领取的意思，不是查询的意思\n    function getReward() external  updateReward(msg.sender){\n        uint reward = rewards[msg.sender];\n        if(reward> 0){\n            rewards[msg.sender] = 0;\n            // 将奖励token 发给此用户\n            rewardsToken.transfer(msg.sender, reward);\n        }\n\n    }\n   \n    function _min(uint x,uint y) private pure returns(uint){\n        return x < y ? x : y;\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StakingRewards.sol": {
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardApplayTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPertTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "setRewardsDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatedAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPertPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StakingRewards.sol\":115:4303  contract StakingRewards{... */\n  mstore(0x40, 0xc0)\n    /* \"StakingRewards.sol\":857:1081  constructor(address _stakingToken, address _rewardsToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"StakingRewards.sol\":947:960  _stakingToken */\n  dup2\n    /* \"StakingRewards.sol\":925:961  stakingToken = IERC20(_stakingToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"StakingRewards.sol\":993:1006  _rewardsToken */\n  dup1\n    /* \"StakingRewards.sol\":971:1007  rewardsToken = IERC20(_rewardsToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"StakingRewards.sol\":1025:1035  msg.sender */\n  caller\n    /* \"StakingRewards.sol\":1017:1022  owner */\n  0x00\n  dup1\n    /* \"StakingRewards.sol\":1017:1035  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"StakingRewards.sol\":857:1081  constructor(address _stakingToken, address _rewardsToken) {... */\n  pop\n  pop\n    /* \"StakingRewards.sol\":115:4303  contract StakingRewards{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"StakingRewards.sol\":115:4303  contract StakingRewards{... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"StakingRewards.sol\":115:4303  contract StakingRewards{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7519ab50\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xbfeec056\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xbfeec056\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcc1a378f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd7f2ddbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x7519ab50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9a2a3626\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x3c6b16ab\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x67d3b488\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StakingRewards.sol\":2720:2914  function earned(address _account) public view returns (uint) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":725:768  mapping (address => uint256) public rewards */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":322:342  uint public duration */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":775:798  uint public totalSupply */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":2391:2661  function withdraw(uint _amount) external updateReward(msg.sender) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"StakingRewards.sol\":1401:2041  function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)){... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"StakingRewards.sol\":3922:4199  function getReward() external  updateReward(msg.sender){... */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"StakingRewards.sol\":375:395  uint public finishAt */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":804:849  mapping (address => uint256) public balanceOf */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":164:200  IERC20 public immutable stakingToken */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":431:452  uint public updatedAt */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":479:501  uint public rewardRate */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":269:289  address public owner */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":528:561  uint public rewardPertTokenStored */\n    tag_16:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":2098:2385  function stake(uint _amount) external  updateReward(msg.sender) {... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"StakingRewards.sol\":600:654  mapping (address => uint256) public userRewardPertPaid */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":1195:1363  function setRewardsDuration(uint _duration) external onlyOwner{... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"StakingRewards.sol\":2920:3293  function rewardPerToken() public view returns (uint256) {... */\n    tag_20:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":226:262  IERC20 public immutable rewardsToken */\n    tag_21:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":3343:3473  function lastRewardApplayTime( ) public view returns (uint){... */\n    tag_22:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":2720:2914  function earned(address _account) public view returns (uint) {... */\n    tag_29:\n        /* \"StakingRewards.sol\":2775:2779  uint */\n      0x00\n        /* \"StakingRewards.sol\":2890:2897  rewards */\n      0x07\n        /* \"StakingRewards.sol\":2890:2907  rewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":2898:2906  _account */\n      dup4\n        /* \"StakingRewards.sol\":2890:2907  rewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":2866:2870  1e18 */\n      0x0de0b6b3a7640000\n        /* \"StakingRewards.sol\":2834:2852  userRewardPertPaid */\n      0x06\n        /* \"StakingRewards.sol\":2834:2862  userRewardPertPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":2853:2861  _account */\n      dup6\n        /* \"StakingRewards.sol\":2834:2862  userRewardPertPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":2815:2831  rewardPerToken() */\n      tag_95\n        /* \"StakingRewards.sol\":2815:2829  rewardPerToken */\n      tag_86\n        /* \"StakingRewards.sol\":2815:2831  rewardPerToken() */\n      jump\t// in\n    tag_95:\n        /* \"StakingRewards.sol\":2815:2862  rewardPerToken() - userRewardPertPaid[_account] */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"StakingRewards.sol\":2791:2800  balanceOf */\n      0x09\n        /* \"StakingRewards.sol\":2791:2810  balanceOf[_account] */\n      0x00\n        /* \"StakingRewards.sol\":2801:2809  _account */\n      dup7\n        /* \"StakingRewards.sol\":2791:2810  balanceOf[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":2791:2863  balanceOf[_account] *  (rewardPerToken() - userRewardPertPaid[_account]) */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"StakingRewards.sol\":2791:2870  balanceOf[_account] *  (rewardPerToken() - userRewardPertPaid[_account])  /1e18 */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"StakingRewards.sol\":2791:2907  balanceOf[_account] *  (rewardPerToken() - userRewardPertPaid[_account])  /1e18... */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      pop\n        /* \"StakingRewards.sol\":2720:2914  function earned(address _account) public view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":725:768  mapping (address => uint256) public rewards */\n    tag_34:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":322:342  uint public duration */\n    tag_37:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":775:798  uint public totalSupply */\n    tag_40:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":2391:2661  function withdraw(uint _amount) external updateReward(msg.sender) {... */\n    tag_45:\n        /* \"StakingRewards.sol\":2445:2455  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      tag_105\n        /* \"StakingRewards.sol\":3589:3603  rewardPerToken */\n      tag_86\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      jump\t// in\n    tag_105:\n        /* \"StakingRewards.sol\":3564:3585  rewardPertTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":3564:3605  rewardPertTokenStored =  rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      tag_106\n        /* \"StakingRewards.sol\":3627:3647  lastRewardApplayTime */\n      tag_92\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      jump\t// in\n    tag_106:\n        /* \"StakingRewards.sol\":3615:3624  updatedAt */\n      0x03\n        /* \"StakingRewards.sol\":3615:3649  updatedAt = lastRewardApplayTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3683:3684  0 */\n      0x00\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":3663:3671  _account */\n      dup2\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n      tag_107\n      jumpi\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      tag_108\n        /* \"StakingRewards.sol\":3727:3735  _account */\n      dup2\n        /* \"StakingRewards.sol\":3720:3726  earned */\n      tag_29\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      jump\t// in\n    tag_108:\n        /* \"StakingRewards.sol\":3700:3707  rewards */\n      0x07\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3708:3716  _account */\n      dup4\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3700:3736  rewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3781:3802  rewardPertTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":3750:3768  userRewardPertPaid */\n      0x06\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3769:3777  _account */\n      dup4\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3750:3802  userRewardPertPaid[_account] = rewardPertTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n    tag_107:\n        /* \"StakingRewards.sol\":2486:2487  0 */\n      0x00\n        /* \"StakingRewards.sol\":2476:2483  _amount */\n      dup3\n        /* \"StakingRewards.sol\":2476:2487  _amount > 0 */\n      gt\n        /* \"StakingRewards.sol\":2468:2529  require(_amount > 0,\"Withdraw amount must be greater than 0\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"StakingRewards.sol\":2564:2571  _amount */\n      dup2\n        /* \"StakingRewards.sol\":2539:2548  balanceOf */\n      0x09\n        /* \"StakingRewards.sol\":2539:2560  balanceOf[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":2549:2559  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":2539:2560  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"StakingRewards.sol\":2539:2571  balanceOf[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_113\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_113:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":2596:2603  _amount */\n      dup2\n        /* \"StakingRewards.sol\":2581:2592  totalSupply */\n      0x08\n      0x00\n        /* \"StakingRewards.sol\":2581:2603  totalSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":2613:2625  stakingToken */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"StakingRewards.sol\":2613:2634  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingRewards.sol\":2635:2645  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":2646:2653  _amount */\n      dup5\n        /* \"StakingRewards.sol\":2613:2654  stakingToken.transfer(msg.sender,_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      pop\n        /* \"StakingRewards.sol\":2391:2661  function withdraw(uint _amount) external updateReward(msg.sender) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":1401:2041  function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)){... */\n    tag_48:\n        /* \"StakingRewards.sol\":1140:1145  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1126:1145  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1126:1136  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":1126:1145  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1118:1146  require(msg.sender == owner) */\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n        /* \"StakingRewards.sol\":1483:1484  0 */\n      0x00\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      tag_124\n        /* \"StakingRewards.sol\":3589:3603  rewardPerToken */\n      tag_86\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      jump\t// in\n    tag_124:\n        /* \"StakingRewards.sol\":3564:3585  rewardPertTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":3564:3605  rewardPertTokenStored =  rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      tag_125\n        /* \"StakingRewards.sol\":3627:3647  lastRewardApplayTime */\n      tag_92\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      jump\t// in\n    tag_125:\n        /* \"StakingRewards.sol\":3615:3624  updatedAt */\n      0x03\n        /* \"StakingRewards.sol\":3615:3649  updatedAt = lastRewardApplayTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3683:3684  0 */\n      0x00\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":3663:3671  _account */\n      dup2\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n      tag_126\n      jumpi\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      tag_127\n        /* \"StakingRewards.sol\":3727:3735  _account */\n      dup2\n        /* \"StakingRewards.sol\":3720:3726  earned */\n      tag_29\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      jump\t// in\n    tag_127:\n        /* \"StakingRewards.sol\":3700:3707  rewards */\n      0x07\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3708:3716  _account */\n      dup4\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3700:3736  rewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3781:3802  rewardPertTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":3750:3768  userRewardPertPaid */\n      0x06\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3769:3777  _account */\n      dup4\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3750:3802  userRewardPertPaid[_account] = rewardPertTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n    tag_126:\n        /* \"StakingRewards.sol\":1510:1525  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1499:1507  finishAt */\n      sload(0x02)\n        /* \"StakingRewards.sol\":1499:1525  finishAt < block.timestamp */\n      lt\n        /* \"StakingRewards.sol\":1496:1786  if(finishAt < block.timestamp){... */\n      iszero\n      tag_129\n      jumpi\n        /* \"StakingRewards.sol\":1561:1569  duration */\n      sload(0x01)\n        /* \"StakingRewards.sol\":1553:1560  _amount */\n      dup3\n        /* \"StakingRewards.sol\":1553:1569  _amount/duration */\n      tag_130\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_130:\n        /* \"StakingRewards.sol\":1540:1550  rewardRate */\n      0x04\n        /* \"StakingRewards.sol\":1540:1569  rewardRate = _amount/duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1496:1786  if(finishAt < block.timestamp){... */\n      jump(tag_131)\n    tag_129:\n        /* \"StakingRewards.sol\":1650:1667  uint rewardAmount */\n      0x00\n        /* \"StakingRewards.sol\":1696:1711  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1685:1693  finishAt */\n      sload(0x02)\n        /* \"StakingRewards.sol\":1685:1711  finishAt - block.timestamp */\n      tag_132\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_132:\n        /* \"StakingRewards.sol\":1670:1680  rewardRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":1670:1713  rewardRate * ( finishAt - block.timestamp ) */\n      tag_133\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_133:\n        /* \"StakingRewards.sol\":1650:1713  uint rewardAmount = rewardRate * ( finishAt - block.timestamp ) */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":1767:1775  duration */\n      sload(0x01)\n        /* \"StakingRewards.sol\":1756:1763  _amount */\n      dup4\n        /* \"StakingRewards.sol\":1741:1753  rewardAmount */\n      dup3\n        /* \"StakingRewards.sol\":1741:1763  rewardAmount + _amount */\n      tag_134\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_134:\n        /* \"StakingRewards.sol\":1740:1775  (rewardAmount + _amount) / duration */\n      tag_135\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_135:\n        /* \"StakingRewards.sol\":1727:1737  rewardRate */\n      0x04\n        /* \"StakingRewards.sol\":1727:1775  rewardRate = (rewardAmount + _amount) / duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1584:1786  {... */\n      pop\n        /* \"StakingRewards.sol\":1496:1786  if(finishAt < block.timestamp){... */\n    tag_131:\n        /* \"StakingRewards.sol\":1817:1818  0 */\n      0x00\n        /* \"StakingRewards.sol\":1804:1814  rewardRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":1804:1818  rewardRate > 0 */\n      gt\n        /* \"StakingRewards.sol\":1796:1844  require(rewardRate > 0,\"Reward rate should > 0\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"StakingRewards.sol\":1885:1897  rewardsToken */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"StakingRewards.sol\":1885:1907  rewardsToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"StakingRewards.sol\":1916:1920  this */\n      address\n        /* \"StakingRewards.sol\":1885:1922  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"StakingRewards.sol\":1875:1883  duration */\n      sload(0x01)\n        /* \"StakingRewards.sol\":1862:1872  rewardRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":1862:1883  rewardRate * duration */\n      tag_144\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_144:\n        /* \"StakingRewards.sol\":1862:1922  rewardRate * duration <rewardsToken.balanceOf(address(this)) */\n      lt\n        /* \"StakingRewards.sol\":1854:1947  require(rewardRate * duration <rewardsToken.balanceOf(address(this)),\"No more reward tokens\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"StakingRewards.sol\":1987:1995  duration */\n      sload(0x01)\n        /* \"StakingRewards.sol\":1969:1984  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1969:1995  block.timestamp + duration */\n      tag_148\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_148:\n        /* \"StakingRewards.sol\":1958:1966  finishAt */\n      0x02\n        /* \"StakingRewards.sol\":1958:1995  finishAt = block.timestamp + duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":2017:2032  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":2005:2014  updatedAt */\n      0x03\n        /* \"StakingRewards.sol\":2005:2032  updatedAt = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1156:1157  _ */\n      pop\n        /* \"StakingRewards.sol\":1401:2041  function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)){... */\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":3922:4199  function getReward() external  updateReward(msg.sender){... */\n    tag_50:\n        /* \"StakingRewards.sol\":3966:3976  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      tag_150\n        /* \"StakingRewards.sol\":3589:3603  rewardPerToken */\n      tag_86\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      jump\t// in\n    tag_150:\n        /* \"StakingRewards.sol\":3564:3585  rewardPertTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":3564:3605  rewardPertTokenStored =  rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      tag_151\n        /* \"StakingRewards.sol\":3627:3647  lastRewardApplayTime */\n      tag_92\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      jump\t// in\n    tag_151:\n        /* \"StakingRewards.sol\":3615:3624  updatedAt */\n      0x03\n        /* \"StakingRewards.sol\":3615:3649  updatedAt = lastRewardApplayTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3683:3684  0 */\n      0x00\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":3663:3671  _account */\n      dup2\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n      tag_152\n      jumpi\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      tag_153\n        /* \"StakingRewards.sol\":3727:3735  _account */\n      dup2\n        /* \"StakingRewards.sol\":3720:3726  earned */\n      tag_29\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      jump\t// in\n    tag_153:\n        /* \"StakingRewards.sol\":3700:3707  rewards */\n      0x07\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3708:3716  _account */\n      dup4\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3700:3736  rewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3781:3802  rewardPertTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":3750:3768  userRewardPertPaid */\n      0x06\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3769:3777  _account */\n      dup4\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3750:3802  userRewardPertPaid[_account] = rewardPertTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n    tag_152:\n        /* \"StakingRewards.sol\":3987:3998  uint reward */\n      0x00\n        /* \"StakingRewards.sol\":4001:4008  rewards */\n      0x07\n        /* \"StakingRewards.sol\":4001:4020  rewards[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":4009:4019  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":4001:4020  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":3987:4020  uint reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":4041:4042  0 */\n      0x00\n        /* \"StakingRewards.sol\":4033:4039  reward */\n      dup2\n        /* \"StakingRewards.sol\":4033:4042  reward> 0 */\n      gt\n        /* \"StakingRewards.sol\":4030:4192  if(reward> 0){... */\n      iszero\n      tag_155\n      jumpi\n        /* \"StakingRewards.sol\":4079:4080  0 */\n      0x00\n        /* \"StakingRewards.sol\":4057:4064  rewards */\n      0x07\n        /* \"StakingRewards.sol\":4057:4076  rewards[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":4065:4075  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":4057:4076  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":4057:4080  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":4140:4152  rewardsToken */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"StakingRewards.sol\":4140:4161  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingRewards.sol\":4162:4172  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":4174:4180  reward */\n      dup4\n        /* \"StakingRewards.sol\":4140:4181  rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_156:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_159:\n      pop\n        /* \"StakingRewards.sol\":4030:4192  if(reward> 0){... */\n    tag_155:\n        /* \"StakingRewards.sol\":3977:4199  {... */\n      pop\n        /* \"StakingRewards.sol\":3922:4199  function getReward() external  updateReward(msg.sender){... */\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":375:395  uint public finishAt */\n    tag_52:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":804:849  mapping (address => uint256) public balanceOf */\n    tag_56:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":164:200  IERC20 public immutable stakingToken */\n    tag_59:\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":431:452  uint public updatedAt */\n    tag_63:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":479:501  uint public rewardRate */\n    tag_66:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":269:289  address public owner */\n    tag_69:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":528:561  uint public rewardPertTokenStored */\n    tag_73:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":2098:2385  function stake(uint _amount) external  updateReward(msg.sender) {... */\n    tag_77:\n        /* \"StakingRewards.sol\":2150:2160  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      tag_161\n        /* \"StakingRewards.sol\":3589:3603  rewardPerToken */\n      tag_86\n        /* \"StakingRewards.sol\":3589:3605  rewardPerToken() */\n      jump\t// in\n    tag_161:\n        /* \"StakingRewards.sol\":3564:3585  rewardPertTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":3564:3605  rewardPertTokenStored =  rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      tag_162\n        /* \"StakingRewards.sol\":3627:3647  lastRewardApplayTime */\n      tag_92\n        /* \"StakingRewards.sol\":3627:3649  lastRewardApplayTime() */\n      jump\t// in\n    tag_162:\n        /* \"StakingRewards.sol\":3615:3624  updatedAt */\n      0x03\n        /* \"StakingRewards.sol\":3615:3649  updatedAt = lastRewardApplayTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3683:3684  0 */\n      0x00\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":3663:3671  _account */\n      dup2\n        /* \"StakingRewards.sol\":3663:3685  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n      tag_163\n      jumpi\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      tag_164\n        /* \"StakingRewards.sol\":3727:3735  _account */\n      dup2\n        /* \"StakingRewards.sol\":3720:3726  earned */\n      tag_29\n        /* \"StakingRewards.sol\":3720:3736  earned(_account) */\n      jump\t// in\n    tag_164:\n        /* \"StakingRewards.sol\":3700:3707  rewards */\n      0x07\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3708:3716  _account */\n      dup4\n        /* \"StakingRewards.sol\":3700:3717  rewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3700:3736  rewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3781:3802  rewardPertTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":3750:3768  userRewardPertPaid */\n      0x06\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":3769:3777  _account */\n      dup4\n        /* \"StakingRewards.sol\":3750:3778  userRewardPertPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":3750:3802  userRewardPertPaid[_account] = rewardPertTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3660:3813  if(_account != address(0)){... */\n    tag_163:\n        /* \"StakingRewards.sol\":2191:2192  0 */\n      0x00\n        /* \"StakingRewards.sol\":2181:2188  _amount */\n      dup3\n        /* \"StakingRewards.sol\":2181:2192  _amount > 0 */\n      gt\n        /* \"StakingRewards.sol\":2173:2231  require(_amount > 0,\"Stake amount must be greater than 0\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"StakingRewards.sol\":2241:2253  stakingToken */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"StakingRewards.sol\":2241:2266  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"StakingRewards.sol\":2267:2277  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":2287:2291  this */\n      address\n        /* \"StakingRewards.sol\":2294:2301  _amount */\n      dup6\n        /* \"StakingRewards.sol\":2241:2302  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_173:\n      pop\n        /* \"StakingRewards.sol\":2337:2344  _amount */\n      dup2\n        /* \"StakingRewards.sol\":2312:2321  balanceOf */\n      0x09\n        /* \"StakingRewards.sol\":2312:2333  balanceOf[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":2322:2332  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":2312:2333  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"StakingRewards.sol\":2312:2344  balanceOf[msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_174\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_174:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":2370:2377  _amount */\n      dup2\n        /* \"StakingRewards.sol\":2355:2366  totalSupply */\n      0x08\n      0x00\n        /* \"StakingRewards.sol\":2355:2377  totalSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":2098:2385  function stake(uint _amount) external  updateReward(msg.sender) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":600:654  mapping (address => uint256) public userRewardPertPaid */\n    tag_80:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":1195:1363  function setRewardsDuration(uint _duration) external onlyOwner{... */\n    tag_84:\n        /* \"StakingRewards.sol\":1140:1145  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1126:1145  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1126:1136  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":1126:1145  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1118:1146  require(msg.sender == owner) */\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n        /* \"StakingRewards.sol\":1286:1301  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1275:1283  finishAt */\n      sload(0x02)\n        /* \"StakingRewards.sol\":1275:1301  finishAt < block.timestamp */\n      lt\n        /* \"StakingRewards.sol\":1267:1326  require(finishAt < block.timestamp, 'Rewards not finished') */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"StakingRewards.sol\":1347:1356  _duration */\n      dup1\n        /* \"StakingRewards.sol\":1336:1344  duration */\n      0x01\n        /* \"StakingRewards.sol\":1336:1356  duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1195:1363  function setRewardsDuration(uint _duration) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":2920:3293  function rewardPerToken() public view returns (uint256) {... */\n    tag_86:\n        /* \"StakingRewards.sol\":2967:2974  uint256 */\n      0x00\n        /* \"StakingRewards.sol\":3004:3005  0 */\n      dup1\n        /* \"StakingRewards.sol\":2989:3000  totalSupply */\n      sload(0x08)\n        /* \"StakingRewards.sol\":2989:3005  totalSupply == 0 */\n      sub\n        /* \"StakingRewards.sol\":2986:3059  if(totalSupply == 0){... */\n      tag_183\n      jumpi\n        /* \"StakingRewards.sol\":3027:3048  rewardPertTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":3020:3048  return rewardPertTokenStored */\n      swap1\n      pop\n      jump(tag_182)\n        /* \"StakingRewards.sol\":2986:3059  if(totalSupply == 0){... */\n    tag_183:\n        /* \"StakingRewards.sol\":3275:3286  totalSupply */\n      sload(0x08)\n        /* \"StakingRewards.sol\":3247:3251  1e18 */\n      0x0de0b6b3a7640000\n        /* \"StakingRewards.sol\":3182:3191  updatedAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":3149:3179  _min(block.timestamp,finishAt) */\n      tag_184\n        /* \"StakingRewards.sol\":3154:3169  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":3170:3178  finishAt */\n      sload(0x02)\n        /* \"StakingRewards.sol\":3149:3153  _min */\n      tag_185\n        /* \"StakingRewards.sol\":3149:3179  _min(block.timestamp,finishAt) */\n      jump\t// in\n    tag_184:\n        /* \"StakingRewards.sol\":3149:3191  _min(block.timestamp,finishAt) - updatedAt */\n      tag_186\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_186:\n        /* \"StakingRewards.sol\":3123:3133  rewardRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":3123:3192  rewardRate *... */\n      tag_187\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_187:\n        /* \"StakingRewards.sol\":3109:3251  (... */\n      tag_188\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_188:\n        /* \"StakingRewards.sol\":3109:3286  (... */\n      tag_189\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_189:\n        /* \"StakingRewards.sol\":3076:3097  rewardPertTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":3076:3286  rewardPertTokenStored +... */\n      tag_190\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_190:\n        /* \"StakingRewards.sol\":3069:3286  return rewardPertTokenStored +... */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":2920:3293  function rewardPerToken() public view returns (uint256) {... */\n    tag_182:\n      swap1\n      jump\t// out\n        /* \"StakingRewards.sol\":226:262  IERC20 public immutable rewardsToken */\n    tag_89:\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":3343:3473  function lastRewardApplayTime( ) public view returns (uint){... */\n    tag_92:\n        /* \"StakingRewards.sol\":3397:3401  uint */\n      0x00\n        /* \"StakingRewards.sol\":3455:3464  updatedAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":3422:3452  _min(block.timestamp,finishAt) */\n      tag_192\n        /* \"StakingRewards.sol\":3427:3442  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":3443:3451  finishAt */\n      sload(0x02)\n        /* \"StakingRewards.sol\":3422:3426  _min */\n      tag_185\n        /* \"StakingRewards.sol\":3422:3452  _min(block.timestamp,finishAt) */\n      jump\t// in\n    tag_192:\n        /* \"StakingRewards.sol\":3422:3464  _min(block.timestamp,finishAt) - updatedAt */\n      tag_193\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_193:\n        /* \"StakingRewards.sol\":3413:3465  return  (_min(block.timestamp,finishAt) - updatedAt) */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":3343:3473  function lastRewardApplayTime( ) public view returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"StakingRewards.sol\":4208:4300  function _min(uint x,uint y) private pure returns(uint){... */\n    tag_185:\n        /* \"StakingRewards.sol\":4258:4262  uint */\n      0x00\n        /* \"StakingRewards.sol\":4284:4285  y */\n      dup2\n        /* \"StakingRewards.sol\":4280:4281  x */\n      dup4\n        /* \"StakingRewards.sol\":4280:4285  x < y */\n      lt\n        /* \"StakingRewards.sol\":4280:4293  x < y ? x : y */\n      tag_195\n      jumpi\n        /* \"StakingRewards.sol\":4292:4293  y */\n      dup2\n        /* \"StakingRewards.sol\":4280:4293  x < y ? x : y */\n      jump(tag_196)\n    tag_195:\n        /* \"StakingRewards.sol\":4288:4289  x */\n      dup3\n        /* \"StakingRewards.sol\":4280:4293  x < y ? x : y */\n    tag_196:\n        /* \"StakingRewards.sol\":4273:4293  return x < y ? x : y */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":4208:4300  function _min(uint x,uint y) private pure returns(uint){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_198:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_200:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_201:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_237\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_200\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_202:\n        /* \"#utility.yul\":641:665   */\n      tag_239\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_201\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_240:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_203:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_242\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_202\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_28:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_245\n      tag_198\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":917:1036   */\n    tag_244:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_246\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_203\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_204:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_205:\n        /* \"#utility.yul\":1346:1370   */\n      tag_249\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_204\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_31:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_251\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_205\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_206:\n        /* \"#utility.yul\":1684:1708   */\n      tag_253\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_204\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_254:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_207:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_256\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_206\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_44:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_259\n      tag_198\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1960:2079   */\n    tag_258:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_260\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_207\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_208:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_209:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_263\n        /* \"#utility.yul\":2386:2420   */\n      tag_264\n        /* \"#utility.yul\":2395:2419   */\n      tag_265\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_200\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2386:2420   */\n      tag_208\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2368:2421   */\n      tag_200\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_210:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_267\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_209\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_211:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_269\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_210\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_212:\n        /* \"#utility.yul\":2812:2863   */\n      tag_271\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_211\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_61:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_273\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_212\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3250   */\n    tag_213:\n        /* \"#utility.yul\":3219:3243   */\n      tag_275\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3219:3243   */\n      tag_201\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3214:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3244   */\n      mstore\n        /* \"#utility.yul\":3132:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3478   */\n    tag_71:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3471   */\n      tag_277\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3400:3471   */\n      tag_213\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3256:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3664   */\n    tag_214:\n        /* \"#utility.yul\":3532:3609   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3529:3530   */\n      0x00\n        /* \"#utility.yul\":3522:3610   */\n      mstore\n        /* \"#utility.yul\":3629:3633   */\n      0x11\n        /* \"#utility.yul\":3626:3627   */\n      0x04\n        /* \"#utility.yul\":3619:3634   */\n      mstore\n        /* \"#utility.yul\":3653:3657   */\n      0x24\n        /* \"#utility.yul\":3650:3651   */\n      0x00\n        /* \"#utility.yul\":3643:3658   */\n      revert\n        /* \"#utility.yul\":3670:3864   */\n    tag_97:\n        /* \"#utility.yul\":3710:3714   */\n      0x00\n        /* \"#utility.yul\":3730:3750   */\n      tag_280\n        /* \"#utility.yul\":3748:3749   */\n      dup3\n        /* \"#utility.yul\":3730:3750   */\n      tag_204\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3725:3750   */\n      swap2\n      pop\n        /* \"#utility.yul\":3764:3784   */\n      tag_281\n        /* \"#utility.yul\":3782:3783   */\n      dup4\n        /* \"#utility.yul\":3764:3784   */\n      tag_204\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3759:3784   */\n      swap3\n      pop\n        /* \"#utility.yul\":3808:3809   */\n      dup3\n        /* \"#utility.yul\":3805:3806   */\n      dup3\n        /* \"#utility.yul\":3801:3810   */\n      sub\n        /* \"#utility.yul\":3793:3810   */\n      swap1\n      pop\n        /* \"#utility.yul\":3832:3833   */\n      dup2\n        /* \"#utility.yul\":3826:3830   */\n      dup2\n        /* \"#utility.yul\":3823:3834   */\n      gt\n        /* \"#utility.yul\":3820:3857   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3837:3855   */\n      tag_283\n      tag_214\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3820:3857   */\n    tag_282:\n        /* \"#utility.yul\":3670:3864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3870:4280   */\n    tag_99:\n        /* \"#utility.yul\":3910:3917   */\n      0x00\n        /* \"#utility.yul\":3933:3953   */\n      tag_285\n        /* \"#utility.yul\":3951:3952   */\n      dup3\n        /* \"#utility.yul\":3933:3953   */\n      tag_204\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3928:3953   */\n      swap2\n      pop\n        /* \"#utility.yul\":3967:3987   */\n      tag_286\n        /* \"#utility.yul\":3985:3986   */\n      dup4\n        /* \"#utility.yul\":3967:3987   */\n      tag_204\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3962:3987   */\n      swap3\n      pop\n        /* \"#utility.yul\":4022:4023   */\n      dup3\n        /* \"#utility.yul\":4019:4020   */\n      dup3\n        /* \"#utility.yul\":4015:4024   */\n      mul\n        /* \"#utility.yul\":4044:4074   */\n      tag_287\n        /* \"#utility.yul\":4062:4073   */\n      dup2\n        /* \"#utility.yul\":4044:4074   */\n      tag_204\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4033:4074   */\n      swap2\n      pop\n        /* \"#utility.yul\":4223:4224   */\n      dup3\n        /* \"#utility.yul\":4214:4221   */\n      dup3\n        /* \"#utility.yul\":4210:4225   */\n      div\n        /* \"#utility.yul\":4207:4208   */\n      dup5\n        /* \"#utility.yul\":4204:4226   */\n      eq\n        /* \"#utility.yul\":4184:4185   */\n      dup4\n        /* \"#utility.yul\":4177:4186   */\n      iszero\n        /* \"#utility.yul\":4157:4240   */\n      or\n        /* \"#utility.yul\":4134:4273   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":4253:4271   */\n      tag_289\n      tag_214\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4134:4273   */\n    tag_288:\n        /* \"#utility.yul\":3918:4280   */\n      pop\n        /* \"#utility.yul\":3870:4280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4286:4466   */\n    tag_215:\n        /* \"#utility.yul\":4334:4411   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4331:4332   */\n      0x00\n        /* \"#utility.yul\":4324:4412   */\n      mstore\n        /* \"#utility.yul\":4431:4435   */\n      0x12\n        /* \"#utility.yul\":4428:4429   */\n      0x04\n        /* \"#utility.yul\":4421:4436   */\n      mstore\n        /* \"#utility.yul\":4455:4459   */\n      0x24\n        /* \"#utility.yul\":4452:4453   */\n      0x00\n        /* \"#utility.yul\":4445:4460   */\n      revert\n        /* \"#utility.yul\":4472:4657   */\n    tag_101:\n        /* \"#utility.yul\":4512:4513   */\n      0x00\n        /* \"#utility.yul\":4529:4549   */\n      tag_292\n        /* \"#utility.yul\":4547:4548   */\n      dup3\n        /* \"#utility.yul\":4529:4549   */\n      tag_204\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4524:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4563:4583   */\n      tag_293\n        /* \"#utility.yul\":4581:4582   */\n      dup4\n        /* \"#utility.yul\":4563:4583   */\n      tag_204\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4558:4583   */\n      swap3\n      pop\n        /* \"#utility.yul\":4602:4603   */\n      dup3\n        /* \"#utility.yul\":4592:4627   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4607:4625   */\n      tag_295\n      tag_215\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4592:4627   */\n    tag_294:\n        /* \"#utility.yul\":4649:4650   */\n      dup3\n        /* \"#utility.yul\":4646:4647   */\n      dup3\n        /* \"#utility.yul\":4642:4651   */\n      div\n        /* \"#utility.yul\":4637:4651   */\n      swap1\n      pop\n        /* \"#utility.yul\":4472:4657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4663:4854   */\n    tag_103:\n        /* \"#utility.yul\":4703:4706   */\n      0x00\n        /* \"#utility.yul\":4722:4742   */\n      tag_297\n        /* \"#utility.yul\":4740:4741   */\n      dup3\n        /* \"#utility.yul\":4722:4742   */\n      tag_204\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4717:4742   */\n      swap2\n      pop\n        /* \"#utility.yul\":4756:4776   */\n      tag_298\n        /* \"#utility.yul\":4774:4775   */\n      dup4\n        /* \"#utility.yul\":4756:4776   */\n      tag_204\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4751:4776   */\n      swap3\n      pop\n        /* \"#utility.yul\":4799:4800   */\n      dup3\n        /* \"#utility.yul\":4796:4797   */\n      dup3\n        /* \"#utility.yul\":4792:4801   */\n      add\n        /* \"#utility.yul\":4785:4801   */\n      swap1\n      pop\n        /* \"#utility.yul\":4820:4823   */\n      dup1\n        /* \"#utility.yul\":4817:4818   */\n      dup3\n        /* \"#utility.yul\":4814:4824   */\n      gt\n        /* \"#utility.yul\":4811:4847   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4827:4845   */\n      tag_300\n      tag_214\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4811:4847   */\n    tag_299:\n        /* \"#utility.yul\":4663:4854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:5029   */\n    tag_216:\n        /* \"#utility.yul\":4944:4955   */\n      0x00\n        /* \"#utility.yul\":4978:4984   */\n      dup3\n        /* \"#utility.yul\":4973:4976   */\n      dup3\n        /* \"#utility.yul\":4966:4985   */\n      mstore\n        /* \"#utility.yul\":5018:5022   */\n      0x20\n        /* \"#utility.yul\":5013:5016   */\n      dup3\n        /* \"#utility.yul\":5009:5023   */\n      add\n        /* \"#utility.yul\":4994:5023   */\n      swap1\n      pop\n        /* \"#utility.yul\":4860:5029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5035:5260   */\n    tag_217:\n        /* \"#utility.yul\":5175:5209   */\n      0x576974686472617720616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":5171:5172   */\n      0x00\n        /* \"#utility.yul\":5163:5169   */\n      dup3\n        /* \"#utility.yul\":5159:5173   */\n      add\n        /* \"#utility.yul\":5152:5210   */\n      mstore\n        /* \"#utility.yul\":5244:5252   */\n      0x7468616e20300000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5239:5241   */\n      0x20\n        /* \"#utility.yul\":5231:5237   */\n      dup3\n        /* \"#utility.yul\":5227:5242   */\n      add\n        /* \"#utility.yul\":5220:5253   */\n      mstore\n        /* \"#utility.yul\":5035:5260   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5266:5632   */\n    tag_218:\n        /* \"#utility.yul\":5408:5411   */\n      0x00\n        /* \"#utility.yul\":5429:5496   */\n      tag_304\n        /* \"#utility.yul\":5493:5495   */\n      0x26\n        /* \"#utility.yul\":5488:5491   */\n      dup4\n        /* \"#utility.yul\":5429:5496   */\n      tag_216\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5422:5496   */\n      swap2\n      pop\n        /* \"#utility.yul\":5505:5598   */\n      tag_305\n        /* \"#utility.yul\":5594:5597   */\n      dup3\n        /* \"#utility.yul\":5505:5598   */\n      tag_217\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5623:5625   */\n      0x40\n        /* \"#utility.yul\":5618:5621   */\n      dup3\n        /* \"#utility.yul\":5614:5626   */\n      add\n        /* \"#utility.yul\":5607:5626   */\n      swap1\n      pop\n        /* \"#utility.yul\":5266:5632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5638:6057   */\n    tag_112:\n        /* \"#utility.yul\":5804:5808   */\n      0x00\n        /* \"#utility.yul\":5842:5844   */\n      0x20\n        /* \"#utility.yul\":5831:5840   */\n      dup3\n        /* \"#utility.yul\":5827:5845   */\n      add\n        /* \"#utility.yul\":5819:5845   */\n      swap1\n      pop\n        /* \"#utility.yul\":5891:5900   */\n      dup2\n        /* \"#utility.yul\":5885:5889   */\n      dup2\n        /* \"#utility.yul\":5881:5901   */\n      sub\n        /* \"#utility.yul\":5877:5878   */\n      0x00\n        /* \"#utility.yul\":5866:5875   */\n      dup4\n        /* \"#utility.yul\":5862:5879   */\n      add\n        /* \"#utility.yul\":5855:5902   */\n      mstore\n        /* \"#utility.yul\":5919:6050   */\n      tag_307\n        /* \"#utility.yul\":6045:6049   */\n      dup2\n        /* \"#utility.yul\":5919:6050   */\n      tag_218\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5911:6050   */\n      swap1\n      pop\n        /* \"#utility.yul\":5638:6057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6063:6395   */\n    tag_116:\n        /* \"#utility.yul\":6184:6188   */\n      0x00\n        /* \"#utility.yul\":6222:6224   */\n      0x40\n        /* \"#utility.yul\":6211:6220   */\n      dup3\n        /* \"#utility.yul\":6207:6225   */\n      add\n        /* \"#utility.yul\":6199:6225   */\n      swap1\n      pop\n        /* \"#utility.yul\":6235:6306   */\n      tag_309\n        /* \"#utility.yul\":6303:6304   */\n      0x00\n        /* \"#utility.yul\":6292:6301   */\n      dup4\n        /* \"#utility.yul\":6288:6305   */\n      add\n        /* \"#utility.yul\":6279:6285   */\n      dup6\n        /* \"#utility.yul\":6235:6306   */\n      tag_213\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6316:6388   */\n      tag_310\n        /* \"#utility.yul\":6384:6386   */\n      0x20\n        /* \"#utility.yul\":6373:6382   */\n      dup4\n        /* \"#utility.yul\":6369:6387   */\n      add\n        /* \"#utility.yul\":6360:6366   */\n      dup5\n        /* \"#utility.yul\":6316:6388   */\n      tag_205\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6063:6395   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6401:6491   */\n    tag_219:\n        /* \"#utility.yul\":6435:6442   */\n      0x00\n        /* \"#utility.yul\":6478:6483   */\n      dup2\n        /* \"#utility.yul\":6471:6484   */\n      iszero\n        /* \"#utility.yul\":6464:6485   */\n      iszero\n        /* \"#utility.yul\":6453:6485   */\n      swap1\n      pop\n        /* \"#utility.yul\":6401:6491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6497:6613   */\n    tag_220:\n        /* \"#utility.yul\":6567:6588   */\n      tag_313\n        /* \"#utility.yul\":6582:6587   */\n      dup2\n        /* \"#utility.yul\":6567:6588   */\n      tag_219\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6560:6565   */\n      dup2\n        /* \"#utility.yul\":6557:6589   */\n      eq\n        /* \"#utility.yul\":6547:6607   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":6603:6604   */\n      0x00\n        /* \"#utility.yul\":6600:6601   */\n      dup1\n        /* \"#utility.yul\":6593:6605   */\n      revert\n        /* \"#utility.yul\":6547:6607   */\n    tag_314:\n        /* \"#utility.yul\":6497:6613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6619:6756   */\n    tag_221:\n        /* \"#utility.yul\":6673:6678   */\n      0x00\n        /* \"#utility.yul\":6704:6710   */\n      dup2\n        /* \"#utility.yul\":6698:6711   */\n      mload\n        /* \"#utility.yul\":6689:6711   */\n      swap1\n      pop\n        /* \"#utility.yul\":6720:6750   */\n      tag_316\n        /* \"#utility.yul\":6744:6749   */\n      dup2\n        /* \"#utility.yul\":6720:6750   */\n      tag_220\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6619:6756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6762:7107   */\n    tag_120:\n        /* \"#utility.yul\":6829:6835   */\n      0x00\n        /* \"#utility.yul\":6878:6880   */\n      0x20\n        /* \"#utility.yul\":6866:6875   */\n      dup3\n        /* \"#utility.yul\":6857:6864   */\n      dup5\n        /* \"#utility.yul\":6853:6876   */\n      sub\n        /* \"#utility.yul\":6849:6881   */\n      slt\n        /* \"#utility.yul\":6846:6965   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":6884:6963   */\n      tag_319\n      tag_198\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6846:6965   */\n    tag_318:\n        /* \"#utility.yul\":7004:7005   */\n      0x00\n        /* \"#utility.yul\":7029:7090   */\n      tag_320\n        /* \"#utility.yul\":7082:7089   */\n      dup5\n        /* \"#utility.yul\":7073:7079   */\n      dup3\n        /* \"#utility.yul\":7062:7071   */\n      dup6\n        /* \"#utility.yul\":7058:7080   */\n      add\n        /* \"#utility.yul\":7029:7090   */\n      tag_221\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7019:7090   */\n      swap2\n      pop\n        /* \"#utility.yul\":6975:7100   */\n      pop\n        /* \"#utility.yul\":6762:7107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7113:7285   */\n    tag_222:\n        /* \"#utility.yul\":7253:7277   */\n      0x52657761726420726174652073686f756c64203e203000000000000000000000\n        /* \"#utility.yul\":7249:7250   */\n      0x00\n        /* \"#utility.yul\":7241:7247   */\n      dup3\n        /* \"#utility.yul\":7237:7251   */\n      add\n        /* \"#utility.yul\":7230:7278   */\n      mstore\n        /* \"#utility.yul\":7113:7285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7291:7657   */\n    tag_223:\n        /* \"#utility.yul\":7433:7436   */\n      0x00\n        /* \"#utility.yul\":7454:7521   */\n      tag_323\n        /* \"#utility.yul\":7518:7520   */\n      0x16\n        /* \"#utility.yul\":7513:7516   */\n      dup4\n        /* \"#utility.yul\":7454:7521   */\n      tag_216\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7447:7521   */\n      swap2\n      pop\n        /* \"#utility.yul\":7530:7623   */\n      tag_324\n        /* \"#utility.yul\":7619:7622   */\n      dup3\n        /* \"#utility.yul\":7530:7623   */\n      tag_222\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7648:7650   */\n      0x20\n        /* \"#utility.yul\":7643:7646   */\n      dup3\n        /* \"#utility.yul\":7639:7651   */\n      add\n        /* \"#utility.yul\":7632:7651   */\n      swap1\n      pop\n        /* \"#utility.yul\":7291:7657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7663:8082   */\n    tag_138:\n        /* \"#utility.yul\":7829:7833   */\n      0x00\n        /* \"#utility.yul\":7867:7869   */\n      0x20\n        /* \"#utility.yul\":7856:7865   */\n      dup3\n        /* \"#utility.yul\":7852:7870   */\n      add\n        /* \"#utility.yul\":7844:7870   */\n      swap1\n      pop\n        /* \"#utility.yul\":7916:7925   */\n      dup2\n        /* \"#utility.yul\":7910:7914   */\n      dup2\n        /* \"#utility.yul\":7906:7926   */\n      sub\n        /* \"#utility.yul\":7902:7903   */\n      0x00\n        /* \"#utility.yul\":7891:7900   */\n      dup4\n        /* \"#utility.yul\":7887:7904   */\n      add\n        /* \"#utility.yul\":7880:7927   */\n      mstore\n        /* \"#utility.yul\":7944:8075   */\n      tag_326\n        /* \"#utility.yul\":8070:8074   */\n      dup2\n        /* \"#utility.yul\":7944:8075   */\n      tag_223\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7936:8075   */\n      swap1\n      pop\n        /* \"#utility.yul\":7663:8082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8088:8231   */\n    tag_224:\n        /* \"#utility.yul\":8145:8150   */\n      0x00\n        /* \"#utility.yul\":8176:8182   */\n      dup2\n        /* \"#utility.yul\":8170:8183   */\n      mload\n        /* \"#utility.yul\":8161:8183   */\n      swap1\n      pop\n        /* \"#utility.yul\":8192:8225   */\n      tag_328\n        /* \"#utility.yul\":8219:8224   */\n      dup2\n        /* \"#utility.yul\":8192:8225   */\n      tag_206\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8088:8231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8237:8588   */\n    tag_143:\n        /* \"#utility.yul\":8307:8313   */\n      0x00\n        /* \"#utility.yul\":8356:8358   */\n      0x20\n        /* \"#utility.yul\":8344:8353   */\n      dup3\n        /* \"#utility.yul\":8335:8342   */\n      dup5\n        /* \"#utility.yul\":8331:8354   */\n      sub\n        /* \"#utility.yul\":8327:8359   */\n      slt\n        /* \"#utility.yul\":8324:8443   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":8362:8441   */\n      tag_331\n      tag_198\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8324:8443   */\n    tag_330:\n        /* \"#utility.yul\":8482:8483   */\n      0x00\n        /* \"#utility.yul\":8507:8571   */\n      tag_332\n        /* \"#utility.yul\":8563:8570   */\n      dup5\n        /* \"#utility.yul\":8554:8560   */\n      dup3\n        /* \"#utility.yul\":8543:8552   */\n      dup6\n        /* \"#utility.yul\":8539:8561   */\n      add\n        /* \"#utility.yul\":8507:8571   */\n      tag_224\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":8497:8571   */\n      swap2\n      pop\n        /* \"#utility.yul\":8453:8581   */\n      pop\n        /* \"#utility.yul\":8237:8588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8594:8765   */\n    tag_225:\n        /* \"#utility.yul\":8734:8757   */\n      0x4e6f206d6f72652072657761726420746f6b656e730000000000000000000000\n        /* \"#utility.yul\":8730:8731   */\n      0x00\n        /* \"#utility.yul\":8722:8728   */\n      dup3\n        /* \"#utility.yul\":8718:8732   */\n      add\n        /* \"#utility.yul\":8711:8758   */\n      mstore\n        /* \"#utility.yul\":8594:8765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8771:9137   */\n    tag_226:\n        /* \"#utility.yul\":8913:8916   */\n      0x00\n        /* \"#utility.yul\":8934:9001   */\n      tag_335\n        /* \"#utility.yul\":8998:9000   */\n      0x15\n        /* \"#utility.yul\":8993:8996   */\n      dup4\n        /* \"#utility.yul\":8934:9001   */\n      tag_216\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8927:9001   */\n      swap2\n      pop\n        /* \"#utility.yul\":9010:9103   */\n      tag_336\n        /* \"#utility.yul\":9099:9102   */\n      dup3\n        /* \"#utility.yul\":9010:9103   */\n      tag_225\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9128:9130   */\n      0x20\n        /* \"#utility.yul\":9123:9126   */\n      dup3\n        /* \"#utility.yul\":9119:9131   */\n      add\n        /* \"#utility.yul\":9112:9131   */\n      swap1\n      pop\n        /* \"#utility.yul\":8771:9137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9143:9562   */\n    tag_147:\n        /* \"#utility.yul\":9309:9313   */\n      0x00\n        /* \"#utility.yul\":9347:9349   */\n      0x20\n        /* \"#utility.yul\":9336:9345   */\n      dup3\n        /* \"#utility.yul\":9332:9350   */\n      add\n        /* \"#utility.yul\":9324:9350   */\n      swap1\n      pop\n        /* \"#utility.yul\":9396:9405   */\n      dup2\n        /* \"#utility.yul\":9390:9394   */\n      dup2\n        /* \"#utility.yul\":9386:9406   */\n      sub\n        /* \"#utility.yul\":9382:9383   */\n      0x00\n        /* \"#utility.yul\":9371:9380   */\n      dup4\n        /* \"#utility.yul\":9367:9384   */\n      add\n        /* \"#utility.yul\":9360:9407   */\n      mstore\n        /* \"#utility.yul\":9424:9555   */\n      tag_338\n        /* \"#utility.yul\":9550:9554   */\n      dup2\n        /* \"#utility.yul\":9424:9555   */\n      tag_226\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":9416:9555   */\n      swap1\n      pop\n        /* \"#utility.yul\":9143:9562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9568:9790   */\n    tag_227:\n        /* \"#utility.yul\":9708:9742   */\n      0x5374616b6520616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":9704:9705   */\n      0x00\n        /* \"#utility.yul\":9696:9702   */\n      dup3\n        /* \"#utility.yul\":9692:9706   */\n      add\n        /* \"#utility.yul\":9685:9743   */\n      mstore\n        /* \"#utility.yul\":9777:9782   */\n      0x6e20300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9772:9774   */\n      0x20\n        /* \"#utility.yul\":9764:9770   */\n      dup3\n        /* \"#utility.yul\":9760:9775   */\n      add\n        /* \"#utility.yul\":9753:9783   */\n      mstore\n        /* \"#utility.yul\":9568:9790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9796:10162   */\n    tag_228:\n        /* \"#utility.yul\":9938:9941   */\n      0x00\n        /* \"#utility.yul\":9959:10026   */\n      tag_341\n        /* \"#utility.yul\":10023:10025   */\n      0x23\n        /* \"#utility.yul\":10018:10021   */\n      dup4\n        /* \"#utility.yul\":9959:10026   */\n      tag_216\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9952:10026   */\n      swap2\n      pop\n        /* \"#utility.yul\":10035:10128   */\n      tag_342\n        /* \"#utility.yul\":10124:10127   */\n      dup3\n        /* \"#utility.yul\":10035:10128   */\n      tag_227\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10153:10155   */\n      0x40\n        /* \"#utility.yul\":10148:10151   */\n      dup3\n        /* \"#utility.yul\":10144:10156   */\n      add\n        /* \"#utility.yul\":10137:10156   */\n      swap1\n      pop\n        /* \"#utility.yul\":9796:10162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10168:10587   */\n    tag_168:\n        /* \"#utility.yul\":10334:10338   */\n      0x00\n        /* \"#utility.yul\":10372:10374   */\n      0x20\n        /* \"#utility.yul\":10361:10370   */\n      dup3\n        /* \"#utility.yul\":10357:10375   */\n      add\n        /* \"#utility.yul\":10349:10375   */\n      swap1\n      pop\n        /* \"#utility.yul\":10421:10430   */\n      dup2\n        /* \"#utility.yul\":10415:10419   */\n      dup2\n        /* \"#utility.yul\":10411:10431   */\n      sub\n        /* \"#utility.yul\":10407:10408   */\n      0x00\n        /* \"#utility.yul\":10396:10405   */\n      dup4\n        /* \"#utility.yul\":10392:10409   */\n      add\n        /* \"#utility.yul\":10385:10432   */\n      mstore\n        /* \"#utility.yul\":10449:10580   */\n      tag_344\n        /* \"#utility.yul\":10575:10579   */\n      dup2\n        /* \"#utility.yul\":10449:10580   */\n      tag_228\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10441:10580   */\n      swap1\n      pop\n        /* \"#utility.yul\":10168:10587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10593:11035   */\n    tag_170:\n        /* \"#utility.yul\":10742:10746   */\n      0x00\n        /* \"#utility.yul\":10780:10782   */\n      0x60\n        /* \"#utility.yul\":10769:10778   */\n      dup3\n        /* \"#utility.yul\":10765:10783   */\n      add\n        /* \"#utility.yul\":10757:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10793:10864   */\n      tag_346\n        /* \"#utility.yul\":10861:10862   */\n      0x00\n        /* \"#utility.yul\":10850:10859   */\n      dup4\n        /* \"#utility.yul\":10846:10863   */\n      add\n        /* \"#utility.yul\":10837:10843   */\n      dup7\n        /* \"#utility.yul\":10793:10864   */\n      tag_213\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10874:10946   */\n      tag_347\n        /* \"#utility.yul\":10942:10944   */\n      0x20\n        /* \"#utility.yul\":10931:10940   */\n      dup4\n        /* \"#utility.yul\":10927:10945   */\n      add\n        /* \"#utility.yul\":10918:10924   */\n      dup6\n        /* \"#utility.yul\":10874:10946   */\n      tag_213\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":10956:11028   */\n      tag_348\n        /* \"#utility.yul\":11024:11026   */\n      0x40\n        /* \"#utility.yul\":11013:11022   */\n      dup4\n        /* \"#utility.yul\":11009:11027   */\n      add\n        /* \"#utility.yul\":11000:11006   */\n      dup5\n        /* \"#utility.yul\":10956:11028   */\n      tag_205\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10593:11035   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11041:11211   */\n    tag_229:\n        /* \"#utility.yul\":11181:11203   */\n      0x52657761726473206e6f742066696e6973686564000000000000000000000000\n        /* \"#utility.yul\":11177:11178   */\n      0x00\n        /* \"#utility.yul\":11169:11175   */\n      dup3\n        /* \"#utility.yul\":11165:11179   */\n      add\n        /* \"#utility.yul\":11158:11204   */\n      mstore\n        /* \"#utility.yul\":11041:11211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11217:11583   */\n    tag_230:\n        /* \"#utility.yul\":11359:11362   */\n      0x00\n        /* \"#utility.yul\":11380:11447   */\n      tag_351\n        /* \"#utility.yul\":11444:11446   */\n      0x14\n        /* \"#utility.yul\":11439:11442   */\n      dup4\n        /* \"#utility.yul\":11380:11447   */\n      tag_216\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":11373:11447   */\n      swap2\n      pop\n        /* \"#utility.yul\":11456:11549   */\n      tag_352\n        /* \"#utility.yul\":11545:11548   */\n      dup3\n        /* \"#utility.yul\":11456:11549   */\n      tag_229\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":11574:11576   */\n      0x20\n        /* \"#utility.yul\":11569:11572   */\n      dup3\n        /* \"#utility.yul\":11565:11577   */\n      add\n        /* \"#utility.yul\":11558:11577   */\n      swap1\n      pop\n        /* \"#utility.yul\":11217:11583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11589:12008   */\n    tag_181:\n        /* \"#utility.yul\":11755:11759   */\n      0x00\n        /* \"#utility.yul\":11793:11795   */\n      0x20\n        /* \"#utility.yul\":11782:11791   */\n      dup3\n        /* \"#utility.yul\":11778:11796   */\n      add\n        /* \"#utility.yul\":11770:11796   */\n      swap1\n      pop\n        /* \"#utility.yul\":11842:11851   */\n      dup2\n        /* \"#utility.yul\":11836:11840   */\n      dup2\n        /* \"#utility.yul\":11832:11852   */\n      sub\n        /* \"#utility.yul\":11828:11829   */\n      0x00\n        /* \"#utility.yul\":11817:11826   */\n      dup4\n        /* \"#utility.yul\":11813:11830   */\n      add\n        /* \"#utility.yul\":11806:11853   */\n      mstore\n        /* \"#utility.yul\":11870:12001   */\n      tag_354\n        /* \"#utility.yul\":11996:12000   */\n      dup2\n        /* \"#utility.yul\":11870:12001   */\n      tag_230\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11862:12001   */\n      swap1\n      pop\n        /* \"#utility.yul\":11589:12008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c3c92ebc04d5a8c6290fbefb755f7546712e3e7b1f89c338c74ed497fcdfb42964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:6",
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b506040516118313803806118318339818101604052810190610031919061013d565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061017b565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61010c826100e3565b9050919050565b61011c81610102565b8114610126575f80fd5b50565b5f8151905061013781610113565b92915050565b5f8060408385031215610153576101526100df565b5b5f61016085828601610129565b925050602061017185828601610129565b9150509250929050565b60805160a0516116796101b85f395f81816108d501528181610b460152610faf01525f818161065a01528181610c020152610d7c01526116795ff3fe608060405234801561000f575f80fd5b5060043610610129575f3560e01c80637519ab50116100ab578063bfeec0561161006f578063bfeec0561461030b578063cc1a378f1461033b578063cd3daf9d14610357578063d1af0c7d14610375578063d7f2ddbb1461039357610129565b80637519ab50146102775780637b0a47ee146102955780638da5cb5b146102b35780639a2a3626146102d1578063a694fc3a146102ef57610129565b80633c6b16ab116100f25780633c6b16ab146101e55780633d18b9121461020157806367d3b4881461020b57806370a082311461022957806372f702f31461025957610129565b80628cc2621461012d5780630700037d1461015d5780630fb5a6b41461018d57806318160ddd146101ab5780632e1a7d4d146101c9575b5f80fd5b61014760048036038101906101429190611066565b6103b1565b60405161015491906110a9565b60405180910390f35b61017760048036038101906101729190611066565b6104ab565b60405161018491906110a9565b60405180910390f35b6101956104c0565b6040516101a291906110a9565b60405180910390f35b6101b36104c6565b6040516101c091906110a9565b60405180910390f35b6101e360048036038101906101de91906110ec565b6104cc565b005b6101ff60048036038101906101fa91906110ec565b6106f8565b005b6102096109da565b005b610213610be5565b60405161022091906110a9565b60405180910390f35b610243600480360381019061023e9190611066565b610beb565b60405161025091906110a9565b60405180910390f35b610261610c00565b60405161026e9190611172565b60405180910390f35b61027f610c24565b60405161028c91906110a9565b60405180910390f35b61029d610c2a565b6040516102aa91906110a9565b60405180910390f35b6102bb610c30565b6040516102c8919061119a565b60405180910390f35b6102d9610c53565b6040516102e691906110a9565b60405180910390f35b610309600480360381019061030491906110ec565b610c59565b005b61032560048036038101906103209190611066565b610e87565b60405161033291906110a9565b60405180910390f35b610355600480360381019061035091906110ec565b610e9c565b005b61035f610f40565b60405161036c91906110a9565b60405180910390f35b61037d610fad565b60405161038a9190611172565b60405180910390f35b61039b610fd1565b6040516103a891906110a9565b60405180910390f35b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461043f610f40565b61044991906111e0565b60095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546104919190611213565b61049b9190611281565b6104a591906112b1565b50919050565b6007602052805f5260405f205f915090505481565b60015481565b60085481565b336104d5610f40565b6005819055506104e3610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105ab57610525816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f82116105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e490611364565b60405180910390fd5b8160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461063991906111e0565b925050819055508160085f82825461065191906111e0565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016106b3929190611382565b6020604051808303815f875af11580156106cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f391906113de565b505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074e575f80fd5b5f610757610f40565b600581905550610765610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461082d576107a7816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b42600254101561085057600154826108459190611281565b60048190555061088f565b5f4260025461085f91906111e0565b60045461086c9190611213565b9050600154838261087d91906112b1565b6108879190611281565b600481905550505b5f600454116108d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ca90611453565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161092c919061119a565b602060405180830381865afa158015610947573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096b9190611485565b60015460045461097b9190611213565b106109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b2906114fa565b60405180910390fd5b600154426109c991906112b1565b600281905550426003819055505050565b336109e3610f40565b6005819055506109f1610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab957610a33816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811115610be1575f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b9f929190611382565b6020604051808303815f875af1158015610bbb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bdf91906113de565b505b5050565b60025481565b6009602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b60045481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b33610c62610f40565b600581905550610c70610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d3857610cb2816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7190611588565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610dd7939291906115a6565b6020604051808303815f875af1158015610df3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e1791906113de565b508160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e6491906112b1565b925050819055508160085f828254610e7c91906112b1565b925050819055505050565b6006602052805f5260405f205f915090505481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef2575f80fd5b4260025410610f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2d90611625565b60405180910390fd5b8060018190555050565b5f8060085403610f54576005549050610faa565b600854670de0b6b3a7640000600354610f6f42600254610ff0565b610f7991906111e0565b600454610f869190611213565b610f909190611213565b610f9a9190611281565b600554610fa791906112b1565b90505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600354610fe142600254610ff0565b610feb91906111e0565b905090565b5f818310610ffe5781611000565b825b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110358261100c565b9050919050565b6110458161102b565b811461104f575f80fd5b50565b5f813590506110608161103c565b92915050565b5f6020828403121561107b5761107a611008565b5b5f61108884828501611052565b91505092915050565b5f819050919050565b6110a381611091565b82525050565b5f6020820190506110bc5f83018461109a565b92915050565b6110cb81611091565b81146110d5575f80fd5b50565b5f813590506110e6816110c2565b92915050565b5f6020828403121561110157611100611008565b5b5f61110e848285016110d8565b91505092915050565b5f819050919050565b5f61113a6111356111308461100c565b611117565b61100c565b9050919050565b5f61114b82611120565b9050919050565b5f61115c82611141565b9050919050565b61116c81611152565b82525050565b5f6020820190506111855f830184611163565b92915050565b6111948161102b565b82525050565b5f6020820190506111ad5f83018461118b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111ea82611091565b91506111f583611091565b925082820390508181111561120d5761120c6111b3565b5b92915050565b5f61121d82611091565b915061122883611091565b925082820261123681611091565b9150828204841483151761124d5761124c6111b3565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61128b82611091565b915061129683611091565b9250826112a6576112a5611254565b5b828204905092915050565b5f6112bb82611091565b91506112c683611091565b92508282019050808211156112de576112dd6111b3565b5b92915050565b5f82825260208201905092915050565b7f576974686472617720616d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f61134e6026836112e4565b9150611359826112f4565b604082019050919050565b5f6020820190508181035f83015261137b81611342565b9050919050565b5f6040820190506113955f83018561118b565b6113a2602083018461109a565b9392505050565b5f8115159050919050565b6113bd816113a9565b81146113c7575f80fd5b50565b5f815190506113d8816113b4565b92915050565b5f602082840312156113f3576113f2611008565b5b5f611400848285016113ca565b91505092915050565b7f52657761726420726174652073686f756c64203e2030000000000000000000005f82015250565b5f61143d6016836112e4565b915061144882611409565b602082019050919050565b5f6020820190508181035f83015261146a81611431565b9050919050565b5f8151905061147f816110c2565b92915050565b5f6020828403121561149a57611499611008565b5b5f6114a784828501611471565b91505092915050565b7f4e6f206d6f72652072657761726420746f6b656e7300000000000000000000005f82015250565b5f6114e46015836112e4565b91506114ef826114b0565b602082019050919050565b5f6020820190508181035f830152611511816114d8565b9050919050565b7f5374616b6520616d6f756e74206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f6115726023836112e4565b915061157d82611518565b604082019050919050565b5f6020820190508181035f83015261159f81611566565b9050919050565b5f6060820190506115b95f83018661118b565b6115c6602083018561118b565b6115d3604083018461109a565b949350505050565b7f52657761726473206e6f742066696e69736865640000000000000000000000005f82015250565b5f61160f6014836112e4565b915061161a826115db565b602082019050919050565b5f6020820190508181035f83015261163c81611603565b905091905056fea2646970667358221220c3c92ebc04d5a8c6290fbefb755f7546712e3e7b1f89c338c74ed497fcdfb42964736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1831 CODESIZE SUB DUP1 PUSH2 0x1831 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x13D JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x17B JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C DUP3 PUSH2 0xE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C DUP2 PUSH2 0x102 JUMP JUMPDEST DUP2 EQ PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x137 DUP2 PUSH2 0x113 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0xDF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160 DUP6 DUP3 DUP7 ADD PUSH2 0x129 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x171 DUP6 DUP3 DUP7 ADD PUSH2 0x129 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1679 PUSH2 0x1B8 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x8D5 ADD MSTORE DUP2 DUP2 PUSH2 0xB46 ADD MSTORE PUSH2 0xFAF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x65A ADD MSTORE DUP2 DUP2 PUSH2 0xC02 ADD MSTORE PUSH2 0xD7C ADD MSTORE PUSH2 0x1679 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7519AB50 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBFEEC056 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBFEEC056 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xD7F2DDBB EQ PUSH2 0x393 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x9A2A3626 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2EF JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x259 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x43F PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x4D5 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x4E3 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AB JUMPI PUSH2 0x525 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E4 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B3 SWAP3 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x74E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x757 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x765 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82D JUMPI PUSH2 0x7A7 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x850 JUMPI PUSH1 0x1 SLOAD DUP3 PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x88F JUMP JUMPDEST PUSH0 TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP4 DUP3 PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH1 0x4 SLOAD GT PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST LT PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH2 0x9E3 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x9F1 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH2 0xA33 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xBE1 JUMPI PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0xC62 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xC70 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD38 JUMPI PUSH2 0xCB2 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD71 SWAP1 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE17 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE7C SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 SLOAD SUB PUSH2 0xF54 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD PUSH2 0xF6F TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xF90 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH2 0xFE1 TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xFEB SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xFFE JUMPI DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1035 DUP3 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP2 EQ PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1088 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A3 DUP2 PUSH2 0x1091 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BC PUSH0 DUP4 ADD DUP5 PUSH2 0x109A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0x1091 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E6 DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110E DUP5 DUP3 DUP6 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x113A PUSH2 0x1135 PUSH2 0x1130 DUP5 PUSH2 0x100C JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x114B DUP3 PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x115C DUP3 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1152 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1185 PUSH0 DUP4 ADD DUP5 PUSH2 0x1163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1194 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11AD PUSH0 DUP4 ADD DUP5 PUSH2 0x118B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11EA DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F5 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x120D JUMPI PUSH2 0x120C PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121D DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x1228 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1236 DUP2 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0x1254 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C6 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DD PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x576974686472617720616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x134E PUSH1 0x26 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP3 PUSH2 0x12F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH0 DUP4 ADD DUP6 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x109A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x13A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0x13B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1400 DUP5 DUP3 DUP6 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52657761726420726174652073686F756C64203E203000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x143D PUSH1 0x16 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1448 DUP3 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x146A DUP2 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x147F DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149A JUMPI PUSH2 0x1499 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206D6F72652072657761726420746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E4 PUSH1 0x15 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14EF DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1511 DUP2 PUSH2 0x14D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1572 PUSH1 0x23 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x157D DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159F DUP2 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15B9 PUSH0 DUP4 ADD DUP7 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x15C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x15D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x109A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x52657761726473206E6F742066696E6973686564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x160F PUSH1 0x14 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x161A DUP3 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x163C DUP2 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC9 0x2E 0xBC DIV 0xD5 0xA8 0xC6 0x29 0xF 0xBE 0xFB PUSH22 0x5F7546712E3E7B1F89C338C74ED497FCDFB42964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "115:4188:5:-:0;;;857:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;947:13;925:36;;;;;;;;;;993:13;971:36;;;;;;;;;;1025:10;1017:5;;:18;;;;;;;;;;;;;;;;;;857:224;;115:4188;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;115:4188:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_min_1194": {
									"entryPoint": 4080,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_820": {
									"entryPoint": 3051,
									"id": 820,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@duration_798": {
									"entryPoint": 1216,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_1058": {
									"entryPoint": 945,
									"id": 1058,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@finishAt_800": {
									"entryPoint": 3045,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getReward_1177": {
									"entryPoint": 2522,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastRewardApplayTime_1104": {
									"entryPoint": 4049,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@notifyRewardAmount_956": {
									"entryPoint": 1784,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_796": {
									"entryPoint": 3120,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_1089": {
									"entryPoint": 3904,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardPertTokenStored_806": {
									"entryPoint": 3155,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_804": {
									"entryPoint": 3114,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_794": {
									"entryPoint": 4013,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_814": {
									"entryPoint": 1195,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardsDuration_876": {
									"entryPoint": 3740,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_996": {
									"entryPoint": 3161,
									"id": 996,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_791": {
									"entryPoint": 3072,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_816": {
									"entryPoint": 1222,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatedAt_802": {
									"entryPoint": 3108,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPertPaid_810": {
									"entryPoint": 3719,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1032": {
									"entryPoint": 1228,
									"id": 1032,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c": {
									"entryPoint": 5129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12011:6",
										"nodeType": "YulBlock",
										"src": "0:12011:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1221:32:6",
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nativeSrc": "1231:16:6",
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:6",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:6",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:6",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nativeSrc": "1324:53:6",
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nativeSrc": "1346:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nativeSrc": "1334:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:6",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nativeSrc": "1481:124:6",
													"nodeType": "YulBlock",
													"src": "1481:124:6",
													"statements": [
														{
															"nativeSrc": "1491:26:6",
															"nodeType": "YulAssignment",
															"src": "1491:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nativeSrc": "1499:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:6"
																		},
																		"nativeSrc": "1580:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:6"
																},
																"nativeSrc": "1527:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:6"
															},
															"nativeSrc": "1527:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:6",
														"nodeType": "YulTypedName",
														"src": "1453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:6",
														"nodeType": "YulTypedName",
														"src": "1465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:6",
														"nodeType": "YulTypedName",
														"src": "1476:4:6",
														"type": ""
													}
												],
												"src": "1383:222:6"
											},
											{
												"body": {
													"nativeSrc": "1654:79:6",
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:6",
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nativeSrc": "1713:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nativeSrc": "1713:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nativeSrc": "1684:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nativeSrc": "1674:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nativeSrc": "1667:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nativeSrc": "1664:63:6",
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:6",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nativeSrc": "1791:87:6",
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nativeSrc": "1801:29:6",
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nativeSrc": "1810:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nativeSrc": "1839:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nativeSrc": "1839:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:6",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:6",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:6",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nativeSrc": "1950:263:6",
													"nodeType": "YulBlock",
													"src": "1950:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:6",
																"nodeType": "YulBlock",
																"src": "1996:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:6"
																			},
																			"nativeSrc": "1998:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:6"
																		},
																		"nativeSrc": "1998:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:6"
																		},
																		"nativeSrc": "1967:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:6"
																},
																"nativeSrc": "1963:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:6"
															},
															"nativeSrc": "1960:119:6",
															"nodeType": "YulIf",
															"src": "1960:119:6"
														},
														{
															"nativeSrc": "2089:117:6",
															"nodeType": "YulBlock",
															"src": "2089:117:6",
															"statements": [
																{
																	"nativeSrc": "2104:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:6"
																				},
																				"nativeSrc": "2164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:6"
																		},
																		"nativeSrc": "2143:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:6",
														"nodeType": "YulTypedName",
														"src": "1920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:6",
														"nodeType": "YulTypedName",
														"src": "1931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:6",
														"nodeType": "YulTypedName",
														"src": "1943:6:6",
														"type": ""
													}
												],
												"src": "1884:329:6"
											},
											{
												"body": {
													"nativeSrc": "2251:28:6",
													"nodeType": "YulBlock",
													"src": "2251:28:6",
													"statements": [
														{
															"nativeSrc": "2261:12:6",
															"nodeType": "YulAssignment",
															"src": "2261:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:6",
																"nodeType": "YulIdentifier",
																"src": "2268:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:6",
														"nodeType": "YulTypedName",
														"src": "2237:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:6",
														"nodeType": "YulTypedName",
														"src": "2247:3:6",
														"type": ""
													}
												],
												"src": "2219:60:6"
											},
											{
												"body": {
													"nativeSrc": "2345:82:6",
													"nodeType": "YulBlock",
													"src": "2345:82:6",
													"statements": [
														{
															"nativeSrc": "2355:66:6",
															"nodeType": "YulAssignment",
															"src": "2355:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:6"
																				},
																				"nativeSrc": "2395:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:6"
																		},
																		"nativeSrc": "2386:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:6"
																},
																"nativeSrc": "2368:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:6",
														"nodeType": "YulTypedName",
														"src": "2325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:6",
														"nodeType": "YulTypedName",
														"src": "2335:9:6",
														"type": ""
													}
												],
												"src": "2285:142:6"
											},
											{
												"body": {
													"nativeSrc": "2493:66:6",
													"nodeType": "YulBlock",
													"src": "2493:66:6",
													"statements": [
														{
															"nativeSrc": "2503:50:6",
															"nodeType": "YulAssignment",
															"src": "2503:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:6"
																},
																"nativeSrc": "2516:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:6",
														"nodeType": "YulTypedName",
														"src": "2473:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:6",
														"nodeType": "YulTypedName",
														"src": "2483:9:6",
														"type": ""
													}
												],
												"src": "2433:126:6"
											},
											{
												"body": {
													"nativeSrc": "2639:66:6",
													"nodeType": "YulBlock",
													"src": "2639:66:6",
													"statements": [
														{
															"nativeSrc": "2649:50:6",
															"nodeType": "YulAssignment",
															"src": "2649:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2693:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2662:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:6"
																},
																"nativeSrc": "2662:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2662:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2649:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "2565:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:6",
														"nodeType": "YulTypedName",
														"src": "2619:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2629:9:6",
														"nodeType": "YulTypedName",
														"src": "2629:9:6",
														"type": ""
													}
												],
												"src": "2565:140:6"
											},
											{
												"body": {
													"nativeSrc": "2790:80:6",
													"nodeType": "YulBlock",
													"src": "2790:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2807:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2857:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "2812:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:6"
																		},
																		"nativeSrc": "2812:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:6"
																},
																"nativeSrc": "2800:64:6",
																"nodeType": "YulFunctionCall",
																"src": "2800:64:6"
															},
															"nativeSrc": "2800:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "2711:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2778:5:6",
														"nodeType": "YulTypedName",
														"src": "2778:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2785:3:6",
														"nodeType": "YulTypedName",
														"src": "2785:3:6",
														"type": ""
													}
												],
												"src": "2711:159:6"
											},
											{
												"body": {
													"nativeSrc": "2988:138:6",
													"nodeType": "YulBlock",
													"src": "2988:138:6",
													"statements": [
														{
															"nativeSrc": "2998:26:6",
															"nodeType": "YulAssignment",
															"src": "2998:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3010:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3006:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:6"
																},
																"nativeSrc": "3006:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3006:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2998:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3092:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3105:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3116:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:6"
																		},
																		"nativeSrc": "3101:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "3034:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:6"
																},
																"nativeSrc": "3034:85:6",
																"nodeType": "YulFunctionCall",
																"src": "3034:85:6"
															},
															"nativeSrc": "3034:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "2876:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:6",
														"nodeType": "YulTypedName",
														"src": "2960:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2972:6:6",
														"nodeType": "YulTypedName",
														"src": "2972:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2983:4:6",
														"nodeType": "YulTypedName",
														"src": "2983:4:6",
														"type": ""
													}
												],
												"src": "2876:250:6"
											},
											{
												"body": {
													"nativeSrc": "3197:53:6",
													"nodeType": "YulBlock",
													"src": "3197:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3214:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3237:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3219:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3219:17:6"
																		},
																		"nativeSrc": "3219:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3207:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:6"
																},
																"nativeSrc": "3207:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3207:37:6"
															},
															"nativeSrc": "3207:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3207:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3132:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3185:5:6",
														"nodeType": "YulTypedName",
														"src": "3185:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3192:3:6",
														"nodeType": "YulTypedName",
														"src": "3192:3:6",
														"type": ""
													}
												],
												"src": "3132:118:6"
											},
											{
												"body": {
													"nativeSrc": "3354:124:6",
													"nodeType": "YulBlock",
													"src": "3354:124:6",
													"statements": [
														{
															"nativeSrc": "3364:26:6",
															"nodeType": "YulAssignment",
															"src": "3364:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:6"
																},
																"nativeSrc": "3372:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3444:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3457:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3468:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3453:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:6"
																		},
																		"nativeSrc": "3453:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3400:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3400:43:6"
																},
																"nativeSrc": "3400:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3400:71:6"
															},
															"nativeSrc": "3400:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3400:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3256:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:6",
														"nodeType": "YulTypedName",
														"src": "3326:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:6",
														"nodeType": "YulTypedName",
														"src": "3338:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:6",
														"nodeType": "YulTypedName",
														"src": "3349:4:6",
														"type": ""
													}
												],
												"src": "3256:222:6"
											},
											{
												"body": {
													"nativeSrc": "3512:152:6",
													"nodeType": "YulBlock",
													"src": "3512:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3529:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3529:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3532:77:6",
																		"nodeType": "YulLiteral",
																		"src": "3532:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3522:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:6"
																},
																"nativeSrc": "3522:88:6",
																"nodeType": "YulFunctionCall",
																"src": "3522:88:6"
															},
															"nativeSrc": "3522:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "3522:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3626:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3629:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3629:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3619:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:6"
																},
																"nativeSrc": "3619:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3619:15:6"
															},
															"nativeSrc": "3619:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3619:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3650:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3650:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3653:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3653:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3643:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:6"
																},
																"nativeSrc": "3643:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3643:15:6"
															},
															"nativeSrc": "3643:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3643:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3484:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3484:180:6"
											},
											{
												"body": {
													"nativeSrc": "3715:149:6",
													"nodeType": "YulBlock",
													"src": "3715:149:6",
													"statements": [
														{
															"nativeSrc": "3725:25:6",
															"nodeType": "YulAssignment",
															"src": "3725:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3748:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3748:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3730:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3730:17:6"
																},
																"nativeSrc": "3730:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3730:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3725:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3725:1:6"
																}
															]
														},
														{
															"nativeSrc": "3759:25:6",
															"nodeType": "YulAssignment",
															"src": "3759:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3782:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3782:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3764:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3764:17:6"
																},
																"nativeSrc": "3764:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3764:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3759:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3759:1:6"
																}
															]
														},
														{
															"nativeSrc": "3793:17:6",
															"nodeType": "YulAssignment",
															"src": "3793:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3805:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3805:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3808:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3808:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:6"
																},
																"nativeSrc": "3801:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3801:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3793:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3835:22:6",
																"nodeType": "YulBlock",
																"src": "3835:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3837:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3837:16:6"
																			},
																			"nativeSrc": "3837:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3837:18:6"
																		},
																		"nativeSrc": "3837:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3837:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3826:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3826:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3832:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3832:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3823:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3823:2:6"
																},
																"nativeSrc": "3823:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3823:11:6"
															},
															"nativeSrc": "3820:37:6",
															"nodeType": "YulIf",
															"src": "3820:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3670:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3701:1:6",
														"nodeType": "YulTypedName",
														"src": "3701:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3704:1:6",
														"nodeType": "YulTypedName",
														"src": "3704:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3710:4:6",
														"nodeType": "YulTypedName",
														"src": "3710:4:6",
														"type": ""
													}
												],
												"src": "3670:194:6"
											},
											{
												"body": {
													"nativeSrc": "3918:362:6",
													"nodeType": "YulBlock",
													"src": "3918:362:6",
													"statements": [
														{
															"nativeSrc": "3928:25:6",
															"nodeType": "YulAssignment",
															"src": "3928:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3951:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3951:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3933:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3933:17:6"
																},
																"nativeSrc": "3933:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3933:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3928:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3928:1:6"
																}
															]
														},
														{
															"nativeSrc": "3962:25:6",
															"nodeType": "YulAssignment",
															"src": "3962:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3985:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3985:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3967:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3967:17:6"
																},
																"nativeSrc": "3967:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3967:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3962:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3962:1:6"
																}
															]
														},
														{
															"nativeSrc": "3996:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3996:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4019:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4019:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4022:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4022:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4015:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:6"
																},
																"nativeSrc": "4015:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4015:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4000:11:6",
																	"nodeType": "YulTypedName",
																	"src": "4000:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4033:41:6",
															"nodeType": "YulAssignment",
															"src": "4033:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4062:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "4062:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4044:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4044:17:6"
																},
																"nativeSrc": "4044:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4044:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4033:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4033:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4251:22:6",
																"nodeType": "YulBlock",
																"src": "4251:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4253:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4253:16:6"
																			},
																			"nativeSrc": "4253:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4253:18:6"
																		},
																		"nativeSrc": "4253:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4253:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4184:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4184:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4177:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4177:6:6"
																				},
																				"nativeSrc": "4177:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4177:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4207:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4207:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4214:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4214:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4223:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4223:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4210:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4210:3:6"
																						},
																						"nativeSrc": "4210:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4210:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4204:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4204:2:6"
																				},
																				"nativeSrc": "4204:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4157:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4157:2:6"
																		},
																		"nativeSrc": "4157:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4157:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4137:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4137:6:6"
																},
																"nativeSrc": "4137:113:6",
																"nodeType": "YulFunctionCall",
																"src": "4137:113:6"
															},
															"nativeSrc": "4134:139:6",
															"nodeType": "YulIf",
															"src": "4134:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3870:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3901:1:6",
														"nodeType": "YulTypedName",
														"src": "3901:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3904:1:6",
														"nodeType": "YulTypedName",
														"src": "3904:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3910:7:6",
														"nodeType": "YulTypedName",
														"src": "3910:7:6",
														"type": ""
													}
												],
												"src": "3870:410:6"
											},
											{
												"body": {
													"nativeSrc": "4314:152:6",
													"nodeType": "YulBlock",
													"src": "4314:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4331:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4331:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4334:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4334:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4324:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:6"
																},
																"nativeSrc": "4324:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4324:88:6"
															},
															"nativeSrc": "4324:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4324:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4428:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4428:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4431:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4431:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:6"
																},
																"nativeSrc": "4421:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4421:15:6"
															},
															"nativeSrc": "4421:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4421:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4452:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4452:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4455:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4455:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4445:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4445:6:6"
																},
																"nativeSrc": "4445:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4445:15:6"
															},
															"nativeSrc": "4445:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4445:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4286:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4286:180:6"
											},
											{
												"body": {
													"nativeSrc": "4514:143:6",
													"nodeType": "YulBlock",
													"src": "4514:143:6",
													"statements": [
														{
															"nativeSrc": "4524:25:6",
															"nodeType": "YulAssignment",
															"src": "4524:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4547:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4547:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4529:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4529:17:6"
																},
																"nativeSrc": "4529:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4529:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4524:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4524:1:6"
																}
															]
														},
														{
															"nativeSrc": "4558:25:6",
															"nodeType": "YulAssignment",
															"src": "4558:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4581:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4563:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4563:17:6"
																},
																"nativeSrc": "4563:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4563:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4558:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4558:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4605:22:6",
																"nodeType": "YulBlock",
																"src": "4605:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4607:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4607:16:6"
																			},
																			"nativeSrc": "4607:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4607:18:6"
																		},
																		"nativeSrc": "4607:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4607:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4602:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4602:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4595:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:6"
																},
																"nativeSrc": "4595:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4595:9:6"
															},
															"nativeSrc": "4592:35:6",
															"nodeType": "YulIf",
															"src": "4592:35:6"
														},
														{
															"nativeSrc": "4637:14:6",
															"nodeType": "YulAssignment",
															"src": "4637:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4646:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4646:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4649:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4649:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4642:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4642:3:6"
																},
																"nativeSrc": "4642:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4642:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4637:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4637:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4472:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4503:1:6",
														"nodeType": "YulTypedName",
														"src": "4503:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4506:1:6",
														"nodeType": "YulTypedName",
														"src": "4506:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4512:1:6",
														"nodeType": "YulTypedName",
														"src": "4512:1:6",
														"type": ""
													}
												],
												"src": "4472:185:6"
											},
											{
												"body": {
													"nativeSrc": "4707:147:6",
													"nodeType": "YulBlock",
													"src": "4707:147:6",
													"statements": [
														{
															"nativeSrc": "4717:25:6",
															"nodeType": "YulAssignment",
															"src": "4717:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4740:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4740:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4722:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4722:17:6"
																},
																"nativeSrc": "4722:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4722:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4717:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4717:1:6"
																}
															]
														},
														{
															"nativeSrc": "4751:25:6",
															"nodeType": "YulAssignment",
															"src": "4751:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4774:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4774:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4756:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4756:17:6"
																},
																"nativeSrc": "4756:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4756:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4751:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4751:1:6"
																}
															]
														},
														{
															"nativeSrc": "4785:16:6",
															"nodeType": "YulAssignment",
															"src": "4785:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4796:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4796:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4799:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4799:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4792:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4792:3:6"
																},
																"nativeSrc": "4792:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4792:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4785:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4825:22:6",
																"nodeType": "YulBlock",
																"src": "4825:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4827:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4827:16:6"
																			},
																			"nativeSrc": "4827:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4827:18:6"
																		},
																		"nativeSrc": "4827:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4827:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4817:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4817:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4820:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4820:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4814:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4814:2:6"
																},
																"nativeSrc": "4814:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4814:10:6"
															},
															"nativeSrc": "4811:36:6",
															"nodeType": "YulIf",
															"src": "4811:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4663:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4694:1:6",
														"nodeType": "YulTypedName",
														"src": "4694:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4697:1:6",
														"nodeType": "YulTypedName",
														"src": "4697:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4703:3:6",
														"nodeType": "YulTypedName",
														"src": "4703:3:6",
														"type": ""
													}
												],
												"src": "4663:191:6"
											},
											{
												"body": {
													"nativeSrc": "4956:73:6",
													"nodeType": "YulBlock",
													"src": "4956:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4973:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4973:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4978:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4978:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4966:6:6"
																},
																"nativeSrc": "4966:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4966:19:6"
															},
															"nativeSrc": "4966:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "4966:19:6"
														},
														{
															"nativeSrc": "4994:29:6",
															"nodeType": "YulAssignment",
															"src": "4994:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5013:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5013:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5018:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5018:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5009:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:6"
																},
																"nativeSrc": "5009:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5009:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4994:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "4994:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4860:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4928:3:6",
														"nodeType": "YulTypedName",
														"src": "4928:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4933:6:6",
														"nodeType": "YulTypedName",
														"src": "4933:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4944:11:6",
														"nodeType": "YulTypedName",
														"src": "4944:11:6",
														"type": ""
													}
												],
												"src": "4860:169:6"
											},
											{
												"body": {
													"nativeSrc": "5141:119:6",
													"nodeType": "YulBlock",
													"src": "5141:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5163:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5171:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5171:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5159:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5159:3:6"
																		},
																		"nativeSrc": "5159:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5159:14:6"
																	},
																	{
																		"hexValue": "576974686472617720616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "5175:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5175:34:6",
																		"type": "",
																		"value": "Withdraw amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5152:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5152:6:6"
																},
																"nativeSrc": "5152:58:6",
																"nodeType": "YulFunctionCall",
																"src": "5152:58:6"
															},
															"nativeSrc": "5152:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "5152:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5231:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5231:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5239:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5239:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5227:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5227:3:6"
																		},
																		"nativeSrc": "5227:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5227:15:6"
																	},
																	{
																		"hexValue": "7468616e2030",
																		"kind": "string",
																		"nativeSrc": "5244:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5244:8:6",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:6"
																},
																"nativeSrc": "5220:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5220:33:6"
															},
															"nativeSrc": "5220:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5220:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34",
												"nativeSrc": "5035:225:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5133:6:6",
														"nodeType": "YulTypedName",
														"src": "5133:6:6",
														"type": ""
													}
												],
												"src": "5035:225:6"
											},
											{
												"body": {
													"nativeSrc": "5412:220:6",
													"nodeType": "YulBlock",
													"src": "5412:220:6",
													"statements": [
														{
															"nativeSrc": "5422:74:6",
															"nodeType": "YulAssignment",
															"src": "5422:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5488:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5488:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5493:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5493:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5429:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5429:58:6"
																},
																"nativeSrc": "5429:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5429:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5422:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5422:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5594:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5594:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34",
																	"nativeSrc": "5505:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5505:88:6"
																},
																"nativeSrc": "5505:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5505:93:6"
															},
															"nativeSrc": "5505:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5505:93:6"
														},
														{
															"nativeSrc": "5607:19:6",
															"nodeType": "YulAssignment",
															"src": "5607:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5618:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5618:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5614:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5614:3:6"
																},
																"nativeSrc": "5614:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5614:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5607:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5266:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5400:3:6",
														"nodeType": "YulTypedName",
														"src": "5400:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5408:3:6",
														"nodeType": "YulTypedName",
														"src": "5408:3:6",
														"type": ""
													}
												],
												"src": "5266:366:6"
											},
											{
												"body": {
													"nativeSrc": "5809:248:6",
													"nodeType": "YulBlock",
													"src": "5809:248:6",
													"statements": [
														{
															"nativeSrc": "5819:26:6",
															"nodeType": "YulAssignment",
															"src": "5819:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5831:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5831:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5842:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5842:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5827:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5827:3:6"
																},
																"nativeSrc": "5827:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5827:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5819:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5819:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5866:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5877:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5877:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5862:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:6"
																		},
																		"nativeSrc": "5862:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5885:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5885:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5891:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5891:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5881:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5881:3:6"
																		},
																		"nativeSrc": "5881:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5881:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5855:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:6"
																},
																"nativeSrc": "5855:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5855:47:6"
															},
															"nativeSrc": "5855:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5855:47:6"
														},
														{
															"nativeSrc": "5911:139:6",
															"nodeType": "YulAssignment",
															"src": "5911:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6045:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6045:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5919:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5919:124:6"
																},
																"nativeSrc": "5919:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5919:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5911:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5911:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5638:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5789:9:6",
														"nodeType": "YulTypedName",
														"src": "5789:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5804:4:6",
														"nodeType": "YulTypedName",
														"src": "5804:4:6",
														"type": ""
													}
												],
												"src": "5638:419:6"
											},
											{
												"body": {
													"nativeSrc": "6189:206:6",
													"nodeType": "YulBlock",
													"src": "6189:206:6",
													"statements": [
														{
															"nativeSrc": "6199:26:6",
															"nodeType": "YulAssignment",
															"src": "6199:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6211:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6211:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6222:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6222:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6207:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6207:3:6"
																},
																"nativeSrc": "6207:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6207:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6199:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6199:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6279:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6279:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6292:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6292:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6303:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6303:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6288:3:6"
																		},
																		"nativeSrc": "6288:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6288:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6235:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6235:43:6"
																},
																"nativeSrc": "6235:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6235:71:6"
															},
															"nativeSrc": "6235:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6235:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6360:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6360:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6373:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6373:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6384:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6384:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6369:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6369:3:6"
																		},
																		"nativeSrc": "6369:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6369:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6316:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6316:43:6"
																},
																"nativeSrc": "6316:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6316:72:6"
															},
															"nativeSrc": "6316:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6316:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6063:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6153:9:6",
														"nodeType": "YulTypedName",
														"src": "6153:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6165:6:6",
														"nodeType": "YulTypedName",
														"src": "6165:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6173:6:6",
														"nodeType": "YulTypedName",
														"src": "6173:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6184:4:6",
														"nodeType": "YulTypedName",
														"src": "6184:4:6",
														"type": ""
													}
												],
												"src": "6063:332:6"
											},
											{
												"body": {
													"nativeSrc": "6443:48:6",
													"nodeType": "YulBlock",
													"src": "6443:48:6",
													"statements": [
														{
															"nativeSrc": "6453:32:6",
															"nodeType": "YulAssignment",
															"src": "6453:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6478:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6478:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6471:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6471:6:6"
																		},
																		"nativeSrc": "6471:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6471:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6464:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6464:6:6"
																},
																"nativeSrc": "6464:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6464:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6453:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6453:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6401:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6425:5:6",
														"nodeType": "YulTypedName",
														"src": "6425:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6435:7:6",
														"nodeType": "YulTypedName",
														"src": "6435:7:6",
														"type": ""
													}
												],
												"src": "6401:90:6"
											},
											{
												"body": {
													"nativeSrc": "6537:76:6",
													"nodeType": "YulBlock",
													"src": "6537:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6591:16:6",
																"nodeType": "YulBlock",
																"src": "6591:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6600:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6600:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6603:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6603:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6593:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6593:6:6"
																			},
																			"nativeSrc": "6593:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6593:12:6"
																		},
																		"nativeSrc": "6593:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6593:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6560:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6560:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6582:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6582:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6567:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "6567:14:6"
																				},
																				"nativeSrc": "6567:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6567:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6557:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6557:2:6"
																		},
																		"nativeSrc": "6557:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6557:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6550:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:6"
																},
																"nativeSrc": "6550:40:6",
																"nodeType": "YulFunctionCall",
																"src": "6550:40:6"
															},
															"nativeSrc": "6547:60:6",
															"nodeType": "YulIf",
															"src": "6547:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6497:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6530:5:6",
														"nodeType": "YulTypedName",
														"src": "6530:5:6",
														"type": ""
													}
												],
												"src": "6497:116:6"
											},
											{
												"body": {
													"nativeSrc": "6679:77:6",
													"nodeType": "YulBlock",
													"src": "6679:77:6",
													"statements": [
														{
															"nativeSrc": "6689:22:6",
															"nodeType": "YulAssignment",
															"src": "6689:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6704:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6704:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6698:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6698:5:6"
																},
																"nativeSrc": "6698:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6698:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6689:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6689:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6744:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6744:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6720:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "6720:23:6"
																},
																"nativeSrc": "6720:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6720:30:6"
															},
															"nativeSrc": "6720:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6720:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6619:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6657:6:6",
														"nodeType": "YulTypedName",
														"src": "6657:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6665:3:6",
														"nodeType": "YulTypedName",
														"src": "6665:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6673:5:6",
														"nodeType": "YulTypedName",
														"src": "6673:5:6",
														"type": ""
													}
												],
												"src": "6619:137:6"
											},
											{
												"body": {
													"nativeSrc": "6836:271:6",
													"nodeType": "YulBlock",
													"src": "6836:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6882:83:6",
																"nodeType": "YulBlock",
																"src": "6882:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6884:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6884:77:6"
																			},
																			"nativeSrc": "6884:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6884:79:6"
																		},
																		"nativeSrc": "6884:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6884:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6857:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6857:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6866:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6866:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6853:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6853:3:6"
																		},
																		"nativeSrc": "6853:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6853:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6878:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6878:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6849:3:6"
																},
																"nativeSrc": "6849:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6849:32:6"
															},
															"nativeSrc": "6846:119:6",
															"nodeType": "YulIf",
															"src": "6846:119:6"
														},
														{
															"nativeSrc": "6975:125:6",
															"nodeType": "YulBlock",
															"src": "6975:125:6",
															"statements": [
																{
																	"nativeSrc": "6990:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6990:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7004:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7004:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6994:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6994:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7019:71:6",
																	"nodeType": "YulAssignment",
																	"src": "7019:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7062:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7062:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7073:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7073:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7058:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7058:3:6"
																				},
																				"nativeSrc": "7058:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7058:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7082:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7082:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7029:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7029:28:6"
																		},
																		"nativeSrc": "7029:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7029:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7019:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7019:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6762:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6806:9:6",
														"nodeType": "YulTypedName",
														"src": "6806:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6817:7:6",
														"nodeType": "YulTypedName",
														"src": "6817:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6829:6:6",
														"nodeType": "YulTypedName",
														"src": "6829:6:6",
														"type": ""
													}
												],
												"src": "6762:345:6"
											},
											{
												"body": {
													"nativeSrc": "7219:66:6",
													"nodeType": "YulBlock",
													"src": "7219:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7241:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7241:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7249:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7249:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7237:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:6"
																		},
																		"nativeSrc": "7237:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:14:6"
																	},
																	{
																		"hexValue": "52657761726420726174652073686f756c64203e2030",
																		"kind": "string",
																		"nativeSrc": "7253:24:6",
																		"nodeType": "YulLiteral",
																		"src": "7253:24:6",
																		"type": "",
																		"value": "Reward rate should > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7230:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:6"
																},
																"nativeSrc": "7230:48:6",
																"nodeType": "YulFunctionCall",
																"src": "7230:48:6"
															},
															"nativeSrc": "7230:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "7230:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c",
												"nativeSrc": "7113:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7211:6:6",
														"nodeType": "YulTypedName",
														"src": "7211:6:6",
														"type": ""
													}
												],
												"src": "7113:172:6"
											},
											{
												"body": {
													"nativeSrc": "7437:220:6",
													"nodeType": "YulBlock",
													"src": "7437:220:6",
													"statements": [
														{
															"nativeSrc": "7447:74:6",
															"nodeType": "YulAssignment",
															"src": "7447:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7513:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7513:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7518:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7518:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7454:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7454:58:6"
																},
																"nativeSrc": "7454:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7454:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7447:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7447:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7619:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7619:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c",
																	"nativeSrc": "7530:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7530:88:6"
																},
																"nativeSrc": "7530:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7530:93:6"
															},
															"nativeSrc": "7530:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7530:93:6"
														},
														{
															"nativeSrc": "7632:19:6",
															"nodeType": "YulAssignment",
															"src": "7632:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7643:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7643:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7648:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7648:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7639:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:6"
																},
																"nativeSrc": "7639:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7639:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7632:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7632:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7291:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7425:3:6",
														"nodeType": "YulTypedName",
														"src": "7425:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7433:3:6",
														"nodeType": "YulTypedName",
														"src": "7433:3:6",
														"type": ""
													}
												],
												"src": "7291:366:6"
											},
											{
												"body": {
													"nativeSrc": "7834:248:6",
													"nodeType": "YulBlock",
													"src": "7834:248:6",
													"statements": [
														{
															"nativeSrc": "7844:26:6",
															"nodeType": "YulAssignment",
															"src": "7844:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:6"
																},
																"nativeSrc": "7852:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7891:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7891:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7902:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7902:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7887:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7887:3:6"
																		},
																		"nativeSrc": "7887:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7887:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7910:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7910:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7916:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7916:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7906:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:6"
																		},
																		"nativeSrc": "7906:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7906:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7880:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7880:6:6"
																},
																"nativeSrc": "7880:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7880:47:6"
															},
															"nativeSrc": "7880:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7880:47:6"
														},
														{
															"nativeSrc": "7936:139:6",
															"nodeType": "YulAssignment",
															"src": "7936:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8070:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8070:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7944:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7944:124:6"
																},
																"nativeSrc": "7944:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7944:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7936:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7936:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7663:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7814:9:6",
														"nodeType": "YulTypedName",
														"src": "7814:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:6",
														"nodeType": "YulTypedName",
														"src": "7829:4:6",
														"type": ""
													}
												],
												"src": "7663:419:6"
											},
											{
												"body": {
													"nativeSrc": "8151:80:6",
													"nodeType": "YulBlock",
													"src": "8151:80:6",
													"statements": [
														{
															"nativeSrc": "8161:22:6",
															"nodeType": "YulAssignment",
															"src": "8161:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8176:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8170:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8170:5:6"
																},
																"nativeSrc": "8170:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8170:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8161:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8161:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8219:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8219:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8192:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "8192:26:6"
																},
																"nativeSrc": "8192:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8192:33:6"
															},
															"nativeSrc": "8192:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "8192:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8088:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8129:6:6",
														"nodeType": "YulTypedName",
														"src": "8129:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8137:3:6",
														"nodeType": "YulTypedName",
														"src": "8137:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8145:5:6",
														"nodeType": "YulTypedName",
														"src": "8145:5:6",
														"type": ""
													}
												],
												"src": "8088:143:6"
											},
											{
												"body": {
													"nativeSrc": "8314:274:6",
													"nodeType": "YulBlock",
													"src": "8314:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8360:83:6",
																"nodeType": "YulBlock",
																"src": "8360:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8362:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8362:77:6"
																			},
																			"nativeSrc": "8362:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8362:79:6"
																		},
																		"nativeSrc": "8362:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8362:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8335:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8335:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8344:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8344:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8331:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8331:3:6"
																		},
																		"nativeSrc": "8331:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8331:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8356:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8327:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8327:3:6"
																},
																"nativeSrc": "8327:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8327:32:6"
															},
															"nativeSrc": "8324:119:6",
															"nodeType": "YulIf",
															"src": "8324:119:6"
														},
														{
															"nativeSrc": "8453:128:6",
															"nodeType": "YulBlock",
															"src": "8453:128:6",
															"statements": [
																{
																	"nativeSrc": "8468:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8468:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8482:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8482:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8472:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8472:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8497:74:6",
																	"nodeType": "YulAssignment",
																	"src": "8497:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8543:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8543:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8554:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8554:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8539:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8539:3:6"
																				},
																				"nativeSrc": "8539:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8539:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8563:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8563:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8507:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "8507:31:6"
																		},
																		"nativeSrc": "8507:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8507:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8497:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8497:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8237:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8284:9:6",
														"nodeType": "YulTypedName",
														"src": "8284:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8295:7:6",
														"nodeType": "YulTypedName",
														"src": "8295:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8307:6:6",
														"nodeType": "YulTypedName",
														"src": "8307:6:6",
														"type": ""
													}
												],
												"src": "8237:351:6"
											},
											{
												"body": {
													"nativeSrc": "8700:65:6",
													"nodeType": "YulBlock",
													"src": "8700:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8722:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8722:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8718:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8718:3:6"
																		},
																		"nativeSrc": "8718:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8718:14:6"
																	},
																	{
																		"hexValue": "4e6f206d6f72652072657761726420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "8734:23:6",
																		"nodeType": "YulLiteral",
																		"src": "8734:23:6",
																		"type": "",
																		"value": "No more reward tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8711:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8711:6:6"
																},
																"nativeSrc": "8711:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8711:47:6"
															},
															"nativeSrc": "8711:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8711:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc",
												"nativeSrc": "8594:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8692:6:6",
														"nodeType": "YulTypedName",
														"src": "8692:6:6",
														"type": ""
													}
												],
												"src": "8594:171:6"
											},
											{
												"body": {
													"nativeSrc": "8917:220:6",
													"nodeType": "YulBlock",
													"src": "8917:220:6",
													"statements": [
														{
															"nativeSrc": "8927:74:6",
															"nodeType": "YulAssignment",
															"src": "8927:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8993:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8993:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8998:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8998:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8934:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8934:58:6"
																},
																"nativeSrc": "8934:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8934:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8927:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8927:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9099:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9099:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc",
																	"nativeSrc": "9010:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9010:88:6"
																},
																"nativeSrc": "9010:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9010:93:6"
															},
															"nativeSrc": "9010:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9010:93:6"
														},
														{
															"nativeSrc": "9112:19:6",
															"nodeType": "YulAssignment",
															"src": "9112:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9123:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9123:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9128:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9128:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9119:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9119:3:6"
																},
																"nativeSrc": "9119:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9119:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9112:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9112:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8771:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8905:3:6",
														"nodeType": "YulTypedName",
														"src": "8905:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8913:3:6",
														"nodeType": "YulTypedName",
														"src": "8913:3:6",
														"type": ""
													}
												],
												"src": "8771:366:6"
											},
											{
												"body": {
													"nativeSrc": "9314:248:6",
													"nodeType": "YulBlock",
													"src": "9314:248:6",
													"statements": [
														{
															"nativeSrc": "9324:26:6",
															"nodeType": "YulAssignment",
															"src": "9324:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9336:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9336:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9347:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9347:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9332:3:6"
																},
																"nativeSrc": "9332:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9332:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9324:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9324:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9371:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9371:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9382:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9382:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9367:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9367:3:6"
																		},
																		"nativeSrc": "9367:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9367:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9390:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9390:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9396:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9396:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9386:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9386:3:6"
																		},
																		"nativeSrc": "9386:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9386:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9360:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9360:6:6"
																},
																"nativeSrc": "9360:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9360:47:6"
															},
															"nativeSrc": "9360:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9360:47:6"
														},
														{
															"nativeSrc": "9416:139:6",
															"nodeType": "YulAssignment",
															"src": "9416:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9550:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9550:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9424:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9424:124:6"
																},
																"nativeSrc": "9424:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9424:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9416:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9416:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9143:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9294:9:6",
														"nodeType": "YulTypedName",
														"src": "9294:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9309:4:6",
														"nodeType": "YulTypedName",
														"src": "9309:4:6",
														"type": ""
													}
												],
												"src": "9143:419:6"
											},
											{
												"body": {
													"nativeSrc": "9674:116:6",
													"nodeType": "YulBlock",
													"src": "9674:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9696:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9696:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9704:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9704:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9692:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9692:3:6"
																		},
																		"nativeSrc": "9692:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9692:14:6"
																	},
																	{
																		"hexValue": "5374616b6520616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "9708:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9708:34:6",
																		"type": "",
																		"value": "Stake amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9685:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9685:6:6"
																},
																"nativeSrc": "9685:58:6",
																"nodeType": "YulFunctionCall",
																"src": "9685:58:6"
															},
															"nativeSrc": "9685:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "9685:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9764:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9764:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9772:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9772:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9760:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9760:3:6"
																		},
																		"nativeSrc": "9760:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9760:15:6"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nativeSrc": "9777:5:6",
																		"nodeType": "YulLiteral",
																		"src": "9777:5:6",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9753:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9753:6:6"
																},
																"nativeSrc": "9753:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9753:30:6"
															},
															"nativeSrc": "9753:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9753:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
												"nativeSrc": "9568:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9666:6:6",
														"nodeType": "YulTypedName",
														"src": "9666:6:6",
														"type": ""
													}
												],
												"src": "9568:222:6"
											},
											{
												"body": {
													"nativeSrc": "9942:220:6",
													"nodeType": "YulBlock",
													"src": "9942:220:6",
													"statements": [
														{
															"nativeSrc": "9952:74:6",
															"nodeType": "YulAssignment",
															"src": "9952:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10018:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10018:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10023:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10023:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9959:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9959:58:6"
																},
																"nativeSrc": "9959:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9959:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9952:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10124:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10124:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																	"nativeSrc": "10035:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10035:88:6"
																},
																"nativeSrc": "10035:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10035:93:6"
															},
															"nativeSrc": "10035:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10035:93:6"
														},
														{
															"nativeSrc": "10137:19:6",
															"nodeType": "YulAssignment",
															"src": "10137:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10148:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10148:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10153:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10153:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10144:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10144:3:6"
																},
																"nativeSrc": "10144:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10144:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10137:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10137:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9796:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9930:3:6",
														"nodeType": "YulTypedName",
														"src": "9930:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9938:3:6",
														"nodeType": "YulTypedName",
														"src": "9938:3:6",
														"type": ""
													}
												],
												"src": "9796:366:6"
											},
											{
												"body": {
													"nativeSrc": "10339:248:6",
													"nodeType": "YulBlock",
													"src": "10339:248:6",
													"statements": [
														{
															"nativeSrc": "10349:26:6",
															"nodeType": "YulAssignment",
															"src": "10349:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10361:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10361:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10372:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10372:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10357:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10357:3:6"
																},
																"nativeSrc": "10357:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10357:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10349:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10349:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10396:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10396:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10407:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10407:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10392:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10392:3:6"
																		},
																		"nativeSrc": "10392:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10392:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10415:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10415:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10411:3:6"
																		},
																		"nativeSrc": "10411:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10411:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10385:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10385:6:6"
																},
																"nativeSrc": "10385:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10385:47:6"
															},
															"nativeSrc": "10385:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10385:47:6"
														},
														{
															"nativeSrc": "10441:139:6",
															"nodeType": "YulAssignment",
															"src": "10441:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10575:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10575:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10449:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10449:124:6"
																},
																"nativeSrc": "10449:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10449:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10441:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10441:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10168:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10319:9:6",
														"nodeType": "YulTypedName",
														"src": "10319:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10334:4:6",
														"nodeType": "YulTypedName",
														"src": "10334:4:6",
														"type": ""
													}
												],
												"src": "10168:419:6"
											},
											{
												"body": {
													"nativeSrc": "10747:288:6",
													"nodeType": "YulBlock",
													"src": "10747:288:6",
													"statements": [
														{
															"nativeSrc": "10757:26:6",
															"nodeType": "YulAssignment",
															"src": "10757:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10769:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10769:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10780:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10780:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10765:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10765:3:6"
																},
																"nativeSrc": "10765:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10765:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10757:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10757:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10837:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10837:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10850:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10850:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10861:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10861:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10846:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10846:3:6"
																		},
																		"nativeSrc": "10846:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10846:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10793:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10793:43:6"
																},
																"nativeSrc": "10793:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10793:71:6"
															},
															"nativeSrc": "10793:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10793:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10918:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10918:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10931:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10931:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10942:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10942:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10927:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10927:3:6"
																		},
																		"nativeSrc": "10927:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10927:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10874:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10874:43:6"
																},
																"nativeSrc": "10874:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10874:72:6"
															},
															"nativeSrc": "10874:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10874:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11000:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11000:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11013:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11013:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11024:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11024:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11009:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11009:3:6"
																		},
																		"nativeSrc": "11009:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11009:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10956:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10956:43:6"
																},
																"nativeSrc": "10956:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10956:72:6"
															},
															"nativeSrc": "10956:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10956:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10593:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10703:9:6",
														"nodeType": "YulTypedName",
														"src": "10703:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10715:6:6",
														"nodeType": "YulTypedName",
														"src": "10715:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10723:6:6",
														"nodeType": "YulTypedName",
														"src": "10723:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10731:6:6",
														"nodeType": "YulTypedName",
														"src": "10731:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10742:4:6",
														"nodeType": "YulTypedName",
														"src": "10742:4:6",
														"type": ""
													}
												],
												"src": "10593:442:6"
											},
											{
												"body": {
													"nativeSrc": "11147:64:6",
													"nodeType": "YulBlock",
													"src": "11147:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11169:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11169:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11177:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11177:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11165:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:6"
																		},
																		"nativeSrc": "11165:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11165:14:6"
																	},
																	{
																		"hexValue": "52657761726473206e6f742066696e6973686564",
																		"kind": "string",
																		"nativeSrc": "11181:22:6",
																		"nodeType": "YulLiteral",
																		"src": "11181:22:6",
																		"type": "",
																		"value": "Rewards not finished"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11158:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11158:6:6"
																},
																"nativeSrc": "11158:46:6",
																"nodeType": "YulFunctionCall",
																"src": "11158:46:6"
															},
															"nativeSrc": "11158:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "11158:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618",
												"nativeSrc": "11041:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11139:6:6",
														"nodeType": "YulTypedName",
														"src": "11139:6:6",
														"type": ""
													}
												],
												"src": "11041:170:6"
											},
											{
												"body": {
													"nativeSrc": "11363:220:6",
													"nodeType": "YulBlock",
													"src": "11363:220:6",
													"statements": [
														{
															"nativeSrc": "11373:74:6",
															"nodeType": "YulAssignment",
															"src": "11373:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11439:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11439:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11444:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11444:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11380:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11380:58:6"
																},
																"nativeSrc": "11380:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11380:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11373:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11373:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11545:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11545:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618",
																	"nativeSrc": "11456:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11456:88:6"
																},
																"nativeSrc": "11456:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11456:93:6"
															},
															"nativeSrc": "11456:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11456:93:6"
														},
														{
															"nativeSrc": "11558:19:6",
															"nodeType": "YulAssignment",
															"src": "11558:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11569:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11569:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11574:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11574:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11565:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11565:3:6"
																},
																"nativeSrc": "11565:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11565:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11558:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11558:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11217:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11351:3:6",
														"nodeType": "YulTypedName",
														"src": "11351:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11359:3:6",
														"nodeType": "YulTypedName",
														"src": "11359:3:6",
														"type": ""
													}
												],
												"src": "11217:366:6"
											},
											{
												"body": {
													"nativeSrc": "11760:248:6",
													"nodeType": "YulBlock",
													"src": "11760:248:6",
													"statements": [
														{
															"nativeSrc": "11770:26:6",
															"nodeType": "YulAssignment",
															"src": "11770:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11782:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11782:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11793:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11793:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11778:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:6"
																},
																"nativeSrc": "11778:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11778:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11770:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11770:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11817:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11817:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11828:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11828:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11813:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11813:3:6"
																		},
																		"nativeSrc": "11813:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11813:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11836:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11836:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11832:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11832:3:6"
																		},
																		"nativeSrc": "11832:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11832:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11806:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11806:6:6"
																},
																"nativeSrc": "11806:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11806:47:6"
															},
															"nativeSrc": "11806:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11806:47:6"
														},
														{
															"nativeSrc": "11862:139:6",
															"nodeType": "YulAssignment",
															"src": "11862:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11996:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11996:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11870:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11870:124:6"
																},
																"nativeSrc": "11870:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11870:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11862:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11862:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11589:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11740:9:6",
														"nodeType": "YulTypedName",
														"src": "11740:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11755:4:6",
														"nodeType": "YulTypedName",
														"src": "11755:4:6",
														"type": ""
													}
												],
												"src": "11589:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward rate should > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc(memPtr) {\n\n        mstore(add(memPtr, 0), \"No more reward tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake amount must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618(memPtr) {\n\n        mstore(add(memPtr, 0), \"Rewards not finished\")\n\n    }\n\n    function abi_encode_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 1626
									},
									{
										"length": 32,
										"start": 3074
									},
									{
										"length": 32,
										"start": 3452
									}
								],
								"794": [
									{
										"length": 32,
										"start": 2261
									},
									{
										"length": 32,
										"start": 2886
									},
									{
										"length": 32,
										"start": 4015
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610129575f3560e01c80637519ab50116100ab578063bfeec0561161006f578063bfeec0561461030b578063cc1a378f1461033b578063cd3daf9d14610357578063d1af0c7d14610375578063d7f2ddbb1461039357610129565b80637519ab50146102775780637b0a47ee146102955780638da5cb5b146102b35780639a2a3626146102d1578063a694fc3a146102ef57610129565b80633c6b16ab116100f25780633c6b16ab146101e55780633d18b9121461020157806367d3b4881461020b57806370a082311461022957806372f702f31461025957610129565b80628cc2621461012d5780630700037d1461015d5780630fb5a6b41461018d57806318160ddd146101ab5780632e1a7d4d146101c9575b5f80fd5b61014760048036038101906101429190611066565b6103b1565b60405161015491906110a9565b60405180910390f35b61017760048036038101906101729190611066565b6104ab565b60405161018491906110a9565b60405180910390f35b6101956104c0565b6040516101a291906110a9565b60405180910390f35b6101b36104c6565b6040516101c091906110a9565b60405180910390f35b6101e360048036038101906101de91906110ec565b6104cc565b005b6101ff60048036038101906101fa91906110ec565b6106f8565b005b6102096109da565b005b610213610be5565b60405161022091906110a9565b60405180910390f35b610243600480360381019061023e9190611066565b610beb565b60405161025091906110a9565b60405180910390f35b610261610c00565b60405161026e9190611172565b60405180910390f35b61027f610c24565b60405161028c91906110a9565b60405180910390f35b61029d610c2a565b6040516102aa91906110a9565b60405180910390f35b6102bb610c30565b6040516102c8919061119a565b60405180910390f35b6102d9610c53565b6040516102e691906110a9565b60405180910390f35b610309600480360381019061030491906110ec565b610c59565b005b61032560048036038101906103209190611066565b610e87565b60405161033291906110a9565b60405180910390f35b610355600480360381019061035091906110ec565b610e9c565b005b61035f610f40565b60405161036c91906110a9565b60405180910390f35b61037d610fad565b60405161038a9190611172565b60405180910390f35b61039b610fd1565b6040516103a891906110a9565b60405180910390f35b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461043f610f40565b61044991906111e0565b60095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546104919190611213565b61049b9190611281565b6104a591906112b1565b50919050565b6007602052805f5260405f205f915090505481565b60015481565b60085481565b336104d5610f40565b6005819055506104e3610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105ab57610525816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f82116105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e490611364565b60405180910390fd5b8160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461063991906111e0565b925050819055508160085f82825461065191906111e0565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016106b3929190611382565b6020604051808303815f875af11580156106cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f391906113de565b505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074e575f80fd5b5f610757610f40565b600581905550610765610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461082d576107a7816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b42600254101561085057600154826108459190611281565b60048190555061088f565b5f4260025461085f91906111e0565b60045461086c9190611213565b9050600154838261087d91906112b1565b6108879190611281565b600481905550505b5f600454116108d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ca90611453565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161092c919061119a565b602060405180830381865afa158015610947573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096b9190611485565b60015460045461097b9190611213565b106109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b2906114fa565b60405180910390fd5b600154426109c991906112b1565b600281905550426003819055505050565b336109e3610f40565b6005819055506109f1610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab957610a33816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811115610be1575f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b9f929190611382565b6020604051808303815f875af1158015610bbb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bdf91906113de565b505b5050565b60025481565b6009602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b60045481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b33610c62610f40565b600581905550610c70610fd1565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d3857610cb2816103b1565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7190611588565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610dd7939291906115a6565b6020604051808303815f875af1158015610df3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e1791906113de565b508160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e6491906112b1565b925050819055508160085f828254610e7c91906112b1565b925050819055505050565b6006602052805f5260405f205f915090505481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef2575f80fd5b4260025410610f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2d90611625565b60405180910390fd5b8060018190555050565b5f8060085403610f54576005549050610faa565b600854670de0b6b3a7640000600354610f6f42600254610ff0565b610f7991906111e0565b600454610f869190611213565b610f909190611213565b610f9a9190611281565b600554610fa791906112b1565b90505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600354610fe142600254610ff0565b610feb91906111e0565b905090565b5f818310610ffe5781611000565b825b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110358261100c565b9050919050565b6110458161102b565b811461104f575f80fd5b50565b5f813590506110608161103c565b92915050565b5f6020828403121561107b5761107a611008565b5b5f61108884828501611052565b91505092915050565b5f819050919050565b6110a381611091565b82525050565b5f6020820190506110bc5f83018461109a565b92915050565b6110cb81611091565b81146110d5575f80fd5b50565b5f813590506110e6816110c2565b92915050565b5f6020828403121561110157611100611008565b5b5f61110e848285016110d8565b91505092915050565b5f819050919050565b5f61113a6111356111308461100c565b611117565b61100c565b9050919050565b5f61114b82611120565b9050919050565b5f61115c82611141565b9050919050565b61116c81611152565b82525050565b5f6020820190506111855f830184611163565b92915050565b6111948161102b565b82525050565b5f6020820190506111ad5f83018461118b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111ea82611091565b91506111f583611091565b925082820390508181111561120d5761120c6111b3565b5b92915050565b5f61121d82611091565b915061122883611091565b925082820261123681611091565b9150828204841483151761124d5761124c6111b3565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61128b82611091565b915061129683611091565b9250826112a6576112a5611254565b5b828204905092915050565b5f6112bb82611091565b91506112c683611091565b92508282019050808211156112de576112dd6111b3565b5b92915050565b5f82825260208201905092915050565b7f576974686472617720616d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f61134e6026836112e4565b9150611359826112f4565b604082019050919050565b5f6020820190508181035f83015261137b81611342565b9050919050565b5f6040820190506113955f83018561118b565b6113a2602083018461109a565b9392505050565b5f8115159050919050565b6113bd816113a9565b81146113c7575f80fd5b50565b5f815190506113d8816113b4565b92915050565b5f602082840312156113f3576113f2611008565b5b5f611400848285016113ca565b91505092915050565b7f52657761726420726174652073686f756c64203e2030000000000000000000005f82015250565b5f61143d6016836112e4565b915061144882611409565b602082019050919050565b5f6020820190508181035f83015261146a81611431565b9050919050565b5f8151905061147f816110c2565b92915050565b5f6020828403121561149a57611499611008565b5b5f6114a784828501611471565b91505092915050565b7f4e6f206d6f72652072657761726420746f6b656e7300000000000000000000005f82015250565b5f6114e46015836112e4565b91506114ef826114b0565b602082019050919050565b5f6020820190508181035f830152611511816114d8565b9050919050565b7f5374616b6520616d6f756e74206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f6115726023836112e4565b915061157d82611518565b604082019050919050565b5f6020820190508181035f83015261159f81611566565b9050919050565b5f6060820190506115b95f83018661118b565b6115c6602083018561118b565b6115d3604083018461109a565b949350505050565b7f52657761726473206e6f742066696e69736865640000000000000000000000005f82015250565b5f61160f6014836112e4565b915061161a826115db565b602082019050919050565b5f6020820190508181035f83015261163c81611603565b905091905056fea2646970667358221220c3c92ebc04d5a8c6290fbefb755f7546712e3e7b1f89c338c74ed497fcdfb42964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7519AB50 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBFEEC056 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBFEEC056 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xD7F2DDBB EQ PUSH2 0x393 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x9A2A3626 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2EF JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x259 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x43F PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x4D5 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x4E3 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AB JUMPI PUSH2 0x525 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E4 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B3 SWAP3 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x74E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x757 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x765 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82D JUMPI PUSH2 0x7A7 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x850 JUMPI PUSH1 0x1 SLOAD DUP3 PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x88F JUMP JUMPDEST PUSH0 TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP4 DUP3 PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH1 0x4 SLOAD GT PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST LT PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH2 0x9E3 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x9F1 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH2 0xA33 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xBE1 JUMPI PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0xC62 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xC70 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD38 JUMPI PUSH2 0xCB2 DUP2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD71 SWAP1 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE17 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE7C SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 SLOAD SUB PUSH2 0xF54 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD PUSH2 0xF6F TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xF90 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH2 0xFE1 TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xFEB SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xFFE JUMPI DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1035 DUP3 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP2 EQ PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1088 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A3 DUP2 PUSH2 0x1091 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BC PUSH0 DUP4 ADD DUP5 PUSH2 0x109A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0x1091 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E6 DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110E DUP5 DUP3 DUP6 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x113A PUSH2 0x1135 PUSH2 0x1130 DUP5 PUSH2 0x100C JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x114B DUP3 PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x115C DUP3 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1152 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1185 PUSH0 DUP4 ADD DUP5 PUSH2 0x1163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1194 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11AD PUSH0 DUP4 ADD DUP5 PUSH2 0x118B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11EA DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F5 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x120D JUMPI PUSH2 0x120C PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121D DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x1228 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1236 DUP2 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x1296 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0x1254 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0x1091 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C6 DUP4 PUSH2 0x1091 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DD PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x576974686472617720616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x134E PUSH1 0x26 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP3 PUSH2 0x12F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH0 DUP4 ADD DUP6 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x109A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x13A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0x13B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1400 DUP5 DUP3 DUP6 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52657761726420726174652073686F756C64203E203000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x143D PUSH1 0x16 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1448 DUP3 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x146A DUP2 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x147F DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149A JUMPI PUSH2 0x1499 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206D6F72652072657761726420746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E4 PUSH1 0x15 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14EF DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1511 DUP2 PUSH2 0x14D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1572 PUSH1 0x23 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x157D DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159F DUP2 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15B9 PUSH0 DUP4 ADD DUP7 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x15C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x15D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x109A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x52657761726473206E6F742066696E6973686564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x160F PUSH1 0x14 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x161A DUP3 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x163C DUP2 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC9 0x2E 0xBC DIV 0xD5 0xA8 0xC6 0x29 0xF 0xBE 0xFB PUSH22 0x5F7546712E3E7B1F89C338C74ED497FCDFB42964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "115:4188:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;725:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;775:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2391:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1401:640;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3922:277;;;:::i;:::-;;375:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;804:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;164:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;431:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;479:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;269:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;528:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2098:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;600:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1195:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2920:373;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;226:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3343:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2720:194;2775:4;2890:7;:17;2898:8;2890:17;;;;;;;;;;;;;;;;2866:4;2834:18;:28;2853:8;2834:28;;;;;;;;;;;;;;;;2815:16;:14;:16::i;:::-;:47;;;;:::i;:::-;2791:9;:19;2801:8;2791:19;;;;;;;;;;;;;;;;:72;;;;:::i;:::-;:79;;;;:::i;:::-;:116;;;;:::i;:::-;;2720:194;;;:::o;725:43::-;;;;;;;;;;;;;;;;;:::o;322:20::-;;;;:::o;775:23::-;;;;:::o;2391:270::-;2445:10;3589:16;:14;:16::i;:::-;3564:21;:41;;;;3627:22;:20;:22::i;:::-;3615:9;:34;;;;3683:1;3663:22;;:8;:22;;;3660:153;;3720:16;3727:8;3720:6;:16::i;:::-;3700:7;:17;3708:8;3700:17;;;;;;;;;;;;;;;:36;;;;3781:21;;3750:18;:28;3769:8;3750:28;;;;;;;;;;;;;;;:52;;;;3660:153;2486:1:::1;2476:7;:11;2468:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2564:7;2539:9;:21;2549:10;2539:21;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2596:7;2581:11;;:22;;;;;;;:::i;:::-;;;;;;;;2613:12;:21;;;2635:10;2646:7;2613:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2391:270:::0;;:::o;1401:640::-;1140:5;;;;;;;;;;1126:19;;:10;:19;;;1118:28;;;;;;1483:1:::1;3589:16;:14;:16::i;:::-;3564:21;:41;;;;3627:22;:20;:22::i;:::-;3615:9;:34;;;;3683:1;3663:22;;:8;:22;;;3660:153;;3720:16;3727:8;3720:6;:16::i;:::-;3700:7;:17;3708:8;3700:17;;;;;;;;;;;;;;;:36;;;;3781:21;;3750:18;:28;3769:8;3750:28;;;;;;;;;;;;;;;:52;;;;3660:153;1510:15:::2;1499:8;;:26;1496:290;;;1561:8;;1553:7;:16;;;;:::i;:::-;1540:10;:29;;;;1496:290;;;1650:17;1696:15;1685:8;;:26;;;;:::i;:::-;1670:10;;:43;;;;:::i;:::-;1650:63;;1767:8;;1756:7;1741:12;:22;;;;:::i;:::-;1740:35;;;;:::i;:::-;1727:10;:48;;;;1584:202;1496:290;1817:1;1804:10;;:14;1796:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1885:12;:22;;;1916:4;1885:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1875:8;;1862:10;;:21;;;;:::i;:::-;:60;1854:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1987:8;;1969:15;:26;;;;:::i;:::-;1958:8;:37;;;;2017:15;2005:9;:27;;;;1156:1:::1;1401:640:::0;:::o;3922:277::-;3966:10;3589:16;:14;:16::i;:::-;3564:21;:41;;;;3627:22;:20;:22::i;:::-;3615:9;:34;;;;3683:1;3663:22;;:8;:22;;;3660:153;;3720:16;3727:8;3720:6;:16::i;:::-;3700:7;:17;3708:8;3700:17;;;;;;;;;;;;;;;:36;;;;3781:21;;3750:18;:28;3769:8;3750:28;;;;;;;;;;;;;;;:52;;;;3660:153;3987:11:::1;4001:7;:19;4009:10;4001:19;;;;;;;;;;;;;;;;3987:33;;4041:1;4033:6;:9;4030:162;;;4079:1;4057:7;:19;4065:10;4057:19;;;;;;;;;;;;;;;:23;;;;4140:12;:21;;;4162:10;4174:6;4140:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4030:162;3977:222;3922:277:::0;:::o;375:20::-;;;;:::o;804:45::-;;;;;;;;;;;;;;;;;:::o;164:36::-;;;:::o;431:21::-;;;;:::o;479:22::-;;;;:::o;269:20::-;;;;;;;;;;;;:::o;528:33::-;;;;:::o;2098:287::-;2150:10;3589:16;:14;:16::i;:::-;3564:21;:41;;;;3627:22;:20;:22::i;:::-;3615:9;:34;;;;3683:1;3663:22;;:8;:22;;;3660:153;;3720:16;3727:8;3720:6;:16::i;:::-;3700:7;:17;3708:8;3700:17;;;;;;;;;;;;;;;:36;;;;3781:21;;3750:18;:28;3769:8;3750:28;;;;;;;;;;;;;;;:52;;;;3660:153;2191:1:::1;2181:7;:11;2173:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:12;:25;;;2267:10;2287:4;2294:7;2241:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2337:7;2312:9;:21;2322:10;2312:21;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2370:7;2355:11;;:22;;;;;;;:::i;:::-;;;;;;;;2098:287:::0;;:::o;600:54::-;;;;;;;;;;;;;;;;;:::o;1195:168::-;1140:5;;;;;;;;;;1126:19;;:10;:19;;;1118:28;;;;;;1286:15:::1;1275:8;;:26;1267:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1347:9;1336:8;:20;;;;1195:168:::0;:::o;2920:373::-;2967:7;3004:1;2989:11;;:16;2986:73;;3027:21;;3020:28;;;;2986:73;3275:11;;3247:4;3182:9;;3149:30;3154:15;3170:8;;3149:4;:30::i;:::-;:42;;;;:::i;:::-;3123:10;;:69;;;;:::i;:::-;3109:142;;;;:::i;:::-;:177;;;;:::i;:::-;3076:21;;:210;;;;:::i;:::-;3069:217;;2920:373;;:::o;226:36::-;;;:::o;3343:130::-;3397:4;3455:9;;3422:30;3427:15;3443:8;;3422:4;:30::i;:::-;:42;;;;:::i;:::-;3413:52;;3343:130;:::o;4208:92::-;4258:4;4284:1;4280;:5;:13;;4292:1;4280:13;;;4288:1;4280:13;4273:20;;4208:92;;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:180::-;3532:77;3529:1;3522:88;3629:4;3626:1;3619:15;3653:4;3650:1;3643:15;3670:194;3710:4;3730:20;3748:1;3730:20;:::i;:::-;3725:25;;3764:20;3782:1;3764:20;:::i;:::-;3759:25;;3808:1;3805;3801:9;3793:17;;3832:1;3826:4;3823:11;3820:37;;;3837:18;;:::i;:::-;3820:37;3670:194;;;;:::o;3870:410::-;3910:7;3933:20;3951:1;3933:20;:::i;:::-;3928:25;;3967:20;3985:1;3967:20;:::i;:::-;3962:25;;4022:1;4019;4015:9;4044:30;4062:11;4044:30;:::i;:::-;4033:41;;4223:1;4214:7;4210:15;4207:1;4204:22;4184:1;4177:9;4157:83;4134:139;;4253:18;;:::i;:::-;4134:139;3918:362;3870:410;;;;:::o;4286:180::-;4334:77;4331:1;4324:88;4431:4;4428:1;4421:15;4455:4;4452:1;4445:15;4472:185;4512:1;4529:20;4547:1;4529:20;:::i;:::-;4524:25;;4563:20;4581:1;4563:20;:::i;:::-;4558:25;;4602:1;4592:35;;4607:18;;:::i;:::-;4592:35;4649:1;4646;4642:9;4637:14;;4472:185;;;;:::o;4663:191::-;4703:3;4722:20;4740:1;4722:20;:::i;:::-;4717:25;;4756:20;4774:1;4756:20;:::i;:::-;4751:25;;4799:1;4796;4792:9;4785:16;;4820:3;4817:1;4814:10;4811:36;;;4827:18;;:::i;:::-;4811:36;4663:191;;;;:::o;4860:169::-;4944:11;4978:6;4973:3;4966:19;5018:4;5013:3;5009:14;4994:29;;4860:169;;;;:::o;5035:225::-;5175:34;5171:1;5163:6;5159:14;5152:58;5244:8;5239:2;5231:6;5227:15;5220:33;5035:225;:::o;5266:366::-;5408:3;5429:67;5493:2;5488:3;5429:67;:::i;:::-;5422:74;;5505:93;5594:3;5505:93;:::i;:::-;5623:2;5618:3;5614:12;5607:19;;5266:366;;;:::o;5638:419::-;5804:4;5842:2;5831:9;5827:18;5819:26;;5891:9;5885:4;5881:20;5877:1;5866:9;5862:17;5855:47;5919:131;6045:4;5919:131;:::i;:::-;5911:139;;5638:419;;;:::o;6063:332::-;6184:4;6222:2;6211:9;6207:18;6199:26;;6235:71;6303:1;6292:9;6288:17;6279:6;6235:71;:::i;:::-;6316:72;6384:2;6373:9;6369:18;6360:6;6316:72;:::i;:::-;6063:332;;;;;:::o;6401:90::-;6435:7;6478:5;6471:13;6464:21;6453:32;;6401:90;;;:::o;6497:116::-;6567:21;6582:5;6567:21;:::i;:::-;6560:5;6557:32;6547:60;;6603:1;6600;6593:12;6547:60;6497:116;:::o;6619:137::-;6673:5;6704:6;6698:13;6689:22;;6720:30;6744:5;6720:30;:::i;:::-;6619:137;;;;:::o;6762:345::-;6829:6;6878:2;6866:9;6857:7;6853:23;6849:32;6846:119;;;6884:79;;:::i;:::-;6846:119;7004:1;7029:61;7082:7;7073:6;7062:9;7058:22;7029:61;:::i;:::-;7019:71;;6975:125;6762:345;;;;:::o;7113:172::-;7253:24;7249:1;7241:6;7237:14;7230:48;7113:172;:::o;7291:366::-;7433:3;7454:67;7518:2;7513:3;7454:67;:::i;:::-;7447:74;;7530:93;7619:3;7530:93;:::i;:::-;7648:2;7643:3;7639:12;7632:19;;7291:366;;;:::o;7663:419::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7916:9;7910:4;7906:20;7902:1;7891:9;7887:17;7880:47;7944:131;8070:4;7944:131;:::i;:::-;7936:139;;7663:419;;;:::o;8088:143::-;8145:5;8176:6;8170:13;8161:22;;8192:33;8219:5;8192:33;:::i;:::-;8088:143;;;;:::o;8237:351::-;8307:6;8356:2;8344:9;8335:7;8331:23;8327:32;8324:119;;;8362:79;;:::i;:::-;8324:119;8482:1;8507:64;8563:7;8554:6;8543:9;8539:22;8507:64;:::i;:::-;8497:74;;8453:128;8237:351;;;;:::o;8594:171::-;8734:23;8730:1;8722:6;8718:14;8711:47;8594:171;:::o;8771:366::-;8913:3;8934:67;8998:2;8993:3;8934:67;:::i;:::-;8927:74;;9010:93;9099:3;9010:93;:::i;:::-;9128:2;9123:3;9119:12;9112:19;;8771:366;;;:::o;9143:419::-;9309:4;9347:2;9336:9;9332:18;9324:26;;9396:9;9390:4;9386:20;9382:1;9371:9;9367:17;9360:47;9424:131;9550:4;9424:131;:::i;:::-;9416:139;;9143:419;;;:::o;9568:222::-;9708:34;9704:1;9696:6;9692:14;9685:58;9777:5;9772:2;9764:6;9760:15;9753:30;9568:222;:::o;9796:366::-;9938:3;9959:67;10023:2;10018:3;9959:67;:::i;:::-;9952:74;;10035:93;10124:3;10035:93;:::i;:::-;10153:2;10148:3;10144:12;10137:19;;9796:366;;;:::o;10168:419::-;10334:4;10372:2;10361:9;10357:18;10349:26;;10421:9;10415:4;10411:20;10407:1;10396:9;10392:17;10385:47;10449:131;10575:4;10449:131;:::i;:::-;10441:139;;10168:419;;;:::o;10593:442::-;10742:4;10780:2;10769:9;10765:18;10757:26;;10793:71;10861:1;10850:9;10846:17;10837:6;10793:71;:::i;:::-;10874:72;10942:2;10931:9;10927:18;10918:6;10874:72;:::i;:::-;10956;11024:2;11013:9;11009:18;11000:6;10956:72;:::i;:::-;10593:442;;;;;;:::o;11041:170::-;11181:22;11177:1;11169:6;11165:14;11158:46;11041:170;:::o;11217:366::-;11359:3;11380:67;11444:2;11439:3;11380:67;:::i;:::-;11373:74;;11456:93;11545:3;11456:93;:::i;:::-;11574:2;11569:3;11565:12;11558:19;;11217:366;;;:::o;11589:419::-;11755:4;11793:2;11782:9;11778:18;11770:26;;11842:9;11836:4;11832:20;11828:1;11817:9;11813:17;11806:47;11870:131;11996:4;11870:131;:::i;:::-;11862:139;;11589:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1150600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2891",
								"duration()": "2493",
								"earned(address)": "infinite",
								"finishAt()": "2492",
								"getReward()": "infinite",
								"lastRewardApplayTime()": "infinite",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "2572",
								"rewardPerToken()": "infinite",
								"rewardPertTokenStored()": "2514",
								"rewardRate()": "2470",
								"rewards(address)": "2848",
								"rewardsToken()": "infinite",
								"setRewardsDuration(uint256)": "26847",
								"stake(uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalSupply()": "2515",
								"updatedAt()": "2448",
								"userRewardPertPaid(address)": "2824",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_min(uint256,uint256)": "63"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 857,
									"end": 1081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 947,
									"end": 960,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 925,
									"end": 961,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 925,
									"end": 961,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 925,
									"end": 961,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 925,
									"end": 961,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 925,
									"end": 961,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 925,
									"end": 961,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 925,
									"end": 961,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 925,
									"end": 961,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 925,
									"end": 961,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 925,
									"end": 961,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1007,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1025,
									"end": 1035,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 857,
									"end": 1081,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "794"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "791"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 4303,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c3c92ebc04d5a8c6290fbefb755f7546712e3e7b1f89c338c74ed497fcdfb42964736f6c634300081a0033",
									".code": [
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "7519AB50"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "BFEEC056"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "BFEEC056"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "CC1A378F"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "CD3DAF9D"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "D1AF0C7D"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "D7F2DDBB"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "7519AB50"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "7B0A47EE"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "9A2A3626"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "3C6B16AB"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "3C6B16AB"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "3D18B912"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "67D3B488"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "72F702F3"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "8CC262"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "700037D"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "FB5A6B4"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 4303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2720,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2720,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2720,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 322,
											"end": 342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 322,
											"end": 342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 775,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2391,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2391,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1401,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1401,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3922,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 375,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 375,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 804,
											"end": 849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 804,
											"end": 849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 804,
											"end": 849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 164,
											"end": 200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 164,
											"end": 200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 431,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 431,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 479,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 479,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 269,
											"end": 289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 269,
											"end": 289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 528,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 528,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2098,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2098,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 600,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 600,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1195,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1195,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2920,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2920,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 226,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 226,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3343,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3343,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2906,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2870,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2861,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2862,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2815,
											"end": 2831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2831,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2815,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2815,
											"end": 2862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2815,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2862,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2815,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2809,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2810,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2791,
											"end": 2863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2791,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2863,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2791,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2791,
											"end": 2870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2791,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2870,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2791,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2791,
											"end": 2907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2791,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2907,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2791,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 322,
											"end": 342,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 322,
											"end": 342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 775,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2445,
											"end": 2455,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3589,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3627,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3627,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3624,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3727,
											"end": 3735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3720,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3716,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3777,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2483,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2487,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2468,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2468,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2559,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2539,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2581,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2581,
											"end": 2603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 2613,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2634,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2635,
											"end": 2645,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2653,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2613,
											"end": 2654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2613,
											"end": 2654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1136,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3589,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3589,
											"end": 3605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3589,
											"end": 3605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3564,
											"end": 3605,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3627,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3627,
											"end": 3649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3627,
											"end": 3649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3615,
											"end": 3649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3660,
											"end": 3813,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3727,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3720,
											"end": 3736,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3720,
											"end": 3736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3716,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3717,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3781,
											"end": 3802,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3777,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3778,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3660,
											"end": 3813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1525,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1507,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1499,
											"end": 1507,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1525,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1569,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1560,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1553,
											"end": 1569,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1569,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1553,
											"end": 1569,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1569,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1553,
											"end": 1569,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1550,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1569,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1569,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1569,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1569,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1711,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1693,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1693,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1711,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1685,
											"end": 1711,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1711,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1711,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1685,
											"end": 1711,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1711,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1685,
											"end": 1711,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1680,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1713,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1670,
											"end": 1713,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1713,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1713,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1670,
											"end": 1713,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1713,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1670,
											"end": 1713,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1713,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1713,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1767,
											"end": 1775,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1763,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1753,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1763,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1741,
											"end": 1763,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1763,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1763,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1741,
											"end": 1763,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1763,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1741,
											"end": 1763,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1775,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1740,
											"end": 1775,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1775,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1775,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1740,
											"end": 1775,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1775,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1740,
											"end": 1775,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1727,
											"end": 1775,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1775,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1775,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1775,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1786,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1496,
											"end": 1786,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1814,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 1814,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1818,
											"modifierDepth": 2,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1796,
											"end": 1844,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1796,
											"end": 1844,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1897,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 1885,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1907,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1916,
											"end": 1920,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1885,
											"end": 1922,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1885,
											"end": 1922,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1885,
											"end": 1922,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1875,
											"end": 1883,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1862,
											"end": 1872,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1862,
											"end": 1883,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1883,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1862,
											"end": 1883,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1862,
											"end": 1883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1922,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1854,
											"end": 1947,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1854,
											"end": 1947,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 1995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1987,
											"end": 1995,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1984,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1969,
											"end": 1995,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1958,
											"end": 1995,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1995,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2032,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2014,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2005,
											"end": 2032,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2032,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2032,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2032,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1157,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 2041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 3976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3589,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3627,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3627,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3624,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3727,
											"end": 3735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3720,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3716,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3777,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 3998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4019,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4020,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4042,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4192,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4030,
											"end": 4192,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4075,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4080,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4080,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 4140,
											"end": 4161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4140,
											"end": 4161,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4162,
											"end": 4172,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4140,
											"end": 4181,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4140,
											"end": 4181,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4140,
											"end": 4181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4192,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4030,
											"end": 4192,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 4199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 4199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 395,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 164,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 164,
											"end": 200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 431,
											"end": 452,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 479,
											"end": 501,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 269,
											"end": 289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3589,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3627,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3627,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3624,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3727,
											"end": 3735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3720,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3720,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3716,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3777,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3778,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3660,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2192,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2173,
											"end": 2231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2173,
											"end": 2231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 2241,
											"end": 2266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2267,
											"end": 2277,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2291,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2301,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2241,
											"end": 2302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2241,
											"end": 2302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2332,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2312,
											"end": 2344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2355,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2355,
											"end": 2377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1136,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1145,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1118,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1301,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1275,
											"end": 1283,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1301,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1267,
											"end": 1326,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1267,
											"end": 1326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3005,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2986,
											"end": 3059,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3059,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2986,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3275,
											"end": 3286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3170,
											"end": 3178,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3149,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3179,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3149,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3149,
											"end": 3191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3149,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3191,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3149,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3133,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3123,
											"end": 3133,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3123,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3109,
											"end": 3251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3109,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3251,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3109,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3109,
											"end": 3286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3109,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3286,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3109,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3076,
											"end": 3097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3076,
											"end": 3286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3076,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3286,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3076,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 226,
											"end": 262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 226,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3427,
											"end": 3442,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3451,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3451,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3422,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3452,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3422,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3422,
											"end": 3464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3422,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3464,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3422,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4208,
											"end": 4300,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 4208,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4285,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4273,
											"end": 4293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4273,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4208,
											"end": 4300,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4208,
											"end": 4300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4208,
											"end": 4300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4208,
											"end": 4300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4208,
											"end": 4300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3219,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3400,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3664,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3484,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3529,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3748,
											"end": 3749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3730,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 3750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 3750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3764,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3834,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3837,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3910,
											"end": 3917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3951,
											"end": 3952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3933,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3985,
											"end": 3986,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3967,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3987,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4062,
											"end": 4073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4044,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4208,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4226,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4185,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4177,
											"end": 4186,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4240,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4253,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4466,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4286,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4411,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4452,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4460,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4529,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4563,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4607,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4722,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4774,
											"end": 4775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4756,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4820,
											"end": 4823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4824,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4827,
											"end": 4845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5029,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4860,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 4985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5009,
											"end": 5023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5260,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5035,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5209,
											"name": "PUSH",
											"source": 6,
											"value": "576974686472617720616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5252,
											"name": "PUSH",
											"source": 6,
											"value": "7468616E20300000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5266,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5408,
											"end": 5411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5493,
											"end": 5495,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5488,
											"end": 5491,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5429,
											"end": 5496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5496,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5429,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5594,
											"end": 5597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5505,
											"end": 5598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5598,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5505,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5632,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6057,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5638,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5831,
											"end": 5840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5885,
											"end": 5889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 5901,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5919,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6045,
											"end": 6049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5919,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5919,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5919,
											"end": 6050,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5919,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5911,
											"end": 6050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5911,
											"end": 6050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 6057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6395,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6063,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6301,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6235,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6366,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6316,
											"end": 6388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6395,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6395,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6491,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6401,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6435,
											"end": 6442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6485,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6613,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 6497,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6582,
											"end": 6587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6567,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6588,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6567,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6547,
											"end": 6607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6600,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6607,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6547,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6756,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6619,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6711,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 6720,
											"end": 6750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6750,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6720,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6756,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6756,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7107,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6762,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6857,
											"end": 6864,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6876,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6849,
											"end": 6881,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6965,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6846,
											"end": 6965,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6884,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6884,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6963,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6884,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6965,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6846,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7082,
											"end": 7089,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7073,
											"end": 7079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7071,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 7080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7029,
											"end": 7090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7090,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7029,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7019,
											"end": 7090,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7019,
											"end": 7090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6975,
											"end": 7100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 7107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7285,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7113,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7253,
											"end": 7277,
											"name": "PUSH",
											"source": 6,
											"value": "52657761726420726174652073686F756C64203E203000000000000000000000"
										},
										{
											"begin": 7249,
											"end": 7250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7657,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7291,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7518,
											"end": 7520,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7454,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7521,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7454,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 7521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 7521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7619,
											"end": 7622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7530,
											"end": 7623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7530,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7648,
											"end": 7650,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7639,
											"end": 7651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 8082,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7663,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7867,
											"end": 7869,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7856,
											"end": 7865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7844,
											"end": 7870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7844,
											"end": 7870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7910,
											"end": 7914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 7900,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 7904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7880,
											"end": 7927,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 8070,
											"end": 8074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7944,
											"end": 8075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 8075,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7944,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 8075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 8075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 8082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 8082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 8082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 8082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8231,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 8088,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8170,
											"end": 8183,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8219,
											"end": 8224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8192,
											"end": 8225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8225,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8192,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8231,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8588,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8237,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8342,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8359,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8443,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 8324,
											"end": 8443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8362,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 8362,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8441,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8362,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8443,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 8324,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 8563,
											"end": 8570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8543,
											"end": 8552,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 8507,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8571,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 8507,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8588,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8765,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 8594,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F206D6F72652072657761726420746F6B656E730000000000000000000000"
										},
										{
											"begin": 8730,
											"end": 8731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8711,
											"end": 8758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 9137,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 8771,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8913,
											"end": 8916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 8998,
											"end": 9000,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 8934,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 9001,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 8934,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8927,
											"end": 9001,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8927,
											"end": 9001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9010,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9099,
											"end": 9102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9010,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 9010,
											"end": 9103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9010,
											"end": 9103,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9010,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9128,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9123,
											"end": 9126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9119,
											"end": 9131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 9137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 9137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 9137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 9137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9143,
											"end": 9562,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 9143,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9309,
											"end": 9313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9336,
											"end": 9345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9390,
											"end": 9394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9406,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9550,
											"end": 9554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 9424,
											"end": 9555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9555,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9424,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9143,
											"end": 9562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9143,
											"end": 9562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9143,
											"end": 9562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9143,
											"end": 9562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9568,
											"end": 9790,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 9568,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9742,
											"name": "PUSH",
											"source": 6,
											"value": "5374616B6520616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 9704,
											"end": 9705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9696,
											"end": 9702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9692,
											"end": 9706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9685,
											"end": 9743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9782,
											"name": "PUSH",
											"source": 6,
											"value": "6E20300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9772,
											"end": 9774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9764,
											"end": 9770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9760,
											"end": 9775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9753,
											"end": 9783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9568,
											"end": 9790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9568,
											"end": 9790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10162,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 9796,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9938,
											"end": 9941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10023,
											"end": 10025,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9959,
											"end": 10026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10026,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 9959,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 10026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 10026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10124,
											"end": 10127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 10035,
											"end": 10128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10128,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10035,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 10162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10587,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10168,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10374,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10361,
											"end": 10370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10357,
											"end": 10375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10421,
											"end": 10430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10392,
											"end": 10409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10385,
											"end": 10432,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 10575,
											"end": 10579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 10449,
											"end": 10580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10580,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 10449,
											"end": 10580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10742,
											"end": 10746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10782,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10769,
											"end": 10778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10757,
											"end": 10783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10757,
											"end": 10783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10793,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 10861,
											"end": 10862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10850,
											"end": 10859,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10846,
											"end": 10863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10837,
											"end": 10843,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10793,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10793,
											"end": 10864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10793,
											"end": 10864,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 10793,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10874,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10942,
											"end": 10944,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10931,
											"end": 10940,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10924,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10874,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10874,
											"end": 10946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10874,
											"end": 10946,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10874,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10956,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11024,
											"end": 11026,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11013,
											"end": 11022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11000,
											"end": 11006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10956,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10956,
											"end": 11028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10956,
											"end": 11028,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10956,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 11035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11211,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11041,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11181,
											"end": 11203,
											"name": "PUSH",
											"source": 6,
											"value": "52657761726473206E6F742066696E6973686564000000000000000000000000"
										},
										{
											"begin": 11177,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11158,
											"end": 11204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 11444,
											"end": 11446,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 11439,
											"end": 11442,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 11380,
											"end": 11447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 11380,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 11545,
											"end": 11548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11456,
											"end": 11549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 11456,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11574,
											"end": 11576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11569,
											"end": 11572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11558,
											"end": 11577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11558,
											"end": 11577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11795,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11782,
											"end": 11791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11842,
											"end": 11851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11836,
											"end": 11840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 11829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11817,
											"end": 11826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11813,
											"end": 11830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11806,
											"end": 11853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 11996,
											"end": 12000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11870,
											"end": 12001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 11870,
											"end": 12001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11862,
											"end": 12001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11862,
											"end": 12001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 12008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 12008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"StakingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"duration()": "0fb5a6b4",
							"earned(address)": "008cc262",
							"finishAt()": "67d3b488",
							"getReward()": "3d18b912",
							"lastRewardApplayTime()": "d7f2ddbb",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"rewardPerToken()": "cd3daf9d",
							"rewardPertTokenStored()": "9a2a3626",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setRewardsDuration(uint256)": "cc1a378f",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"updatedAt()": "7519ab50",
							"userRewardPertPaid(address)": "bfeec056",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardApplayTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPertTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setRewardsDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPertPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingRewards.sol\":\"StakingRewards\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"StakingRewards.sol\":{\"keccak256\":\"0xa2080eab93c42ef925e6f903ddcc4c9c7161f86de6f8c24376ef19f83f0da135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9677c97f23e1be045cdd5aa885197c8a2378ba41a8d8ed29ade1ea91977bd2d\",\"dweb:/ipfs/QmP59j3QMpLFX9tpfgak5KFg5kpGPsXecALXeWCwCw54tJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 796,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 798,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "duration",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "finishAt",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "updatedAt",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 804,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 806,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "rewardPertTokenStored",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 810,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "userRewardPertPaid",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 814,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 816,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "totalSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 820,
								"contract": "StakingRewards.sol:StakingRewards",
								"label": "balanceOf",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> StakingRewards.sol:100:60:\n    |\n100 |     function earned(address _account) public view returns (uint) {\n    |                                                            ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2779,
					"file": "StakingRewards.sol",
					"start": 2775
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"StakingRewards.sol": {
				"ast": {
					"absolutePath": "StakingRewards.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"StakingRewards": [
							1195
						]
					},
					"id": 1196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1196,
							"sourceUnit": 652,
							"src": "58:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1195,
							"linearizedBaseContracts": [
								1195
							],
							"name": "StakingRewards",
							"nameLocation": "124:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 791,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "188:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "164:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "IERC20",
											"nameLocations": [
												"164:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "164:6:5"
										},
										"referencedDeclaration": 729,
										"src": "164:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 794,
									"mutability": "immutable",
									"name": "rewardsToken",
									"nameLocation": "250:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "226:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"226:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "226:6:5"
										},
										"referencedDeclaration": 729,
										"src": "226:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 796,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "284:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "269:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 795,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 798,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "334:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "322:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "322:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67d3b488",
									"id": 800,
									"mutability": "mutable",
									"name": "finishAt",
									"nameLocation": "387:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "375:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "375:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7519ab50",
									"id": 802,
									"mutability": "mutable",
									"name": "updatedAt",
									"nameLocation": "443:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "431:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 801,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "431:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 804,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "491:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "479:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "479:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9a2a3626",
									"id": 806,
									"mutability": "mutable",
									"name": "rewardPertTokenStored",
									"nameLocation": "540:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "528:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 805,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "528:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bfeec056",
									"id": 810,
									"mutability": "mutable",
									"name": "userRewardPertPaid",
									"nameLocation": "636:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "600:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 809,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 807,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "609:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "600:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 808,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "620:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 814,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "761:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "725:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 813,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 811,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "734:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "725:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 812,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "745:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 816,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "787:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "775:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "775:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 820,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "840:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1195,
									"src": "804:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 819,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 817,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "813:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "804:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 818,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "824:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "915:166:5",
										"statements": [
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 827,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "925:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 829,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "947:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 828,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "940:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "940:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "925:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "925:36:5"
											},
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 833,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "971:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 835,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "993:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 834,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "986:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "986:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "971:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "971:36:5"
											},
											{
												"expression": {
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 839,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1017:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 840,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1025:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1029:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1025:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1017:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1017:18:5"
											}
										]
									},
									"id": 845,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "877:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "869:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "900:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "892:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:46:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:0:5"
									},
									"scope": 1195,
									"src": "857:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1108:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 848,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1126:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1130:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1126:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 850,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "1140:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1126:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1118:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1118:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1118:28:5"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "1156:1:5"
											}
										]
									},
									"id": 856,
									"name": "onlyOwner",
									"nameLocation": "1096:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1105:2:5"
									},
									"src": "1087:77:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "1257:106:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 864,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "1275:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 865,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1286:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1292:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1286:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1275:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726473206e6f742066696e6973686564",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1303:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618",
																"typeString": "literal_string \"Rewards not finished\""
															},
															"value": "Rewards not finished"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_474a21861f6d8b74133de71334212081da8844c988e382b87f14f7089d7c6618",
																"typeString": "literal_string \"Rewards not finished\""
															}
														],
														"id": 863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1267:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "1267:59:5"
											},
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1336:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1347:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1336:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "1336:20:5"
											}
										]
									},
									"functionSelector": "cc1a378f",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 861,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 860,
												"name": "onlyOwner",
												"nameLocations": [
													"1248:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 856,
												"src": "1248:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1248:9:5"
										}
									],
									"name": "setRewardsDuration",
									"nameLocation": "1204:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1228:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1223:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:16:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1257:0:5"
									},
									"scope": 1195,
									"src": "1195:168:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "1486:555:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "1499:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 890,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1510:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1516:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1510:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1499:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "1584:202:5",
													"statements": [
														{
															"assignments": [
																901
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 901,
																	"mutability": "mutable",
																	"name": "rewardAmount",
																	"nameLocation": "1655:12:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 919,
																	"src": "1650:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 900,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1650:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 909,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 902,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1670:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 903,
																				"name": "finishAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "1685:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 904,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1696:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1702:9:5",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1696:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1685:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 907,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1683:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1670:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1650:63:5"
														},
														{
															"expression": {
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 910,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1727:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 911,
																					"name": "rewardAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 901,
																					"src": "1741:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 912,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 878,
																					"src": "1756:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1741:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 914,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1740:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 915,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1767:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1740:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1727:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 918,
															"nodeType": "ExpressionStatement",
															"src": "1727:48:5"
														}
													]
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "1496:290:5",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "1526:54:5",
													"statements": [
														{
															"expression": {
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 893,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1540:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 894,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "1553:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 895,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1561:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1553:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1540:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 898,
															"nodeType": "ExpressionStatement",
															"src": "1540:29:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1804:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1817:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1804:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420726174652073686f756c64203e2030",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1819:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c",
																"typeString": "literal_string \"Reward rate should > 0\""
															},
															"value": "Reward rate should > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4fcd0242ca8a9102e1756361c2febdfe5fcd6b6fa381c3d2b257716bdea033c",
																"typeString": "literal_string \"Reward rate should > 0\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1796:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1796:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "1796:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 929,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1862:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 930,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "1875:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1862:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 936,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1916:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingRewards_$1195",
																					"typeString": "contract StakingRewards"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingRewards_$1195",
																					"typeString": "contract StakingRewards"
																				}
																			],
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1908:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 934,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1908:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1908:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 932,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "1885:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1898:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 686,
																	"src": "1885:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1885:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1862:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206d6f72652072657761726420746f6b656e73",
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1923:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc",
																"typeString": "literal_string \"No more reward tokens\""
															},
															"value": "No more reward tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc0b2c268de38cfc8004a782ab2d05dacf16bf3b949940f3719d3e31f6f2cabc",
																"typeString": "literal_string \"No more reward tokens\""
															}
														],
														"id": 928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1854:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1854:93:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1854:93:5"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 943,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "1958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 944,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1969:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1975:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1969:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 946,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1987:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1969:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1958:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "1958:37:5"
											},
											{
												"expression": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "updatedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "2005:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 951,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2017:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2023:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2017:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2005:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "2005:27:5"
											}
										]
									},
									"functionSelector": "3c6b16ab",
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 881,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 880,
												"name": "onlyOwner",
												"nameLocations": [
													"1452:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 856,
												"src": "1452:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1452:9:5"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1483:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1475:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 883,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1475:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1475:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 887,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 882,
												"name": "updateReward",
												"nameLocations": [
													"1462:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1142,
												"src": "1462:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1462:24:5"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "1410:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1434:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1429:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:14:5"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1486:0:5"
									},
									"scope": 1195,
									"src": "1401:640:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "2162:223:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "2181:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2191:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2181:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															},
															"value": "Stake amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30",
																"typeString": "literal_string \"Stake amount must be greater than 0\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2173:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 975,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2267:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2271:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2267:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 979,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2287:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1195",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1195",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2279:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2279:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2279:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2294:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 972,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2241:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2254:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2241:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "2241:61:5"
											},
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 984,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2312:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 987,
														"indexExpression": {
															"expression": {
																"id": 985,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2322:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2326:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2322:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2312:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 988,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2337:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2312:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "2312:32:5"
											},
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 991,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "2355:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 992,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2370:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2355:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "2355:22:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 961,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2150:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2154:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2150:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 963,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 960,
												"name": "updateReward",
												"nameLocations": [
													"2137:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1142,
												"src": "2137:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2137:24:5"
										}
									],
									"name": "stake",
									"nameLocation": "2107:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2118:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2113:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:14:5"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2162:0:5"
									},
									"scope": 1195,
									"src": "2098:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "2457:204:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "2476:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2486:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2476:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576974686472617720616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2488:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34",
																"typeString": "literal_string \"Withdraw amount must be greater than 0\""
															},
															"value": "Withdraw amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b4ba237a51d396337250eb815bf95942314f4691977d25c2ebf7fab925d3a34",
																"typeString": "literal_string \"Withdraw amount must be greater than 0\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2468:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2468:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "2468:61:5"
											},
											{
												"expression": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1012,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2539:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1015,
														"indexExpression": {
															"expression": {
																"id": 1013,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2549:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2553:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2549:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2539:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1016,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "2564:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2539:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "2539:32:5"
											},
											{
												"expression": {
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1019,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "2581:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1020,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "2596:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2581:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "2581:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1026,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2635:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2639:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2635:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "2646:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1023,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2613:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2626:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2613:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2613:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "2613:41:5"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1001,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2445:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2449:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2445:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1003,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1000,
												"name": "updateReward",
												"nameLocations": [
													"2432:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1142,
												"src": "2432:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2432:24:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "2400:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2414:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2409:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2409:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:14:5"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:5"
									},
									"scope": 1195,
									"src": "2391:270:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "2781:133:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1039,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "2791:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1041,
																"indexExpression": {
																	"id": 1040,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "2801:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2791:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1042,
																				"name": "rewardPerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "2815:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2815:16:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1044,
																				"name": "userRewardPertPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "2834:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1046,
																			"indexExpression": {
																				"id": 1045,
																				"name": "_account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1034,
																				"src": "2853:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2834:28:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2815:47:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2814:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2791:72:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2866:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "2791:79:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1052,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2890:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1054,
														"indexExpression": {
															"id": 1053,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2898:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2890:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2791:116:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "2791:116:5"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "2729:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "2744:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2736:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2735:18:5"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2775:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2775:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2774:6:5"
									},
									"scope": 1195,
									"src": "2720:194:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "2976:317:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "2989:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3004:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2989:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "IfStatement",
												"src": "2986:73:5",
												"trueBody": {
													"id": 1068,
													"nodeType": "Block",
													"src": "3006:53:5",
													"statements": [
														{
															"expression": {
																"id": 1066,
																"name": "rewardPertTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "3027:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1062,
															"id": 1067,
															"nodeType": "Return",
															"src": "3020:28:5"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1070,
														"name": "rewardPertTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "3076:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1071,
																			"name": "rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "3123:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1078,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1073,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "3154:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1074,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3160:9:5",
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "3154:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1075,
																								"name": "finishAt",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 800,
																								"src": "3170:8:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1072,
																							"name": "_min",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1194,
																							"src": "3149:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1076,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3149:30:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1077,
																						"name": "updatedAt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "3182:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3149:42:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1079,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3148:44:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3123:69:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3109:135:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3247:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "3109:142:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1084,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "3275:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3109:177:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3076:210:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1062,
												"id": 1087,
												"nodeType": "Return",
												"src": "3069:217:5"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "2929:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:2:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2967:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2966:9:5"
									},
									"scope": 1195,
									"src": "2920:373:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3402:71:5",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1095,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3427:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3433:9:5",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3427:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1097,
																		"name": "finishAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "3443:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1094,
																	"name": "_min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "3422:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3422:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1099,
																"name": "updatedAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "3455:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3422:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1101,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3421:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1102,
												"nodeType": "Return",
												"src": "3413:52:5"
											}
										]
									},
									"functionSelector": "d7f2ddbb",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastRewardApplayTime",
									"nameLocation": "3352:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3372:3:5"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3397:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3397:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3396:6:5"
									},
									"scope": 1195,
									"src": "3343:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "3554:276:5",
										"statements": [
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1108,
														"name": "rewardPertTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "3564:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1109,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3589:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3589:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3564:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "3564:41:5"
											},
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1113,
														"name": "updatedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "3615:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1114,
															"name": "lastRewardApplayTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "3627:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3627:22:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3615:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "3615:34:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "3663:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3675:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1119,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3675:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3675:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3663:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "IfStatement",
												"src": "3660:153:5",
												"trueBody": {
													"id": 1138,
													"nodeType": "Block",
													"src": "3686:127:5",
													"statements": [
														{
															"expression": {
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1124,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "3700:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1126,
																	"indexExpression": {
																		"id": 1125,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "3708:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3700:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1128,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "3727:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1127,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "3720:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3720:16:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3700:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "3700:36:5"
														},
														{
															"expression": {
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1132,
																		"name": "userRewardPertPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "3750:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1134,
																	"indexExpression": {
																		"id": 1133,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "3769:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3750:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1135,
																	"name": "rewardPertTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3781:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3750:52:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "3750:52:5"
														}
													]
												}
											},
											{
												"id": 1140,
												"nodeType": "PlaceholderStatement",
												"src": "3822:1:5"
											}
										]
									},
									"id": 1142,
									"name": "updateReward",
									"nameLocation": "3524:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3545:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3537:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:18:5"
									},
									"src": "3514:316:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "3977:222:5",
										"statements": [
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3992:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "3987:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1149,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3987:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1155,
												"initialValue": {
													"baseExpression": {
														"id": 1151,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "4001:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1154,
													"indexExpression": {
														"expression": {
															"id": 1152,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4009:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4013:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4009:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4001:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3987:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1156,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "4033:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4041:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4033:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "4030:162:5",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "4043:149:5",
													"statements": [
														{
															"expression": {
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1159,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "4057:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1162,
																	"indexExpression": {
																		"expression": {
																			"id": 1160,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4065:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4069:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4065:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4057:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4079:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4057:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "4057:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1169,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4162:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4166:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4162:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1171,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "4174:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1166,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "4140:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4153:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "4140:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4140:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1173,
															"nodeType": "ExpressionStatement",
															"src": "4140:41:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1145,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1144,
												"name": "updateReward",
												"nameLocations": [
													"3953:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1142,
												"src": "3953:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3953:24:5"
										}
									],
									"name": "getReward",
									"nameLocation": "3931:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3940:2:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3977:0:5"
									},
									"scope": 1195,
									"src": "3922:277:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "4263:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1186,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4280:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1187,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "4284:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4280:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1190,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "4292:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4280:13:5",
													"trueExpression": {
														"id": 1189,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "4288:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1192,
												"nodeType": "Return",
												"src": "4273:20:5"
											}
										]
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_min",
									"nameLocation": "4217:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4227:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "4222:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4222:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4234:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "4229:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4229:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:15:5"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "4258:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4258:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:6:5"
									},
									"scope": 1195,
									"src": "4208:92:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1196,
							"src": "115:4188:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:4271:5"
				},
				"id": 5
			}
		}
	}
}