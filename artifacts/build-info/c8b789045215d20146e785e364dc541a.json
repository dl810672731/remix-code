{
	"id": "c8b789045215d20146e785e364dc541a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"CSAMM.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract CSAMM{\n\n    IERC20 public immutable token0;\n    IERC20 public immutable token1;\n\n    uint public reserve0;\n    uint public reserve1;\n    uint public totalSupply;\n\n    mapping (address => uint) public balanceOf;\n\n    function _mint(address _to,uint _amount) private {\n        balanceOf[_to] += _amount;\n        totalSupply += _amount;\n    }\n\n    function _burn(address _to,uint _amount) private {\n        balanceOf[_to] -= _amount;\n        totalSupply -= _amount;\n    }\n\n    function _update(uint _reserve0,uint _reserve1) private {\n        reserve0 = _reserve0;\n        reserve1 = _reserve1;\n    }\n\n    function swap(address _tokenIn,uint _amountIn)  external returns (uint amountOut)  {\n        require(_tokenIn == address(token0) ||_tokenIn == address(token1), \"Wrong Token\");\n\n        bool isToken0 = _tokenIn == address(token0);\n        (IERC20 tokenIn,IERC20 tokenOut) = isToken0 ? (token0,token1):(token1,token0);\n        (uint reserveIn,uint reserveOut) = isToken0 ? (reserve0,reserve1):(reserve1,reserve0);\n        uint  amountIn = token0.balanceOf(address(this)) - reserveIn;\n\n       //  uint amountIn = 0;\n    \n        // 转入token到合约中\n        // 如果转入的是 token0\n        // if (_tokenIn == address(token0)) {\n        //     // token0.transferFrom(from, to, value);\n        //     // 把token0转移_amountIn的数量，从发送方转移到此合约中\n        //     token0.transferFrom(msg.sender, address(this), _amountIn);\n\n        //     //  精确计算 转入的等于 现在的余额减去上次的余额\n        //     amountIn = token0.balanceOf(address(this)) - reserve0;\n        // } else {\n        //     token1.transferFrom(msg.sender, address(this), _amountIn);\n        //     amountIn = token1.balanceOf(address(this)) - reserve1;\n\n        // }\n\n        tokenIn.transferFrom(msg.sender, address(this), _amountIn);        \n\n\n        // 计算可以换出的 token数量（换另一个token的数量）\n        // amountOut = amountIn * 0.997\n        amountOut = amountIn * 997 /1000;\n\n        (uint res0,uint res1) = isToken0 ?\n         (reserveIn + _amountIn,reserveOut - amountOut)\n          :(reserveIn - amountOut,reserveOut + _amountIn);\n          _update(res0,res1);\n        // 更新2个token的余额\n        // if (_tokenIn == address(token0)) {\n        //   _update(reserve0 + _amountIn,reserve1 - amountOut);\n        // } else {\n        //   _update(reserve0 - amountOut,reserve1 + _amountIn);\n        // }\n        // 把需要换出的token转出到 调用方 中\n        tokenOut.transfer(msg.sender,amountOut);\n    }\n\n    // 添加流动性\n    function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares){\n\n        token0.transferFrom(msg.sender, address(this), _amount0);\n        token1.transferFrom(msg.sender, address(this), _amount1);\n        uint bal0 = token0.balanceOf(address(this));\n        uint bal1 = token1.balanceOf(address(this));\n\n        uint d0 = bal0 - reserve0;\n        uint d1 = bal1 - reserve1;\n\n        if(totalSupply == 0){\n            shares = d0 + d1;\n        }else{\n            shares =(( d0 + d1) + totalSupply) /(reserve0 + reserve1);\n        }\n\n        require(shares > 0,\"Unable to mint\");\n        _mint(msg.sender, shares);\n        _update(d0, d1);\n    }\n\n\n    function removeLiquidity(uint _shares) external returns(uint d0,uint d1){\n        d0 = (_shares * reserve0) / totalSupply;\n        d1 = (_shares * reserve1) / totalSupply;\n\n        _burn(msg.sender, _shares);\n\n        _update(reserve0 - d0, reserve1 - d1);\n        if(d0 > 0 ){\n            token0.transfer(msg.sender, d0 );\n\n        }\n        if (d1 > 0 ){\n            token1.transfer(msg.sender, d1 );\n        }\n    }\n\n    constructor(address _token0, address _token1){\n        token0 = IERC20(_token0);\n        token1 = IERC20(_token1);\n    }\n\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CSAMM.sol": {
				"CSAMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "d0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "d1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CSAMM.sol\":114:3943  contract CSAMM{... */\n  mstore(0x40, 0xc0)\n    /* \"CSAMM.sol\":3819:3939  constructor(address _token0, address _token1){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"CSAMM.sol\":3890:3897  _token0 */\n  dup2\n    /* \"CSAMM.sol\":3874:3898  token0 = IERC20(_token0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"CSAMM.sol\":3924:3931  _token1 */\n  dup1\n    /* \"CSAMM.sol\":3908:3932  token1 = IERC20(_token1) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"CSAMM.sol\":3819:3939  constructor(address _token0, address _token1){... */\n  pop\n  pop\n    /* \"CSAMM.sol\":114:3943  contract CSAMM{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"CSAMM.sol\":114:3943  contract CSAMM{... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"CSAMM.sol\":114:3943  contract CSAMM{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd004f0f7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CSAMM.sol\":135:165  IERC20 public immutable token0 */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":260:283  uint public totalSupply */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":208:228  uint public reserve0 */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":234:254  uint public reserve1 */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":290:332  mapping (address => uint) public balanceOf */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":3395:3813  function removeLiquidity(uint _shares) external returns(uint d0,uint d1){... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":2727:3388  function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares){... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":726:2698  function swap(address _tokenIn,uint _amountIn)  external returns (uint amountOut)  {... */\n    tag_10:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":171:201  IERC20 public immutable token1 */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":135:165  IERC20 public immutable token0 */\n    tag_14:\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":260:283  uint public totalSupply */\n    tag_18:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":208:228  uint public reserve0 */\n    tag_22:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":234:254  uint public reserve1 */\n    tag_25:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":290:332  mapping (address => uint) public balanceOf */\n    tag_30:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":3395:3813  function removeLiquidity(uint _shares) external returns(uint d0,uint d1){... */\n    tag_35:\n        /* \"CSAMM.sol\":3451:3458  uint d0 */\n      0x00\n        /* \"CSAMM.sol\":3459:3466  uint d1 */\n      dup1\n        /* \"CSAMM.sol\":3505:3516  totalSupply */\n      sload(0x02)\n        /* \"CSAMM.sol\":3493:3501  reserve0 */\n      sload(0x00)\n        /* \"CSAMM.sol\":3483:3490  _shares */\n      dup5\n        /* \"CSAMM.sol\":3483:3501  _shares * reserve0 */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"CSAMM.sol\":3482:3516  (_shares * reserve0) / totalSupply */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"CSAMM.sol\":3477:3516  d0 = (_shares * reserve0) / totalSupply */\n      swap2\n      pop\n        /* \"CSAMM.sol\":3554:3565  totalSupply */\n      sload(0x02)\n        /* \"CSAMM.sol\":3542:3550  reserve1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":3532:3539  _shares */\n      dup5\n        /* \"CSAMM.sol\":3532:3550  _shares * reserve1 */\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n        /* \"CSAMM.sol\":3531:3565  (_shares * reserve1) / totalSupply */\n      tag_57\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_57:\n        /* \"CSAMM.sol\":3526:3565  d1 = (_shares * reserve1) / totalSupply */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3576:3602  _burn(msg.sender, _shares) */\n      tag_58\n        /* \"CSAMM.sol\":3582:3592  msg.sender */\n      caller\n        /* \"CSAMM.sol\":3594:3601  _shares */\n      dup5\n        /* \"CSAMM.sol\":3576:3581  _burn */\n      tag_59\n        /* \"CSAMM.sol\":3576:3602  _burn(msg.sender, _shares) */\n      jump\t// in\n    tag_58:\n        /* \"CSAMM.sol\":3613:3650  _update(reserve0 - d0, reserve1 - d1) */\n      tag_60\n        /* \"CSAMM.sol\":3632:3634  d0 */\n      dup3\n        /* \"CSAMM.sol\":3621:3629  reserve0 */\n      sload(0x00)\n        /* \"CSAMM.sol\":3621:3634  reserve0 - d0 */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"CSAMM.sol\":3647:3649  d1 */\n      dup3\n        /* \"CSAMM.sol\":3636:3644  reserve1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":3636:3649  reserve1 - d1 */\n      tag_63\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_63:\n        /* \"CSAMM.sol\":3613:3620  _update */\n      tag_64\n        /* \"CSAMM.sol\":3613:3650  _update(reserve0 - d0, reserve1 - d1) */\n      jump\t// in\n    tag_60:\n        /* \"CSAMM.sol\":3668:3669  0 */\n      0x00\n        /* \"CSAMM.sol\":3663:3665  d0 */\n      dup3\n        /* \"CSAMM.sol\":3663:3669  d0 > 0 */\n      gt\n        /* \"CSAMM.sol\":3660:3729  if(d0 > 0 ){... */\n      iszero\n      tag_65\n      jumpi\n        /* \"CSAMM.sol\":3685:3691  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":3685:3700  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"CSAMM.sol\":3701:3711  msg.sender */\n      caller\n        /* \"CSAMM.sol\":3713:3715  d0 */\n      dup5\n        /* \"CSAMM.sol\":3685:3717  token0.transfer(msg.sender, d0 ) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      pop\n        /* \"CSAMM.sol\":3660:3729  if(d0 > 0 ){... */\n    tag_65:\n        /* \"CSAMM.sol\":3747:3748  0 */\n      0x00\n        /* \"CSAMM.sol\":3742:3744  d1 */\n      dup2\n        /* \"CSAMM.sol\":3742:3748  d1 > 0 */\n      gt\n        /* \"CSAMM.sol\":3738:3807  if (d1 > 0 ){... */\n      iszero\n      tag_72\n      jumpi\n        /* \"CSAMM.sol\":3764:3770  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"CSAMM.sol\":3764:3779  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"CSAMM.sol\":3780:3790  msg.sender */\n      caller\n        /* \"CSAMM.sol\":3792:3794  d1 */\n      dup4\n        /* \"CSAMM.sol\":3764:3796  token1.transfer(msg.sender, d1 ) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_76:\n      pop\n        /* \"CSAMM.sol\":3738:3807  if (d1 > 0 ){... */\n    tag_72:\n        /* \"CSAMM.sol\":3395:3813  function removeLiquidity(uint _shares) external returns(uint d0,uint d1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"CSAMM.sol\":2727:3388  function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares){... */\n    tag_41:\n        /* \"CSAMM.sol\":2795:2806  uint shares */\n      0x00\n        /* \"CSAMM.sol\":2818:2824  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":2818:2837  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CSAMM.sol\":2838:2848  msg.sender */\n      caller\n        /* \"CSAMM.sol\":2858:2862  this */\n      address\n        /* \"CSAMM.sol\":2865:2873  _amount0 */\n      dup7\n        /* \"CSAMM.sol\":2818:2874  token0.transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_82:\n      pop\n        /* \"CSAMM.sol\":2884:2890  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"CSAMM.sol\":2884:2903  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CSAMM.sol\":2904:2914  msg.sender */\n      caller\n        /* \"CSAMM.sol\":2924:2928  this */\n      address\n        /* \"CSAMM.sol\":2931:2939  _amount1 */\n      dup6\n        /* \"CSAMM.sol\":2884:2940  token1.transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_86:\n      pop\n        /* \"CSAMM.sol\":2950:2959  uint bal0 */\n      0x00\n        /* \"CSAMM.sol\":2962:2968  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":2962:2978  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"CSAMM.sol\":2987:2991  this */\n      address\n        /* \"CSAMM.sol\":2962:2993  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"CSAMM.sol\":2950:2993  uint bal0 = token0.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3003:3012  uint bal1 */\n      0x00\n        /* \"CSAMM.sol\":3015:3021  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"CSAMM.sol\":3015:3031  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"CSAMM.sol\":3040:3044  this */\n      address\n        /* \"CSAMM.sol\":3015:3046  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_96:\n        /* \"CSAMM.sol\":3003:3046  uint bal1 = token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3057:3064  uint d0 */\n      0x00\n        /* \"CSAMM.sol\":3074:3082  reserve0 */\n      dup1\n      sload\n        /* \"CSAMM.sol\":3067:3071  bal0 */\n      dup4\n        /* \"CSAMM.sol\":3067:3082  bal0 - reserve0 */\n      tag_97\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_97:\n        /* \"CSAMM.sol\":3057:3082  uint d0 = bal0 - reserve0 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3092:3099  uint d1 */\n      0x00\n        /* \"CSAMM.sol\":3109:3117  reserve1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":3102:3106  bal1 */\n      dup4\n        /* \"CSAMM.sol\":3102:3117  bal1 - reserve1 */\n      tag_98\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_98:\n        /* \"CSAMM.sol\":3092:3117  uint d1 = bal1 - reserve1 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3146:3147  0 */\n      0x00\n        /* \"CSAMM.sol\":3131:3142  totalSupply */\n      sload(0x02)\n        /* \"CSAMM.sol\":3131:3147  totalSupply == 0 */\n      sub\n        /* \"CSAMM.sol\":3128:3275  if(totalSupply == 0){... */\n      tag_99\n      jumpi\n        /* \"CSAMM.sol\":3176:3178  d1 */\n      dup1\n        /* \"CSAMM.sol\":3171:3173  d0 */\n      dup3\n        /* \"CSAMM.sol\":3171:3178  d0 + d1 */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"CSAMM.sol\":3162:3178  shares = d0 + d1 */\n      swap5\n      pop\n        /* \"CSAMM.sol\":3128:3275  if(totalSupply == 0){... */\n      jump(tag_102)\n    tag_99:\n        /* \"CSAMM.sol\":3255:3263  reserve1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":3244:3252  reserve0 */\n      sload(0x00)\n        /* \"CSAMM.sol\":3244:3263  reserve0 + reserve1 */\n      tag_103\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_103:\n        /* \"CSAMM.sol\":3229:3240  totalSupply */\n      sload(0x02)\n        /* \"CSAMM.sol\":3223:3225  d1 */\n      dup3\n        /* \"CSAMM.sol\":3218:3220  d0 */\n      dup5\n        /* \"CSAMM.sol\":3218:3225  d0 + d1 */\n      tag_104\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_104:\n        /* \"CSAMM.sol\":3216:3240  ( d0 + d1) + totalSupply */\n      tag_105\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_105:\n        /* \"CSAMM.sol\":3215:3264  (( d0 + d1) + totalSupply) /(reserve0 + reserve1) */\n      tag_106\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_106:\n        /* \"CSAMM.sol\":3207:3264  shares =(( d0 + d1) + totalSupply) /(reserve0 + reserve1) */\n      swap5\n      pop\n        /* \"CSAMM.sol\":3128:3275  if(totalSupply == 0){... */\n    tag_102:\n        /* \"CSAMM.sol\":3302:3303  0 */\n      0x00\n        /* \"CSAMM.sol\":3293:3299  shares */\n      dup6\n        /* \"CSAMM.sol\":3293:3303  shares > 0 */\n      gt\n        /* \"CSAMM.sol\":3285:3321  require(shares > 0,\"Unable to mint\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"CSAMM.sol\":3331:3356  _mint(msg.sender, shares) */\n      tag_110\n        /* \"CSAMM.sol\":3337:3347  msg.sender */\n      caller\n        /* \"CSAMM.sol\":3349:3355  shares */\n      dup7\n        /* \"CSAMM.sol\":3331:3336  _mint */\n      tag_111\n        /* \"CSAMM.sol\":3331:3356  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_110:\n        /* \"CSAMM.sol\":3366:3381  _update(d0, d1) */\n      tag_112\n        /* \"CSAMM.sol\":3374:3376  d0 */\n      dup3\n        /* \"CSAMM.sol\":3378:3380  d1 */\n      dup3\n        /* \"CSAMM.sol\":3366:3373  _update */\n      tag_64\n        /* \"CSAMM.sol\":3366:3381  _update(d0, d1) */\n      jump\t// in\n    tag_112:\n        /* \"CSAMM.sol\":2807:3388  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"CSAMM.sol\":2727:3388  function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":726:2698  function swap(address _tokenIn,uint _amountIn)  external returns (uint amountOut)  {... */\n    tag_46:\n        /* \"CSAMM.sol\":792:806  uint amountOut */\n      0x00\n        /* \"CSAMM.sol\":847:853  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":827:854  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CSAMM.sol\":827:835  _tokenIn */\n      dup4\n        /* \"CSAMM.sol\":827:854  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CSAMM.sol\":827:884  _tokenIn == address(token0) ||_tokenIn == address(token1) */\n      dup1\n      tag_114\n      jumpi\n      pop\n        /* \"CSAMM.sol\":877:883  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"CSAMM.sol\":857:884  _tokenIn == address(token1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CSAMM.sol\":857:865  _tokenIn */\n      dup4\n        /* \"CSAMM.sol\":857:884  _tokenIn == address(token1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CSAMM.sol\":827:884  _tokenIn == address(token0) ||_tokenIn == address(token1) */\n    tag_114:\n        /* \"CSAMM.sol\":819:900  require(_tokenIn == address(token0) ||_tokenIn == address(token1), \"Wrong Token\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"CSAMM.sol\":911:924  bool isToken0 */\n      0x00\n        /* \"CSAMM.sol\":947:953  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":927:954  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CSAMM.sol\":927:935  _tokenIn */\n      dup5\n        /* \"CSAMM.sol\":927:954  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CSAMM.sol\":911:954  bool isToken0 = _tokenIn == address(token0) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":965:979  IERC20 tokenIn */\n      0x00\n        /* \"CSAMM.sol\":980:995  IERC20 tokenOut */\n      dup1\n        /* \"CSAMM.sol\":999:1007  isToken0 */\n      dup3\n        /* \"CSAMM.sol\":999:1041  isToken0 ? (token0,token1):(token1,token0) */\n      tag_118\n      jumpi\n        /* \"CSAMM.sol\":1027:1033  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"CSAMM.sol\":1034:1040  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":999:1041  isToken0 ? (token0,token1):(token1,token0) */\n      jump(tag_119)\n    tag_118:\n        /* \"CSAMM.sol\":1011:1017  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":1018:1024  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"CSAMM.sol\":999:1041  isToken0 ? (token0,token1):(token1,token0) */\n    tag_119:\n        /* \"CSAMM.sol\":964:1041  (IERC20 tokenIn,IERC20 tokenOut) = isToken0 ? (token0,token1):(token1,token0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CSAMM.sol\":1052:1066  uint reserveIn */\n      0x00\n        /* \"CSAMM.sol\":1067:1082  uint reserveOut */\n      dup1\n        /* \"CSAMM.sol\":1086:1094  isToken0 */\n      dup5\n        /* \"CSAMM.sol\":1086:1136  isToken0 ? (reserve0,reserve1):(reserve1,reserve0) */\n      tag_120\n      jumpi\n        /* \"CSAMM.sol\":1118:1126  reserve1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":1127:1135  reserve0 */\n      sload(0x00)\n        /* \"CSAMM.sol\":1086:1136  isToken0 ? (reserve0,reserve1):(reserve1,reserve0) */\n      jump(tag_121)\n    tag_120:\n        /* \"CSAMM.sol\":1098:1106  reserve0 */\n      sload(0x00)\n        /* \"CSAMM.sol\":1107:1115  reserve1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":1086:1136  isToken0 ? (reserve0,reserve1):(reserve1,reserve0) */\n    tag_121:\n        /* \"CSAMM.sol\":1051:1136  (uint reserveIn,uint reserveOut) = isToken0 ? (reserve0,reserve1):(reserve1,reserve0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CSAMM.sol\":1146:1160  uint  amountIn */\n      0x00\n        /* \"CSAMM.sol\":1197:1206  reserveIn */\n      dup3\n        /* \"CSAMM.sol\":1163:1169  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"CSAMM.sol\":1163:1179  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"CSAMM.sol\":1188:1192  this */\n      address\n        /* \"CSAMM.sol\":1163:1194  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_122:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_125:\n        /* \"CSAMM.sol\":1163:1206  token0.balanceOf(address(this)) - reserveIn */\n      tag_126\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_126:\n        /* \"CSAMM.sol\":1146:1206  uint  amountIn = token0.balanceOf(address(this)) - reserveIn */\n      swap1\n      pop\n        /* \"CSAMM.sol\":1923:1930  tokenIn */\n      dup5\n        /* \"CSAMM.sol\":1923:1943  tokenIn.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CSAMM.sol\":1944:1954  msg.sender */\n      caller\n        /* \"CSAMM.sol\":1964:1968  this */\n      address\n        /* \"CSAMM.sol\":1971:1980  _amountIn */\n      dup12\n        /* \"CSAMM.sol\":1923:1981  tokenIn.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_130:\n      pop\n        /* \"CSAMM.sol\":2146:2150  1000 */\n      0x03e8\n        /* \"CSAMM.sol\":2141:2144  997 */\n      0x03e5\n        /* \"CSAMM.sol\":2130:2138  amountIn */\n      dup3\n        /* \"CSAMM.sol\":2130:2144  amountIn * 997 */\n      tag_131\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_131:\n        /* \"CSAMM.sol\":2130:2150  amountIn * 997 /1000 */\n      tag_132\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_132:\n        /* \"CSAMM.sol\":2118:2150  amountOut = amountIn * 997 /1000 */\n      swap7\n      pop\n        /* \"CSAMM.sol\":2162:2171  uint res0 */\n      0x00\n        /* \"CSAMM.sol\":2172:2181  uint res1 */\n      dup1\n        /* \"CSAMM.sol\":2185:2193  isToken0 */\n      dup8\n        /* \"CSAMM.sol\":2185:2309  isToken0 ?... */\n      tag_133\n      jumpi\n        /* \"CSAMM.sol\":2276:2285  amountOut */\n      dup9\n        /* \"CSAMM.sol\":2264:2273  reserveIn */\n      dup6\n        /* \"CSAMM.sol\":2264:2285  reserveIn - amountOut */\n      tag_134\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_134:\n        /* \"CSAMM.sol\":2299:2308  _amountIn */\n      dup11\n        /* \"CSAMM.sol\":2286:2296  reserveOut */\n      dup6\n        /* \"CSAMM.sol\":2286:2308  reserveOut + _amountIn */\n      tag_135\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_135:\n        /* \"CSAMM.sol\":2185:2309  isToken0 ?... */\n      jump(tag_136)\n    tag_133:\n        /* \"CSAMM.sol\":2218:2227  _amountIn */\n      dup10\n        /* \"CSAMM.sol\":2206:2215  reserveIn */\n      dup6\n        /* \"CSAMM.sol\":2206:2227  reserveIn + _amountIn */\n      tag_137\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_137:\n        /* \"CSAMM.sol\":2241:2250  amountOut */\n      dup10\n        /* \"CSAMM.sol\":2228:2238  reserveOut */\n      dup6\n        /* \"CSAMM.sol\":2228:2250  reserveOut - amountOut */\n      tag_138\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_138:\n        /* \"CSAMM.sol\":2185:2309  isToken0 ?... */\n    tag_136:\n        /* \"CSAMM.sol\":2161:2309  (uint res0,uint res1) = isToken0 ?... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CSAMM.sol\":2321:2339  _update(res0,res1) */\n      tag_139\n        /* \"CSAMM.sol\":2329:2333  res0 */\n      dup3\n        /* \"CSAMM.sol\":2334:2338  res1 */\n      dup3\n        /* \"CSAMM.sol\":2321:2328  _update */\n      tag_64\n        /* \"CSAMM.sol\":2321:2339  _update(res0,res1) */\n      jump\t// in\n    tag_139:\n        /* \"CSAMM.sol\":2652:2660  tokenOut */\n      dup6\n        /* \"CSAMM.sol\":2652:2669  tokenOut.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"CSAMM.sol\":2670:2680  msg.sender */\n      caller\n        /* \"CSAMM.sol\":2681:2690  amountOut */\n      dup12\n        /* \"CSAMM.sol\":2652:2691  tokenOut.transfer(msg.sender,amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_140:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_143:\n      pop\n        /* \"CSAMM.sol\":809:2698  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"CSAMM.sol\":726:2698  function swap(address _tokenIn,uint _amountIn)  external returns (uint amountOut)  {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":171:201  IERC20 public immutable token1 */\n    tag_49:\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":468:591  function _burn(address _to,uint _amount) private {... */\n    tag_59:\n        /* \"CSAMM.sol\":545:552  _amount */\n      dup1\n        /* \"CSAMM.sol\":527:536  balanceOf */\n      0x03\n        /* \"CSAMM.sol\":527:541  balanceOf[_to] */\n      0x00\n        /* \"CSAMM.sol\":537:540  _to */\n      dup5\n        /* \"CSAMM.sol\":527:541  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CSAMM.sol\":527:552  balanceOf[_to] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":577:584  _amount */\n      dup1\n        /* \"CSAMM.sol\":562:573  totalSupply */\n      0x02\n      0x00\n        /* \"CSAMM.sol\":562:584  totalSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":468:591  function _burn(address _to,uint _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":597:720  function _update(uint _reserve0,uint _reserve1) private {... */\n    tag_64:\n        /* \"CSAMM.sol\":674:683  _reserve0 */\n      dup2\n        /* \"CSAMM.sol\":663:671  reserve0 */\n      0x00\n        /* \"CSAMM.sol\":663:683  reserve0 = _reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":704:713  _reserve1 */\n      dup1\n        /* \"CSAMM.sol\":693:701  reserve1 */\n      0x01\n        /* \"CSAMM.sol\":693:713  reserve1 = _reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":597:720  function _update(uint _reserve0,uint _reserve1) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":339:462  function _mint(address _to,uint _amount) private {... */\n    tag_111:\n        /* \"CSAMM.sol\":416:423  _amount */\n      dup1\n        /* \"CSAMM.sol\":398:407  balanceOf */\n      0x03\n        /* \"CSAMM.sol\":398:412  balanceOf[_to] */\n      0x00\n        /* \"CSAMM.sol\":408:411  _to */\n      dup5\n        /* \"CSAMM.sol\":398:412  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CSAMM.sol\":398:423  balanceOf[_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_149:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":448:455  _amount */\n      dup1\n        /* \"CSAMM.sol\":433:444  totalSupply */\n      0x02\n      0x00\n        /* \"CSAMM.sol\":433:455  totalSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_150\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":339:462  function _mint(address _to,uint _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_151:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_152:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_153:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_183\n        /* \"#utility.yul\":306:340   */\n      tag_184\n        /* \"#utility.yul\":315:339   */\n      tag_185\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_151\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":306:340   */\n      tag_152\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":288:341   */\n      tag_151\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_154:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_187\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_153\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_155:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_189\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_154\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_156:\n        /* \"#utility.yul\":732:783   */\n      tag_191\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_155\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_16:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_193\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_156\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1129   */\n    tag_157:\n        /* \"#utility.yul\":1089:1096   */\n      0x00\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1107:1123   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1253   */\n    tag_158:\n        /* \"#utility.yul\":1222:1246   */\n      tag_196\n        /* \"#utility.yul\":1240:1245   */\n      dup2\n        /* \"#utility.yul\":1222:1246   */\n      tag_157\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1217:1220   */\n      dup3\n        /* \"#utility.yul\":1210:1247   */\n      mstore\n        /* \"#utility.yul\":1135:1253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1481   */\n    tag_20:\n        /* \"#utility.yul\":1352:1356   */\n      0x00\n        /* \"#utility.yul\":1390:1392   */\n      0x20\n        /* \"#utility.yul\":1379:1388   */\n      dup3\n        /* \"#utility.yul\":1375:1393   */\n      add\n        /* \"#utility.yul\":1367:1393   */\n      swap1\n      pop\n        /* \"#utility.yul\":1403:1474   */\n      tag_198\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1403:1474   */\n      tag_158\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1259:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_160:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1910   */\n    tag_162:\n        /* \"#utility.yul\":1851:1858   */\n      0x00\n        /* \"#utility.yul\":1880:1904   */\n      tag_203\n        /* \"#utility.yul\":1898:1903   */\n      dup3\n        /* \"#utility.yul\":1880:1904   */\n      tag_151\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1869:1904   */\n      swap1\n      pop\n        /* \"#utility.yul\":1814:1910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1916:2038   */\n    tag_163:\n        /* \"#utility.yul\":1989:2013   */\n      tag_205\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1989:2013   */\n      tag_162\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1982:1987   */\n      dup2\n        /* \"#utility.yul\":1979:2014   */\n      eq\n        /* \"#utility.yul\":1969:2032   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1969:2032   */\n    tag_206:\n        /* \"#utility.yul\":1916:2038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2044:2183   */\n    tag_164:\n        /* \"#utility.yul\":2090:2095   */\n      0x00\n        /* \"#utility.yul\":2128:2134   */\n      dup2\n        /* \"#utility.yul\":2115:2135   */\n      calldataload\n        /* \"#utility.yul\":2106:2135   */\n      swap1\n      pop\n        /* \"#utility.yul\":2144:2177   */\n      tag_208\n        /* \"#utility.yul\":2171:2176   */\n      dup2\n        /* \"#utility.yul\":2144:2177   */\n      tag_163\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2044:2183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2518   */\n    tag_29:\n        /* \"#utility.yul\":2248:2254   */\n      0x00\n        /* \"#utility.yul\":2297:2299   */\n      0x20\n        /* \"#utility.yul\":2285:2294   */\n      dup3\n        /* \"#utility.yul\":2276:2283   */\n      dup5\n        /* \"#utility.yul\":2272:2295   */\n      sub\n        /* \"#utility.yul\":2268:2300   */\n      slt\n        /* \"#utility.yul\":2265:2384   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2303:2382   */\n      tag_211\n      tag_160\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2265:2384   */\n    tag_210:\n        /* \"#utility.yul\":2423:2424   */\n      0x00\n        /* \"#utility.yul\":2448:2501   */\n      tag_212\n        /* \"#utility.yul\":2493:2500   */\n      dup5\n        /* \"#utility.yul\":2484:2490   */\n      dup3\n        /* \"#utility.yul\":2473:2482   */\n      dup6\n        /* \"#utility.yul\":2469:2491   */\n      add\n        /* \"#utility.yul\":2448:2501   */\n      tag_164\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2438:2501   */\n      swap2\n      pop\n        /* \"#utility.yul\":2394:2511   */\n      pop\n        /* \"#utility.yul\":2189:2518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_165:\n        /* \"#utility.yul\":2597:2621   */\n      tag_214\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_157\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_215:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_166:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_217\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_165\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3126   */\n    tag_34:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"#utility.yul\":2893:2902   */\n      dup3\n        /* \"#utility.yul\":2884:2891   */\n      dup5\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2992   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2911:2990   */\n      tag_220\n      tag_160\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2873:2992   */\n    tag_219:\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3056:3109   */\n      tag_221\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_166\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3046:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":3002:3119   */\n      pop\n        /* \"#utility.yul\":2797:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3464   */\n    tag_37:\n        /* \"#utility.yul\":3253:3257   */\n      0x00\n        /* \"#utility.yul\":3291:3293   */\n      0x40\n        /* \"#utility.yul\":3280:3289   */\n      dup3\n        /* \"#utility.yul\":3276:3294   */\n      add\n        /* \"#utility.yul\":3268:3294   */\n      swap1\n      pop\n        /* \"#utility.yul\":3304:3375   */\n      tag_223\n        /* \"#utility.yul\":3372:3373   */\n      0x00\n        /* \"#utility.yul\":3361:3370   */\n      dup4\n        /* \"#utility.yul\":3357:3374   */\n      add\n        /* \"#utility.yul\":3348:3354   */\n      dup6\n        /* \"#utility.yul\":3304:3375   */\n      tag_158\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3385:3457   */\n      tag_224\n        /* \"#utility.yul\":3453:3455   */\n      0x20\n        /* \"#utility.yul\":3442:3451   */\n      dup4\n        /* \"#utility.yul\":3438:3456   */\n      add\n        /* \"#utility.yul\":3429:3435   */\n      dup5\n        /* \"#utility.yul\":3385:3457   */\n      tag_158\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3132:3464   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3470:3944   */\n    tag_40:\n        /* \"#utility.yul\":3538:3544   */\n      0x00\n        /* \"#utility.yul\":3546:3552   */\n      dup1\n        /* \"#utility.yul\":3595:3597   */\n      0x40\n        /* \"#utility.yul\":3583:3592   */\n      dup4\n        /* \"#utility.yul\":3574:3581   */\n      dup6\n        /* \"#utility.yul\":3570:3593   */\n      sub\n        /* \"#utility.yul\":3566:3598   */\n      slt\n        /* \"#utility.yul\":3563:3682   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3601:3680   */\n      tag_227\n      tag_160\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3563:3682   */\n    tag_226:\n        /* \"#utility.yul\":3721:3722   */\n      0x00\n        /* \"#utility.yul\":3746:3799   */\n      tag_228\n        /* \"#utility.yul\":3791:3798   */\n      dup6\n        /* \"#utility.yul\":3782:3788   */\n      dup3\n        /* \"#utility.yul\":3771:3780   */\n      dup7\n        /* \"#utility.yul\":3767:3789   */\n      add\n        /* \"#utility.yul\":3746:3799   */\n      tag_166\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3736:3799   */\n      swap3\n      pop\n        /* \"#utility.yul\":3692:3809   */\n      pop\n        /* \"#utility.yul\":3848:3850   */\n      0x20\n        /* \"#utility.yul\":3874:3927   */\n      tag_229\n        /* \"#utility.yul\":3919:3926   */\n      dup6\n        /* \"#utility.yul\":3910:3916   */\n      dup3\n        /* \"#utility.yul\":3899:3908   */\n      dup7\n        /* \"#utility.yul\":3895:3917   */\n      add\n        /* \"#utility.yul\":3874:3927   */\n      tag_166\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3864:3927   */\n      swap2\n      pop\n        /* \"#utility.yul\":3819:3937   */\n      pop\n        /* \"#utility.yul\":3470:3944   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3950:4424   */\n    tag_45:\n        /* \"#utility.yul\":4018:4024   */\n      0x00\n        /* \"#utility.yul\":4026:4032   */\n      dup1\n        /* \"#utility.yul\":4075:4077   */\n      0x40\n        /* \"#utility.yul\":4063:4072   */\n      dup4\n        /* \"#utility.yul\":4054:4061   */\n      dup6\n        /* \"#utility.yul\":4050:4073   */\n      sub\n        /* \"#utility.yul\":4046:4078   */\n      slt\n        /* \"#utility.yul\":4043:4162   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4081:4160   */\n      tag_232\n      tag_160\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4043:4162   */\n    tag_231:\n        /* \"#utility.yul\":4201:4202   */\n      0x00\n        /* \"#utility.yul\":4226:4279   */\n      tag_233\n        /* \"#utility.yul\":4271:4278   */\n      dup6\n        /* \"#utility.yul\":4262:4268   */\n      dup3\n        /* \"#utility.yul\":4251:4260   */\n      dup7\n        /* \"#utility.yul\":4247:4269   */\n      add\n        /* \"#utility.yul\":4226:4279   */\n      tag_164\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4216:4279   */\n      swap3\n      pop\n        /* \"#utility.yul\":4172:4289   */\n      pop\n        /* \"#utility.yul\":4328:4330   */\n      0x20\n        /* \"#utility.yul\":4354:4407   */\n      tag_234\n        /* \"#utility.yul\":4399:4406   */\n      dup6\n        /* \"#utility.yul\":4390:4396   */\n      dup3\n        /* \"#utility.yul\":4379:4388   */\n      dup7\n        /* \"#utility.yul\":4375:4397   */\n      add\n        /* \"#utility.yul\":4354:4407   */\n      tag_166\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4344:4407   */\n      swap2\n      pop\n        /* \"#utility.yul\":4299:4417   */\n      pop\n        /* \"#utility.yul\":3950:4424   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4430:4610   */\n    tag_167:\n        /* \"#utility.yul\":4478:4555   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4475:4476   */\n      0x00\n        /* \"#utility.yul\":4468:4556   */\n      mstore\n        /* \"#utility.yul\":4575:4579   */\n      0x11\n        /* \"#utility.yul\":4572:4573   */\n      0x04\n        /* \"#utility.yul\":4565:4580   */\n      mstore\n        /* \"#utility.yul\":4599:4603   */\n      0x24\n        /* \"#utility.yul\":4596:4597   */\n      0x00\n        /* \"#utility.yul\":4589:4604   */\n      revert\n        /* \"#utility.yul\":4616:5026   */\n    tag_53:\n        /* \"#utility.yul\":4656:4663   */\n      0x00\n        /* \"#utility.yul\":4679:4699   */\n      tag_237\n        /* \"#utility.yul\":4697:4698   */\n      dup3\n        /* \"#utility.yul\":4679:4699   */\n      tag_157\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4674:4699   */\n      swap2\n      pop\n        /* \"#utility.yul\":4713:4733   */\n      tag_238\n        /* \"#utility.yul\":4731:4732   */\n      dup4\n        /* \"#utility.yul\":4713:4733   */\n      tag_157\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4708:4733   */\n      swap3\n      pop\n        /* \"#utility.yul\":4768:4769   */\n      dup3\n        /* \"#utility.yul\":4765:4766   */\n      dup3\n        /* \"#utility.yul\":4761:4770   */\n      mul\n        /* \"#utility.yul\":4790:4820   */\n      tag_239\n        /* \"#utility.yul\":4808:4819   */\n      dup2\n        /* \"#utility.yul\":4790:4820   */\n      tag_157\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4779:4820   */\n      swap2\n      pop\n        /* \"#utility.yul\":4969:4970   */\n      dup3\n        /* \"#utility.yul\":4960:4967   */\n      dup3\n        /* \"#utility.yul\":4956:4971   */\n      div\n        /* \"#utility.yul\":4953:4954   */\n      dup5\n        /* \"#utility.yul\":4950:4972   */\n      eq\n        /* \"#utility.yul\":4930:4931   */\n      dup4\n        /* \"#utility.yul\":4923:4932   */\n      iszero\n        /* \"#utility.yul\":4903:4986   */\n      or\n        /* \"#utility.yul\":4880:5019   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":4999:5017   */\n      tag_241\n      tag_167\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4880:5019   */\n    tag_240:\n        /* \"#utility.yul\":4664:5026   */\n      pop\n        /* \"#utility.yul\":4616:5026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5032:5212   */\n    tag_168:\n        /* \"#utility.yul\":5080:5157   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5077:5078   */\n      0x00\n        /* \"#utility.yul\":5070:5158   */\n      mstore\n        /* \"#utility.yul\":5177:5181   */\n      0x12\n        /* \"#utility.yul\":5174:5175   */\n      0x04\n        /* \"#utility.yul\":5167:5182   */\n      mstore\n        /* \"#utility.yul\":5201:5205   */\n      0x24\n        /* \"#utility.yul\":5198:5199   */\n      0x00\n        /* \"#utility.yul\":5191:5206   */\n      revert\n        /* \"#utility.yul\":5218:5403   */\n    tag_55:\n        /* \"#utility.yul\":5258:5259   */\n      0x00\n        /* \"#utility.yul\":5275:5295   */\n      tag_244\n        /* \"#utility.yul\":5293:5294   */\n      dup3\n        /* \"#utility.yul\":5275:5295   */\n      tag_157\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5270:5295   */\n      swap2\n      pop\n        /* \"#utility.yul\":5309:5329   */\n      tag_245\n        /* \"#utility.yul\":5327:5328   */\n      dup4\n        /* \"#utility.yul\":5309:5329   */\n      tag_157\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5304:5329   */\n      swap3\n      pop\n        /* \"#utility.yul\":5348:5349   */\n      dup3\n        /* \"#utility.yul\":5338:5373   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":5353:5371   */\n      tag_247\n      tag_168\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5338:5373   */\n    tag_246:\n        /* \"#utility.yul\":5395:5396   */\n      dup3\n        /* \"#utility.yul\":5392:5393   */\n      dup3\n        /* \"#utility.yul\":5388:5397   */\n      div\n        /* \"#utility.yul\":5383:5397   */\n      swap1\n      pop\n        /* \"#utility.yul\":5218:5403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5409:5603   */\n    tag_62:\n        /* \"#utility.yul\":5449:5453   */\n      0x00\n        /* \"#utility.yul\":5469:5489   */\n      tag_249\n        /* \"#utility.yul\":5487:5488   */\n      dup3\n        /* \"#utility.yul\":5469:5489   */\n      tag_157\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5464:5489   */\n      swap2\n      pop\n        /* \"#utility.yul\":5503:5523   */\n      tag_250\n        /* \"#utility.yul\":5521:5522   */\n      dup4\n        /* \"#utility.yul\":5503:5523   */\n      tag_157\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5498:5523   */\n      swap3\n      pop\n        /* \"#utility.yul\":5547:5548   */\n      dup3\n        /* \"#utility.yul\":5544:5545   */\n      dup3\n        /* \"#utility.yul\":5540:5549   */\n      sub\n        /* \"#utility.yul\":5532:5549   */\n      swap1\n      pop\n        /* \"#utility.yul\":5571:5572   */\n      dup2\n        /* \"#utility.yul\":5565:5569   */\n      dup2\n        /* \"#utility.yul\":5562:5573   */\n      gt\n        /* \"#utility.yul\":5559:5596   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":5576:5594   */\n      tag_252\n      tag_167\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5559:5596   */\n    tag_251:\n        /* \"#utility.yul\":5409:5603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5609:5727   */\n    tag_169:\n        /* \"#utility.yul\":5696:5720   */\n      tag_254\n        /* \"#utility.yul\":5714:5719   */\n      dup2\n        /* \"#utility.yul\":5696:5720   */\n      tag_162\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5691:5694   */\n      dup3\n        /* \"#utility.yul\":5684:5721   */\n      mstore\n        /* \"#utility.yul\":5609:5727   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5733:6065   */\n    tag_67:\n        /* \"#utility.yul\":5854:5858   */\n      0x00\n        /* \"#utility.yul\":5892:5894   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup3\n        /* \"#utility.yul\":5877:5895   */\n      add\n        /* \"#utility.yul\":5869:5895   */\n      swap1\n      pop\n        /* \"#utility.yul\":5905:5976   */\n      tag_256\n        /* \"#utility.yul\":5973:5974   */\n      0x00\n        /* \"#utility.yul\":5962:5971   */\n      dup4\n        /* \"#utility.yul\":5958:5975   */\n      add\n        /* \"#utility.yul\":5949:5955   */\n      dup6\n        /* \"#utility.yul\":5905:5976   */\n      tag_169\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5986:6058   */\n      tag_257\n        /* \"#utility.yul\":6054:6056   */\n      0x20\n        /* \"#utility.yul\":6043:6052   */\n      dup4\n        /* \"#utility.yul\":6039:6057   */\n      add\n        /* \"#utility.yul\":6030:6036   */\n      dup5\n        /* \"#utility.yul\":5986:6058   */\n      tag_158\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5733:6065   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6071:6161   */\n    tag_170:\n        /* \"#utility.yul\":6105:6112   */\n      0x00\n        /* \"#utility.yul\":6148:6153   */\n      dup2\n        /* \"#utility.yul\":6141:6154   */\n      iszero\n        /* \"#utility.yul\":6134:6155   */\n      iszero\n        /* \"#utility.yul\":6123:6155   */\n      swap1\n      pop\n        /* \"#utility.yul\":6071:6161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6167:6283   */\n    tag_171:\n        /* \"#utility.yul\":6237:6258   */\n      tag_260\n        /* \"#utility.yul\":6252:6257   */\n      dup2\n        /* \"#utility.yul\":6237:6258   */\n      tag_170\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6230:6235   */\n      dup2\n        /* \"#utility.yul\":6227:6259   */\n      eq\n        /* \"#utility.yul\":6217:6277   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":6273:6274   */\n      0x00\n        /* \"#utility.yul\":6270:6271   */\n      dup1\n        /* \"#utility.yul\":6263:6275   */\n      revert\n        /* \"#utility.yul\":6217:6277   */\n    tag_261:\n        /* \"#utility.yul\":6167:6283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6289:6426   */\n    tag_172:\n        /* \"#utility.yul\":6343:6348   */\n      0x00\n        /* \"#utility.yul\":6374:6380   */\n      dup2\n        /* \"#utility.yul\":6368:6381   */\n      mload\n        /* \"#utility.yul\":6359:6381   */\n      swap1\n      pop\n        /* \"#utility.yul\":6390:6420   */\n      tag_263\n        /* \"#utility.yul\":6414:6419   */\n      dup2\n        /* \"#utility.yul\":6390:6420   */\n      tag_171\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6289:6426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6432:6777   */\n    tag_71:\n        /* \"#utility.yul\":6499:6505   */\n      0x00\n        /* \"#utility.yul\":6548:6550   */\n      0x20\n        /* \"#utility.yul\":6536:6545   */\n      dup3\n        /* \"#utility.yul\":6527:6534   */\n      dup5\n        /* \"#utility.yul\":6523:6546   */\n      sub\n        /* \"#utility.yul\":6519:6551   */\n      slt\n        /* \"#utility.yul\":6516:6635   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":6554:6633   */\n      tag_266\n      tag_160\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6516:6635   */\n    tag_265:\n        /* \"#utility.yul\":6674:6675   */\n      0x00\n        /* \"#utility.yul\":6699:6760   */\n      tag_267\n        /* \"#utility.yul\":6752:6759   */\n      dup5\n        /* \"#utility.yul\":6743:6749   */\n      dup3\n        /* \"#utility.yul\":6732:6741   */\n      dup6\n        /* \"#utility.yul\":6728:6750   */\n      add\n        /* \"#utility.yul\":6699:6760   */\n      tag_172\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6689:6760   */\n      swap2\n      pop\n        /* \"#utility.yul\":6645:6770   */\n      pop\n        /* \"#utility.yul\":6432:6777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6783:7225   */\n    tag_79:\n        /* \"#utility.yul\":6932:6936   */\n      0x00\n        /* \"#utility.yul\":6970:6972   */\n      0x60\n        /* \"#utility.yul\":6959:6968   */\n      dup3\n        /* \"#utility.yul\":6955:6973   */\n      add\n        /* \"#utility.yul\":6947:6973   */\n      swap1\n      pop\n        /* \"#utility.yul\":6983:7054   */\n      tag_269\n        /* \"#utility.yul\":7051:7052   */\n      0x00\n        /* \"#utility.yul\":7040:7049   */\n      dup4\n        /* \"#utility.yul\":7036:7053   */\n      add\n        /* \"#utility.yul\":7027:7033   */\n      dup7\n        /* \"#utility.yul\":6983:7054   */\n      tag_169\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7064:7136   */\n      tag_270\n        /* \"#utility.yul\":7132:7134   */\n      0x20\n        /* \"#utility.yul\":7121:7130   */\n      dup4\n        /* \"#utility.yul\":7117:7135   */\n      add\n        /* \"#utility.yul\":7108:7114   */\n      dup6\n        /* \"#utility.yul\":7064:7136   */\n      tag_169\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7146:7218   */\n      tag_271\n        /* \"#utility.yul\":7214:7216   */\n      0x40\n        /* \"#utility.yul\":7203:7212   */\n      dup4\n        /* \"#utility.yul\":7199:7217   */\n      add\n        /* \"#utility.yul\":7190:7196   */\n      dup5\n        /* \"#utility.yul\":7146:7218   */\n      tag_158\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6783:7225   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7231:7453   */\n    tag_88:\n        /* \"#utility.yul\":7324:7328   */\n      0x00\n        /* \"#utility.yul\":7362:7364   */\n      0x20\n        /* \"#utility.yul\":7351:7360   */\n      dup3\n        /* \"#utility.yul\":7347:7365   */\n      add\n        /* \"#utility.yul\":7339:7365   */\n      swap1\n      pop\n        /* \"#utility.yul\":7375:7446   */\n      tag_273\n        /* \"#utility.yul\":7443:7444   */\n      0x00\n        /* \"#utility.yul\":7432:7441   */\n      dup4\n        /* \"#utility.yul\":7428:7445   */\n      add\n        /* \"#utility.yul\":7419:7425   */\n      dup5\n        /* \"#utility.yul\":7375:7446   */\n      tag_169\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7231:7453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7459:7602   */\n    tag_173:\n        /* \"#utility.yul\":7516:7521   */\n      0x00\n        /* \"#utility.yul\":7547:7553   */\n      dup2\n        /* \"#utility.yul\":7541:7554   */\n      mload\n        /* \"#utility.yul\":7532:7554   */\n      swap1\n      pop\n        /* \"#utility.yul\":7563:7596   */\n      tag_275\n        /* \"#utility.yul\":7590:7595   */\n      dup2\n        /* \"#utility.yul\":7563:7596   */\n      tag_165\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7459:7602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7608:7959   */\n    tag_92:\n        /* \"#utility.yul\":7678:7684   */\n      0x00\n        /* \"#utility.yul\":7727:7729   */\n      0x20\n        /* \"#utility.yul\":7715:7724   */\n      dup3\n        /* \"#utility.yul\":7706:7713   */\n      dup5\n        /* \"#utility.yul\":7702:7725   */\n      sub\n        /* \"#utility.yul\":7698:7730   */\n      slt\n        /* \"#utility.yul\":7695:7814   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":7733:7812   */\n      tag_278\n      tag_160\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7695:7814   */\n    tag_277:\n        /* \"#utility.yul\":7853:7854   */\n      0x00\n        /* \"#utility.yul\":7878:7942   */\n      tag_279\n        /* \"#utility.yul\":7934:7941   */\n      dup5\n        /* \"#utility.yul\":7925:7931   */\n      dup3\n        /* \"#utility.yul\":7914:7923   */\n      dup6\n        /* \"#utility.yul\":7910:7932   */\n      add\n        /* \"#utility.yul\":7878:7942   */\n      tag_173\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7868:7942   */\n      swap2\n      pop\n        /* \"#utility.yul\":7824:7952   */\n      pop\n        /* \"#utility.yul\":7608:7959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7965:8156   */\n    tag_101:\n        /* \"#utility.yul\":8005:8008   */\n      0x00\n        /* \"#utility.yul\":8024:8044   */\n      tag_281\n        /* \"#utility.yul\":8042:8043   */\n      dup3\n        /* \"#utility.yul\":8024:8044   */\n      tag_157\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8019:8044   */\n      swap2\n      pop\n        /* \"#utility.yul\":8058:8078   */\n      tag_282\n        /* \"#utility.yul\":8076:8077   */\n      dup4\n        /* \"#utility.yul\":8058:8078   */\n      tag_157\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8053:8078   */\n      swap3\n      pop\n        /* \"#utility.yul\":8101:8102   */\n      dup3\n        /* \"#utility.yul\":8098:8099   */\n      dup3\n        /* \"#utility.yul\":8094:8103   */\n      add\n        /* \"#utility.yul\":8087:8103   */\n      swap1\n      pop\n        /* \"#utility.yul\":8122:8125   */\n      dup1\n        /* \"#utility.yul\":8119:8120   */\n      dup3\n        /* \"#utility.yul\":8116:8126   */\n      gt\n        /* \"#utility.yul\":8113:8149   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":8129:8147   */\n      tag_284\n      tag_167\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8113:8149   */\n    tag_283:\n        /* \"#utility.yul\":7965:8156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8162:8331   */\n    tag_174:\n        /* \"#utility.yul\":8246:8257   */\n      0x00\n        /* \"#utility.yul\":8280:8286   */\n      dup3\n        /* \"#utility.yul\":8275:8278   */\n      dup3\n        /* \"#utility.yul\":8268:8287   */\n      mstore\n        /* \"#utility.yul\":8320:8324   */\n      0x20\n        /* \"#utility.yul\":8315:8318   */\n      dup3\n        /* \"#utility.yul\":8311:8325   */\n      add\n        /* \"#utility.yul\":8296:8325   */\n      swap1\n      pop\n        /* \"#utility.yul\":8162:8331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8337:8501   */\n    tag_175:\n        /* \"#utility.yul\":8477:8493   */\n      0x556e61626c6520746f206d696e74000000000000000000000000000000000000\n        /* \"#utility.yul\":8473:8474   */\n      0x00\n        /* \"#utility.yul\":8465:8471   */\n      dup3\n        /* \"#utility.yul\":8461:8475   */\n      add\n        /* \"#utility.yul\":8454:8494   */\n      mstore\n        /* \"#utility.yul\":8337:8501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8507:8873   */\n    tag_176:\n        /* \"#utility.yul\":8649:8652   */\n      0x00\n        /* \"#utility.yul\":8670:8737   */\n      tag_288\n        /* \"#utility.yul\":8734:8736   */\n      0x0e\n        /* \"#utility.yul\":8729:8732   */\n      dup4\n        /* \"#utility.yul\":8670:8737   */\n      tag_174\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8663:8737   */\n      swap2\n      pop\n        /* \"#utility.yul\":8746:8839   */\n      tag_289\n        /* \"#utility.yul\":8835:8838   */\n      dup3\n        /* \"#utility.yul\":8746:8839   */\n      tag_175\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8864:8866   */\n      0x20\n        /* \"#utility.yul\":8859:8862   */\n      dup3\n        /* \"#utility.yul\":8855:8867   */\n      add\n        /* \"#utility.yul\":8848:8867   */\n      swap1\n      pop\n        /* \"#utility.yul\":8507:8873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8879:9298   */\n    tag_109:\n        /* \"#utility.yul\":9045:9049   */\n      0x00\n        /* \"#utility.yul\":9083:9085   */\n      0x20\n        /* \"#utility.yul\":9072:9081   */\n      dup3\n        /* \"#utility.yul\":9068:9086   */\n      add\n        /* \"#utility.yul\":9060:9086   */\n      swap1\n      pop\n        /* \"#utility.yul\":9132:9141   */\n      dup2\n        /* \"#utility.yul\":9126:9130   */\n      dup2\n        /* \"#utility.yul\":9122:9142   */\n      sub\n        /* \"#utility.yul\":9118:9119   */\n      0x00\n        /* \"#utility.yul\":9107:9116   */\n      dup4\n        /* \"#utility.yul\":9103:9120   */\n      add\n        /* \"#utility.yul\":9096:9143   */\n      mstore\n        /* \"#utility.yul\":9160:9291   */\n      tag_291\n        /* \"#utility.yul\":9286:9290   */\n      dup2\n        /* \"#utility.yul\":9160:9291   */\n      tag_176\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9152:9291   */\n      swap1\n      pop\n        /* \"#utility.yul\":8879:9298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9304:9465   */\n    tag_177:\n        /* \"#utility.yul\":9444:9457   */\n      0x57726f6e6720546f6b656e000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9440:9441   */\n      0x00\n        /* \"#utility.yul\":9432:9438   */\n      dup3\n        /* \"#utility.yul\":9428:9442   */\n      add\n        /* \"#utility.yul\":9421:9458   */\n      mstore\n        /* \"#utility.yul\":9304:9465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9471:9837   */\n    tag_178:\n        /* \"#utility.yul\":9613:9616   */\n      0x00\n        /* \"#utility.yul\":9634:9701   */\n      tag_294\n        /* \"#utility.yul\":9698:9700   */\n      0x0b\n        /* \"#utility.yul\":9693:9696   */\n      dup4\n        /* \"#utility.yul\":9634:9701   */\n      tag_174\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9627:9701   */\n      swap2\n      pop\n        /* \"#utility.yul\":9710:9803   */\n      tag_295\n        /* \"#utility.yul\":9799:9802   */\n      dup3\n        /* \"#utility.yul\":9710:9803   */\n      tag_177\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9828:9830   */\n      0x20\n        /* \"#utility.yul\":9823:9826   */\n      dup3\n        /* \"#utility.yul\":9819:9831   */\n      add\n        /* \"#utility.yul\":9812:9831   */\n      swap1\n      pop\n        /* \"#utility.yul\":9471:9837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9843:10262   */\n    tag_117:\n        /* \"#utility.yul\":10009:10013   */\n      0x00\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10036:10045   */\n      dup3\n        /* \"#utility.yul\":10032:10050   */\n      add\n        /* \"#utility.yul\":10024:10050   */\n      swap1\n      pop\n        /* \"#utility.yul\":10096:10105   */\n      dup2\n        /* \"#utility.yul\":10090:10094   */\n      dup2\n        /* \"#utility.yul\":10086:10106   */\n      sub\n        /* \"#utility.yul\":10082:10083   */\n      0x00\n        /* \"#utility.yul\":10071:10080   */\n      dup4\n        /* \"#utility.yul\":10067:10084   */\n      add\n        /* \"#utility.yul\":10060:10107   */\n      mstore\n        /* \"#utility.yul\":10124:10255   */\n      tag_297\n        /* \"#utility.yul\":10250:10254   */\n      dup2\n        /* \"#utility.yul\":10124:10255   */\n      tag_178\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10116:10255   */\n      swap1\n      pop\n        /* \"#utility.yul\":9843:10262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122088c4b9f6e2e025a0a7611d76812420c5678fb1cd361770620e3d60df2824197764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1186": {
									"entryPoint": null,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:6",
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051611391380380611391833981810160405281019061003191906100fe565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505061013c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100cd826100a4565b9050919050565b6100dd816100c3565b81146100e7575f80fd5b50565b5f815190506100f8816100d4565b92915050565b5f8060408385031215610114576101136100a0565b5b5f610121858286016100ea565b9250506020610132858286016100ea565b9150509250929050565b60805160a0516111d26101bf5f395f818161034d0152818161048e015281816105c80152818161078a01528181610872015281816108da0152610b3101525f81816101ee015281816102a8015281816103f00152818161052d015281816107350152818161081a01528181610893015281816108b9015261091d01526111d25ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c806370a082311161006457806370a082311461010d5780639c8f9f231461013d5780639cd441da1461016e578063d004f0f71461019e578063d21220a7146101ce57610091565b80630dfe16811461009557806318160ddd146100b3578063443cb4bc146100d15780635a76f25e146100ef575b5f80fd5b61009d6101ec565b6040516100aa9190610cbc565b60405180910390f35b6100bb610210565b6040516100c89190610ced565b60405180910390f35b6100d9610216565b6040516100e69190610ced565b60405180910390f35b6100f761021b565b6040516101049190610ced565b60405180910390f35b61012760048036038101906101229190610d45565b610221565b6040516101349190610ced565b60405180910390f35b61015760048036038101906101529190610d9a565b610236565b604051610165929190610dc5565b60405180910390f35b61018860048036038101906101839190610dec565b6103ed565b6040516101959190610ced565b60405180910390f35b6101b860048036038101906101b39190610e2a565b610732565b6040516101c59190610ced565b60405180910390f35b6101d6610b2f565b6040516101e39190610cbc565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b5f5481565b60015481565b6003602052805f5260405f205f915090505481565b5f806002545f54846102489190610e95565b6102529190610f03565b9150600254600154846102659190610e95565b61026f9190610f03565b905061027b3384610b53565b61029e825f5461028b9190610f33565b826001546102999190610f33565b610bc2565b5f821115610343577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610301929190610f75565b6020604051808303815f875af115801561031d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103419190610fd1565b505b5f8111156103e8577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103a6929190610f75565b6020604051808303815f875af11580156103c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e69190610fd1565b505b915091565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161044b93929190610ffc565b6020604051808303815f875af1158015610467573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061048b9190610fd1565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104e993929190610ffc565b6020604051808303815f875af1158015610505573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105299190610fd1565b505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105849190611031565b602060405180830381865afa15801561059f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c3919061105e565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161061f9190611031565b602060405180830381865afa15801561063a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065e919061105e565b90505f80548361066e9190610f33565b90505f6001548361067f9190610f33565b90505f6002540361069d5780826106969190611089565b94506106d2565b6001545f546106ac9190611089565b60025482846106bb9190611089565b6106c59190611089565b6106cf9190610f03565b94505b5f8511610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611116565b60405180910390fd5b61071e3386610bd3565b6107288282610bc2565b5050505092915050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806107d857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e9061117e565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f80826108b7577f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006108fa565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b915091505f808461090f576001545f54610915565b5f546001545b915091505f827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109749190611031565b602060405180830381865afa15801561098f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b3919061105e565b6109bd9190610f33565b90508473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b81526004016109fc93929190610ffc565b6020604051808303815f875af1158015610a18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3c9190610fd1565b506103e86103e582610a4e9190610e95565b610a589190610f03565b96505f8087610a7e578885610a6d9190610f33565b8a85610a799190611089565b610a97565b8985610a8a9190611089565b8985610a969190610f33565b5b91509150610aa58282610bc2565b8573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338b6040518363ffffffff1660e01b8152600401610ae0929190610f75565b6020604051808303815f875af1158015610afc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b209190610fd1565b50505050505050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b9f9190610f33565b925050819055508060025f828254610bb79190610f33565b925050819055505050565b815f81905550806001819055505050565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c1f9190611089565b925050819055508060025f828254610c379190611089565b925050819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610c84610c7f610c7a84610c42565b610c61565b610c42565b9050919050565b5f610c9582610c6a565b9050919050565b5f610ca682610c8b565b9050919050565b610cb681610c9c565b82525050565b5f602082019050610ccf5f830184610cad565b92915050565b5f819050919050565b610ce781610cd5565b82525050565b5f602082019050610d005f830184610cde565b92915050565b5f80fd5b5f610d1482610c42565b9050919050565b610d2481610d0a565b8114610d2e575f80fd5b50565b5f81359050610d3f81610d1b565b92915050565b5f60208284031215610d5a57610d59610d06565b5b5f610d6784828501610d31565b91505092915050565b610d7981610cd5565b8114610d83575f80fd5b50565b5f81359050610d9481610d70565b92915050565b5f60208284031215610daf57610dae610d06565b5b5f610dbc84828501610d86565b91505092915050565b5f604082019050610dd85f830185610cde565b610de56020830184610cde565b9392505050565b5f8060408385031215610e0257610e01610d06565b5b5f610e0f85828601610d86565b9250506020610e2085828601610d86565b9150509250929050565b5f8060408385031215610e4057610e3f610d06565b5b5f610e4d85828601610d31565b9250506020610e5e85828601610d86565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e9f82610cd5565b9150610eaa83610cd5565b9250828202610eb881610cd5565b91508282048414831517610ecf57610ece610e68565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f0d82610cd5565b9150610f1883610cd5565b925082610f2857610f27610ed6565b5b828204905092915050565b5f610f3d82610cd5565b9150610f4883610cd5565b9250828203905081811115610f6057610f5f610e68565b5b92915050565b610f6f81610d0a565b82525050565b5f604082019050610f885f830185610f66565b610f956020830184610cde565b9392505050565b5f8115159050919050565b610fb081610f9c565b8114610fba575f80fd5b50565b5f81519050610fcb81610fa7565b92915050565b5f60208284031215610fe657610fe5610d06565b5b5f610ff384828501610fbd565b91505092915050565b5f60608201905061100f5f830186610f66565b61101c6020830185610f66565b6110296040830184610cde565b949350505050565b5f6020820190506110445f830184610f66565b92915050565b5f8151905061105881610d70565b92915050565b5f6020828403121561107357611072610d06565b5b5f6110808482850161104a565b91505092915050565b5f61109382610cd5565b915061109e83610cd5565b92508282019050808211156110b6576110b5610e68565b5b92915050565b5f82825260208201905092915050565b7f556e61626c6520746f206d696e740000000000000000000000000000000000005f82015250565b5f611100600e836110bc565b915061110b826110cc565b602082019050919050565b5f6020820190508181035f83015261112d816110f4565b9050919050565b7f57726f6e6720546f6b656e0000000000000000000000000000000000000000005f82015250565b5f611168600b836110bc565b915061117382611134565b602082019050919050565b5f6020820190508181035f8301526111958161115c565b905091905056fea264697066735822122088c4b9f6e2e025a0a7611d76812420c5678fb1cd361770620e3d60df2824197764736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1391 CODESIZE SUB DUP1 PUSH2 0x1391 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x13C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD DUP3 PUSH2 0xA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD DUP2 PUSH2 0xC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0xD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0xA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x11D2 PUSH2 0x1BF PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x34D ADD MSTORE DUP2 DUP2 PUSH2 0x48E ADD MSTORE DUP2 DUP2 PUSH2 0x5C8 ADD MSTORE DUP2 DUP2 PUSH2 0x78A ADD MSTORE DUP2 DUP2 PUSH2 0x872 ADD MSTORE DUP2 DUP2 PUSH2 0x8DA ADD MSTORE PUSH2 0xB31 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1EE ADD MSTORE DUP2 DUP2 PUSH2 0x2A8 ADD MSTORE DUP2 DUP2 PUSH2 0x3F0 ADD MSTORE DUP2 DUP2 PUSH2 0x52D ADD MSTORE DUP2 DUP2 PUSH2 0x735 ADD MSTORE DUP2 DUP2 PUSH2 0x81A ADD MSTORE DUP2 DUP2 PUSH2 0x893 ADD MSTORE DUP2 DUP2 PUSH2 0x8B9 ADD MSTORE PUSH2 0x91D ADD MSTORE PUSH2 0x11D2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1CE JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xEF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP3 SWAP2 SWAP1 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 SLOAD PUSH0 SLOAD DUP5 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP PUSH2 0x27B CALLER DUP5 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x29E DUP3 PUSH0 SLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST DUP3 PUSH1 0x1 SLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x343 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP3 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x3E8 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A6 SWAP3 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x467 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD DUP4 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP4 PUSH2 0x67F SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SUB PUSH2 0x69D JUMPI DUP1 DUP3 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP5 POP PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP5 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71E CALLER DUP7 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x728 DUP3 DUP3 PUSH2 0xBC2 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7D8 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 DUP3 PUSH2 0x8B7 JUMPI PUSH32 0x0 PUSH32 0x0 PUSH2 0x8FA JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP1 DUP5 PUSH2 0x90F JUMPI PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x915 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP12 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP PUSH2 0x3E8 PUSH2 0x3E5 DUP3 PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP7 POP PUSH0 DUP1 DUP8 PUSH2 0xA7E JUMPI DUP9 DUP6 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST DUP11 DUP6 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST DUP10 DUP6 PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST DUP10 DUP6 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xAA5 DUP3 DUP3 PUSH2 0xBC2 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP12 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE0 SWAP3 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAFC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC84 PUSH2 0xC7F PUSH2 0xC7A DUP5 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC95 DUP3 PUSH2 0xC6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCA6 DUP3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB6 DUP2 PUSH2 0xC9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCF PUSH0 DUP4 ADD DUP5 PUSH2 0xCAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE7 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD00 PUSH0 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD14 DUP3 PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP2 EQ PUSH2 0xD2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD3F DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5A JUMPI PUSH2 0xD59 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD67 DUP5 DUP3 DUP6 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD79 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP2 EQ PUSH2 0xD83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD94 DUP2 PUSH2 0xD70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAF JUMPI PUSH2 0xDAE PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBC DUP5 DUP3 DUP6 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0F DUP6 DUP3 DUP7 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE20 DUP6 DUP3 DUP7 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE40 JUMPI PUSH2 0xE3F PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4D DUP6 DUP3 DUP7 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE5E DUP6 DUP3 DUP7 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE9F DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAA DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEB8 DUP2 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xE68 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF0D DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF18 DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF28 JUMPI PUSH2 0xF27 PUSH2 0xED6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF3D DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF48 DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0xE68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF88 PUSH0 DUP4 ADD DUP6 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF95 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB0 DUP2 PUSH2 0xF9C JUMP JUMPDEST DUP2 EQ PUSH2 0xFBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFCB DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF3 DUP5 DUP3 DUP6 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x100F PUSH0 DUP4 ADD DUP7 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x101C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1044 PUSH0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1058 DUP2 PUSH2 0xD70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1072 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1080 DUP5 DUP3 DUP6 ADD PUSH2 0x104A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1093 DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x109E DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B5 PUSH2 0xE68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E61626C6520746F206D696E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1100 PUSH1 0xE DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x110B DUP3 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x112D DUP2 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57726F6E6720546F6B656E000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1168 PUSH1 0xB DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1173 DUP3 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1195 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC4 0xB9 0xF6 0xE2 0xE0 0x25 LOG0 0xA7 PUSH2 0x1D76 DUP2 0x24 KECCAK256 0xC5 PUSH8 0x8FB1CD361770620E RETURNDATASIZE PUSH1 0xDF 0x28 0x24 NOT PUSH24 0x64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "114:3829:5:-:0;;;3819:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3890:7;3874:24;;;;;;;;;;3924:7;3908:24;;;;;;;;;;3819:120;;114:3829;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;114:3829:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_840": {
									"entryPoint": 2899,
									"id": 840,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_822": {
									"entryPoint": 3027,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_856": {
									"entryPoint": 3010,
									"id": 856,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_1097": {
									"entryPoint": 1005,
									"id": 1097,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_804": {
									"entryPoint": 545,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_1166": {
									"entryPoint": 566,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserve0_796": {
									"entryPoint": 534,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_798": {
									"entryPoint": 539,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_986": {
									"entryPoint": 1842,
									"id": 986,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token0_791": {
									"entryPoint": 492,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_794": {
									"entryPoint": 2863,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_800": {
									"entryPoint": 528,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78": {
									"entryPoint": 4404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10265:6",
										"nodeType": "YulBlock",
										"src": "0:10265:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "171:28:6",
													"nodeType": "YulBlock",
													"src": "171:28:6",
													"statements": [
														{
															"nativeSrc": "181:12:6",
															"nodeType": "YulAssignment",
															"src": "181:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:6",
																"nodeType": "YulIdentifier",
																"src": "188:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:6",
														"nodeType": "YulTypedName",
														"src": "157:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:6",
														"nodeType": "YulTypedName",
														"src": "167:3:6",
														"type": ""
													}
												],
												"src": "139:60:6"
											},
											{
												"body": {
													"nativeSrc": "265:82:6",
													"nodeType": "YulBlock",
													"src": "265:82:6",
													"statements": [
														{
															"nativeSrc": "275:66:6",
															"nodeType": "YulAssignment",
															"src": "275:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:6"
																				},
																				"nativeSrc": "315:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:6"
																		},
																		"nativeSrc": "306:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:6"
																},
																"nativeSrc": "288:53:6",
																"nodeType": "YulFunctionCall",
																"src": "288:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:6",
														"nodeType": "YulTypedName",
														"src": "245:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:6",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													}
												],
												"src": "205:142:6"
											},
											{
												"body": {
													"nativeSrc": "413:66:6",
													"nodeType": "YulBlock",
													"src": "413:66:6",
													"statements": [
														{
															"nativeSrc": "423:50:6",
															"nodeType": "YulAssignment",
															"src": "423:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:6"
																},
																"nativeSrc": "436:37:6",
																"nodeType": "YulFunctionCall",
																"src": "436:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:6",
														"nodeType": "YulTypedName",
														"src": "393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:6",
														"nodeType": "YulTypedName",
														"src": "403:9:6",
														"type": ""
													}
												],
												"src": "353:126:6"
											},
											{
												"body": {
													"nativeSrc": "559:66:6",
													"nodeType": "YulBlock",
													"src": "559:66:6",
													"statements": [
														{
															"nativeSrc": "569:50:6",
															"nodeType": "YulAssignment",
															"src": "569:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:6"
																},
																"nativeSrc": "582:37:6",
																"nodeType": "YulFunctionCall",
																"src": "582:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "485:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:6",
														"nodeType": "YulTypedName",
														"src": "539:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:6",
														"nodeType": "YulTypedName",
														"src": "549:9:6",
														"type": ""
													}
												],
												"src": "485:140:6"
											},
											{
												"body": {
													"nativeSrc": "710:80:6",
													"nodeType": "YulBlock",
													"src": "710:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "732:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:6"
																		},
																		"nativeSrc": "732:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:6"
																},
																"nativeSrc": "720:64:6",
																"nodeType": "YulFunctionCall",
																"src": "720:64:6"
															},
															"nativeSrc": "720:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "631:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:6",
														"nodeType": "YulTypedName",
														"src": "698:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:6",
														"nodeType": "YulTypedName",
														"src": "705:3:6",
														"type": ""
													}
												],
												"src": "631:159:6"
											},
											{
												"body": {
													"nativeSrc": "908:138:6",
													"nodeType": "YulBlock",
													"src": "908:138:6",
													"statements": [
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:6",
																		"nodeType": "YulLiteral",
																		"src": "941:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:6"
																		},
																		"nativeSrc": "1021:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "954:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:6"
																},
																"nativeSrc": "954:85:6",
																"nodeType": "YulFunctionCall",
																"src": "954:85:6"
															},
															"nativeSrc": "954:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:6",
														"nodeType": "YulTypedName",
														"src": "880:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:6",
														"nodeType": "YulTypedName",
														"src": "892:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:6",
														"nodeType": "YulTypedName",
														"src": "903:4:6",
														"type": ""
													}
												],
												"src": "796:250:6"
											},
											{
												"body": {
													"nativeSrc": "1097:32:6",
													"nodeType": "YulBlock",
													"src": "1097:32:6",
													"statements": [
														{
															"nativeSrc": "1107:16:6",
															"nodeType": "YulAssignment",
															"src": "1107:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1118:5:6",
																"nodeType": "YulIdentifier",
																"src": "1118:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1107:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1107:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1052:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1079:5:6",
														"nodeType": "YulTypedName",
														"src": "1079:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1089:7:6",
														"nodeType": "YulTypedName",
														"src": "1089:7:6",
														"type": ""
													}
												],
												"src": "1052:77:6"
											},
											{
												"body": {
													"nativeSrc": "1200:53:6",
													"nodeType": "YulBlock",
													"src": "1200:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1217:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1217:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1240:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1240:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1222:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1222:17:6"
																		},
																		"nativeSrc": "1222:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1210:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:6"
																},
																"nativeSrc": "1210:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1210:37:6"
															},
															"nativeSrc": "1210:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1210:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1135:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1188:5:6",
														"nodeType": "YulTypedName",
														"src": "1188:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1195:3:6",
														"nodeType": "YulTypedName",
														"src": "1195:3:6",
														"type": ""
													}
												],
												"src": "1135:118:6"
											},
											{
												"body": {
													"nativeSrc": "1357:124:6",
													"nodeType": "YulBlock",
													"src": "1357:124:6",
													"statements": [
														{
															"nativeSrc": "1367:26:6",
															"nodeType": "YulAssignment",
															"src": "1367:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1379:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1379:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1390:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1375:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:6"
																},
																"nativeSrc": "1375:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1375:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1367:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1367:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1447:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1460:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1471:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1456:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:6"
																		},
																		"nativeSrc": "1456:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1403:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1403:43:6"
																},
																"nativeSrc": "1403:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1403:71:6"
															},
															"nativeSrc": "1403:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1403:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1259:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1329:9:6",
														"nodeType": "YulTypedName",
														"src": "1329:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1341:6:6",
														"nodeType": "YulTypedName",
														"src": "1341:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1352:4:6",
														"nodeType": "YulTypedName",
														"src": "1352:4:6",
														"type": ""
													}
												],
												"src": "1259:222:6"
											},
											{
												"body": {
													"nativeSrc": "1527:35:6",
													"nodeType": "YulBlock",
													"src": "1527:35:6",
													"statements": [
														{
															"nativeSrc": "1537:19:6",
															"nodeType": "YulAssignment",
															"src": "1537:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1553:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1547:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:6"
																},
																"nativeSrc": "1547:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1547:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1487:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1520:6:6",
														"nodeType": "YulTypedName",
														"src": "1520:6:6",
														"type": ""
													}
												],
												"src": "1487:75:6"
											},
											{
												"body": {
													"nativeSrc": "1657:28:6",
													"nodeType": "YulBlock",
													"src": "1657:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1674:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1677:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nativeSrc": "1667:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1667:12:6"
															},
															"nativeSrc": "1667:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1568:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:6"
											},
											{
												"body": {
													"nativeSrc": "1780:28:6",
													"nodeType": "YulBlock",
													"src": "1780:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1797:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1800:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1790:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:6"
																},
																"nativeSrc": "1790:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1790:12:6"
															},
															"nativeSrc": "1790:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1691:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:6"
											},
											{
												"body": {
													"nativeSrc": "1859:51:6",
													"nodeType": "YulBlock",
													"src": "1859:51:6",
													"statements": [
														{
															"nativeSrc": "1869:35:6",
															"nodeType": "YulAssignment",
															"src": "1869:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1898:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1898:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1880:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1880:17:6"
																},
																"nativeSrc": "1880:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1880:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1869:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1814:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1841:5:6",
														"nodeType": "YulTypedName",
														"src": "1841:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1851:7:6",
														"nodeType": "YulTypedName",
														"src": "1851:7:6",
														"type": ""
													}
												],
												"src": "1814:96:6"
											},
											{
												"body": {
													"nativeSrc": "1959:79:6",
													"nodeType": "YulBlock",
													"src": "1959:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:6",
																"nodeType": "YulBlock",
																"src": "2016:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:6"
																			},
																			"nativeSrc": "2018:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:6"
																		},
																		"nativeSrc": "2018:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1982:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1982:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2007:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2007:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1989:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1989:17:6"
																				},
																				"nativeSrc": "1989:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1989:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1979:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1979:2:6"
																		},
																		"nativeSrc": "1979:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1979:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1972:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:6"
																},
																"nativeSrc": "1972:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1972:43:6"
															},
															"nativeSrc": "1969:63:6",
															"nodeType": "YulIf",
															"src": "1969:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1916:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1952:5:6",
														"nodeType": "YulTypedName",
														"src": "1952:5:6",
														"type": ""
													}
												],
												"src": "1916:122:6"
											},
											{
												"body": {
													"nativeSrc": "2096:87:6",
													"nodeType": "YulBlock",
													"src": "2096:87:6",
													"statements": [
														{
															"nativeSrc": "2106:29:6",
															"nodeType": "YulAssignment",
															"src": "2106:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2128:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2128:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2115:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2115:12:6"
																},
																"nativeSrc": "2115:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2115:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2106:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2106:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2171:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2144:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2144:26:6"
																},
																"nativeSrc": "2144:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2144:33:6"
															},
															"nativeSrc": "2144:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2144:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2044:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2074:6:6",
														"nodeType": "YulTypedName",
														"src": "2074:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2082:3:6",
														"nodeType": "YulTypedName",
														"src": "2082:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2090:5:6",
														"nodeType": "YulTypedName",
														"src": "2090:5:6",
														"type": ""
													}
												],
												"src": "2044:139:6"
											},
											{
												"body": {
													"nativeSrc": "2255:263:6",
													"nodeType": "YulBlock",
													"src": "2255:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2301:83:6",
																"nodeType": "YulBlock",
																"src": "2301:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2303:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2303:77:6"
																			},
																			"nativeSrc": "2303:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2303:79:6"
																		},
																		"nativeSrc": "2303:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2276:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2276:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2285:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2285:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:6"
																		},
																		"nativeSrc": "2272:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2297:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2297:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2268:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2268:3:6"
																},
																"nativeSrc": "2268:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2268:32:6"
															},
															"nativeSrc": "2265:119:6",
															"nodeType": "YulIf",
															"src": "2265:119:6"
														},
														{
															"nativeSrc": "2394:117:6",
															"nodeType": "YulBlock",
															"src": "2394:117:6",
															"statements": [
																{
																	"nativeSrc": "2409:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2409:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2423:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2423:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2413:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2413:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2438:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2438:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2473:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2473:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2484:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2484:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2469:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2469:3:6"
																				},
																				"nativeSrc": "2469:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2469:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2493:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2493:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2448:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2448:20:6"
																		},
																		"nativeSrc": "2448:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2438:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2438:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2189:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2225:9:6",
														"nodeType": "YulTypedName",
														"src": "2225:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2236:7:6",
														"nodeType": "YulTypedName",
														"src": "2236:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2248:6:6",
														"nodeType": "YulTypedName",
														"src": "2248:6:6",
														"type": ""
													}
												],
												"src": "2189:329:6"
											},
											{
												"body": {
													"nativeSrc": "2567:79:6",
													"nodeType": "YulBlock",
													"src": "2567:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2624:16:6",
																"nodeType": "YulBlock",
																"src": "2624:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2633:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2636:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2626:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:6"
																			},
																			"nativeSrc": "2626:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:6"
																		},
																		"nativeSrc": "2626:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2590:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2615:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2597:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:6"
																				},
																				"nativeSrc": "2597:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2587:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:6"
																		},
																		"nativeSrc": "2587:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2580:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:6"
																},
																"nativeSrc": "2580:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2580:43:6"
															},
															"nativeSrc": "2577:63:6",
															"nodeType": "YulIf",
															"src": "2577:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2524:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2560:5:6",
														"nodeType": "YulTypedName",
														"src": "2560:5:6",
														"type": ""
													}
												],
												"src": "2524:122:6"
											},
											{
												"body": {
													"nativeSrc": "2704:87:6",
													"nodeType": "YulBlock",
													"src": "2704:87:6",
													"statements": [
														{
															"nativeSrc": "2714:29:6",
															"nodeType": "YulAssignment",
															"src": "2714:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2736:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2723:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:6"
																},
																"nativeSrc": "2723:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2723:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2714:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2779:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2752:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:6"
																},
																"nativeSrc": "2752:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2752:33:6"
															},
															"nativeSrc": "2752:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2652:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2682:6:6",
														"nodeType": "YulTypedName",
														"src": "2682:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2690:3:6",
														"nodeType": "YulTypedName",
														"src": "2690:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2698:5:6",
														"nodeType": "YulTypedName",
														"src": "2698:5:6",
														"type": ""
													}
												],
												"src": "2652:139:6"
											},
											{
												"body": {
													"nativeSrc": "2863:263:6",
													"nodeType": "YulBlock",
													"src": "2863:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2909:83:6",
																"nodeType": "YulBlock",
																"src": "2909:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2911:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2911:77:6"
																			},
																			"nativeSrc": "2911:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2911:79:6"
																		},
																		"nativeSrc": "2911:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2884:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2893:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2880:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:6"
																		},
																		"nativeSrc": "2880:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2905:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2876:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:6"
																},
																"nativeSrc": "2876:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2876:32:6"
															},
															"nativeSrc": "2873:119:6",
															"nodeType": "YulIf",
															"src": "2873:119:6"
														},
														{
															"nativeSrc": "3002:117:6",
															"nodeType": "YulBlock",
															"src": "3002:117:6",
															"statements": [
																{
																	"nativeSrc": "3017:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3017:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3031:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3021:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3021:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3046:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3046:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3081:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3092:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3077:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:6"
																				},
																				"nativeSrc": "3077:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3101:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3056:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:6"
																		},
																		"nativeSrc": "3056:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3046:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2797:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2833:9:6",
														"nodeType": "YulTypedName",
														"src": "2833:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2844:7:6",
														"nodeType": "YulTypedName",
														"src": "2844:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2856:6:6",
														"nodeType": "YulTypedName",
														"src": "2856:6:6",
														"type": ""
													}
												],
												"src": "2797:329:6"
											},
											{
												"body": {
													"nativeSrc": "3258:206:6",
													"nodeType": "YulBlock",
													"src": "3258:206:6",
													"statements": [
														{
															"nativeSrc": "3268:26:6",
															"nodeType": "YulAssignment",
															"src": "3268:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3280:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3280:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3291:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3291:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3276:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:6"
																},
																"nativeSrc": "3276:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3276:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3268:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3268:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3348:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3361:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3372:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3372:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:6"
																		},
																		"nativeSrc": "3357:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3357:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3304:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3304:43:6"
																},
																"nativeSrc": "3304:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3304:71:6"
															},
															"nativeSrc": "3304:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3304:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3429:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3442:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3453:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3453:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3438:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3438:3:6"
																		},
																		"nativeSrc": "3438:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3385:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3385:43:6"
																},
																"nativeSrc": "3385:72:6",
																"nodeType": "YulFunctionCall",
																"src": "3385:72:6"
															},
															"nativeSrc": "3385:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "3385:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3132:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3222:9:6",
														"nodeType": "YulTypedName",
														"src": "3222:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3234:6:6",
														"nodeType": "YulTypedName",
														"src": "3234:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3242:6:6",
														"nodeType": "YulTypedName",
														"src": "3242:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3253:4:6",
														"nodeType": "YulTypedName",
														"src": "3253:4:6",
														"type": ""
													}
												],
												"src": "3132:332:6"
											},
											{
												"body": {
													"nativeSrc": "3553:391:6",
													"nodeType": "YulBlock",
													"src": "3553:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3599:83:6",
																"nodeType": "YulBlock",
																"src": "3599:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3601:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3601:77:6"
																			},
																			"nativeSrc": "3601:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3601:79:6"
																		},
																		"nativeSrc": "3601:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3601:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3574:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3574:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3583:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3570:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:6"
																		},
																		"nativeSrc": "3570:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3595:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3595:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3566:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3566:3:6"
																},
																"nativeSrc": "3566:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3566:32:6"
															},
															"nativeSrc": "3563:119:6",
															"nodeType": "YulIf",
															"src": "3563:119:6"
														},
														{
															"nativeSrc": "3692:117:6",
															"nodeType": "YulBlock",
															"src": "3692:117:6",
															"statements": [
																{
																	"nativeSrc": "3707:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3707:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3721:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3721:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3711:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3711:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3736:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3736:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3771:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3771:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3782:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3782:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3767:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3767:3:6"
																				},
																				"nativeSrc": "3767:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3767:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3791:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3791:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3746:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3746:20:6"
																		},
																		"nativeSrc": "3746:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3746:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3736:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3736:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3819:118:6",
															"nodeType": "YulBlock",
															"src": "3819:118:6",
															"statements": [
																{
																	"nativeSrc": "3834:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3834:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3848:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3838:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3838:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3864:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3864:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3899:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3899:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3910:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3910:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3895:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3895:3:6"
																				},
																				"nativeSrc": "3895:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3895:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3874:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3874:20:6"
																		},
																		"nativeSrc": "3874:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3864:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3864:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3470:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3515:9:6",
														"nodeType": "YulTypedName",
														"src": "3515:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3526:7:6",
														"nodeType": "YulTypedName",
														"src": "3526:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3538:6:6",
														"nodeType": "YulTypedName",
														"src": "3538:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3546:6:6",
														"nodeType": "YulTypedName",
														"src": "3546:6:6",
														"type": ""
													}
												],
												"src": "3470:474:6"
											},
											{
												"body": {
													"nativeSrc": "4033:391:6",
													"nodeType": "YulBlock",
													"src": "4033:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4079:83:6",
																"nodeType": "YulBlock",
																"src": "4079:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4081:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4081:77:6"
																			},
																			"nativeSrc": "4081:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4081:79:6"
																		},
																		"nativeSrc": "4081:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4081:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4054:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4054:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4063:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4050:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:6"
																		},
																		"nativeSrc": "4050:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4050:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4075:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4075:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4046:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4046:3:6"
																},
																"nativeSrc": "4046:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4046:32:6"
															},
															"nativeSrc": "4043:119:6",
															"nodeType": "YulIf",
															"src": "4043:119:6"
														},
														{
															"nativeSrc": "4172:117:6",
															"nodeType": "YulBlock",
															"src": "4172:117:6",
															"statements": [
																{
																	"nativeSrc": "4187:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4187:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4201:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4201:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4191:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4191:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4216:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4216:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4251:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4251:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4262:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4262:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4247:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4247:3:6"
																				},
																				"nativeSrc": "4247:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4247:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4271:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4271:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4226:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4226:20:6"
																		},
																		"nativeSrc": "4226:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4226:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4216:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4216:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4299:118:6",
															"nodeType": "YulBlock",
															"src": "4299:118:6",
															"statements": [
																{
																	"nativeSrc": "4314:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4314:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4328:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4328:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4318:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4318:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4344:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4344:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4379:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4379:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4390:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4390:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4375:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4375:3:6"
																				},
																				"nativeSrc": "4375:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4375:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4399:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4399:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4354:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4354:20:6"
																		},
																		"nativeSrc": "4354:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4354:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4344:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4344:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3950:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3995:9:6",
														"nodeType": "YulTypedName",
														"src": "3995:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4006:7:6",
														"nodeType": "YulTypedName",
														"src": "4006:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4018:6:6",
														"nodeType": "YulTypedName",
														"src": "4018:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4026:6:6",
														"nodeType": "YulTypedName",
														"src": "4026:6:6",
														"type": ""
													}
												],
												"src": "3950:474:6"
											},
											{
												"body": {
													"nativeSrc": "4458:152:6",
													"nodeType": "YulBlock",
													"src": "4458:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4475:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4475:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4478:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4478:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4468:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4468:6:6"
																},
																"nativeSrc": "4468:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4468:88:6"
															},
															"nativeSrc": "4468:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4468:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4572:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4572:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4575:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4575:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4565:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4565:6:6"
																},
																"nativeSrc": "4565:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4565:15:6"
															},
															"nativeSrc": "4565:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4565:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4596:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4596:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4599:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4599:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4589:6:6"
																},
																"nativeSrc": "4589:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4589:15:6"
															},
															"nativeSrc": "4589:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4589:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4430:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4430:180:6"
											},
											{
												"body": {
													"nativeSrc": "4664:362:6",
													"nodeType": "YulBlock",
													"src": "4664:362:6",
													"statements": [
														{
															"nativeSrc": "4674:25:6",
															"nodeType": "YulAssignment",
															"src": "4674:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4697:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4697:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4679:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4679:17:6"
																},
																"nativeSrc": "4679:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4679:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4674:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4674:1:6"
																}
															]
														},
														{
															"nativeSrc": "4708:25:6",
															"nodeType": "YulAssignment",
															"src": "4708:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4731:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4731:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4713:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4713:17:6"
																},
																"nativeSrc": "4713:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4713:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4708:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4708:1:6"
																}
															]
														},
														{
															"nativeSrc": "4742:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4742:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4765:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4765:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4768:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4768:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4761:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4761:3:6"
																},
																"nativeSrc": "4761:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4761:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4746:11:6",
																	"nodeType": "YulTypedName",
																	"src": "4746:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4779:41:6",
															"nodeType": "YulAssignment",
															"src": "4779:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4808:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "4808:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4790:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4790:17:6"
																},
																"nativeSrc": "4790:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4790:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4779:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4779:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4997:22:6",
																"nodeType": "YulBlock",
																"src": "4997:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4999:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4999:16:6"
																			},
																			"nativeSrc": "4999:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4999:18:6"
																		},
																		"nativeSrc": "4999:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4999:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4930:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4930:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4923:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4923:6:6"
																				},
																				"nativeSrc": "4923:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4923:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4953:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4953:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4960:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4960:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4969:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4969:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4956:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4956:3:6"
																						},
																						"nativeSrc": "4956:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4956:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4950:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4950:2:6"
																				},
																				"nativeSrc": "4950:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4950:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4903:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4903:2:6"
																		},
																		"nativeSrc": "4903:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4903:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4883:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4883:6:6"
																},
																"nativeSrc": "4883:113:6",
																"nodeType": "YulFunctionCall",
																"src": "4883:113:6"
															},
															"nativeSrc": "4880:139:6",
															"nodeType": "YulIf",
															"src": "4880:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4616:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4647:1:6",
														"nodeType": "YulTypedName",
														"src": "4647:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4650:1:6",
														"nodeType": "YulTypedName",
														"src": "4650:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4656:7:6",
														"nodeType": "YulTypedName",
														"src": "4656:7:6",
														"type": ""
													}
												],
												"src": "4616:410:6"
											},
											{
												"body": {
													"nativeSrc": "5060:152:6",
													"nodeType": "YulBlock",
													"src": "5060:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5077:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5080:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5080:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5070:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:6"
																},
																"nativeSrc": "5070:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5070:88:6"
															},
															"nativeSrc": "5070:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5070:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5174:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5174:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5177:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5177:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5167:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:6"
																},
																"nativeSrc": "5167:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5167:15:6"
															},
															"nativeSrc": "5167:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5167:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5198:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5198:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5201:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5201:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5191:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5191:6:6"
																},
																"nativeSrc": "5191:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5191:15:6"
															},
															"nativeSrc": "5191:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5191:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5032:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5032:180:6"
											},
											{
												"body": {
													"nativeSrc": "5260:143:6",
													"nodeType": "YulBlock",
													"src": "5260:143:6",
													"statements": [
														{
															"nativeSrc": "5270:25:6",
															"nodeType": "YulAssignment",
															"src": "5270:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5293:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5293:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5275:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5275:17:6"
																},
																"nativeSrc": "5275:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5275:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5270:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5270:1:6"
																}
															]
														},
														{
															"nativeSrc": "5304:25:6",
															"nodeType": "YulAssignment",
															"src": "5304:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5327:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5327:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5309:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5309:17:6"
																},
																"nativeSrc": "5309:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5309:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5304:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5304:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5351:22:6",
																"nodeType": "YulBlock",
																"src": "5351:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5353:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5353:16:6"
																			},
																			"nativeSrc": "5353:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5353:18:6"
																		},
																		"nativeSrc": "5353:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5353:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5348:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5348:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5341:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5341:6:6"
																},
																"nativeSrc": "5341:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5341:9:6"
															},
															"nativeSrc": "5338:35:6",
															"nodeType": "YulIf",
															"src": "5338:35:6"
														},
														{
															"nativeSrc": "5383:14:6",
															"nodeType": "YulAssignment",
															"src": "5383:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5392:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5392:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5395:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5395:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5388:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5388:3:6"
																},
																"nativeSrc": "5388:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5388:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5383:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5383:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5218:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5249:1:6",
														"nodeType": "YulTypedName",
														"src": "5249:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5252:1:6",
														"nodeType": "YulTypedName",
														"src": "5252:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5258:1:6",
														"nodeType": "YulTypedName",
														"src": "5258:1:6",
														"type": ""
													}
												],
												"src": "5218:185:6"
											},
											{
												"body": {
													"nativeSrc": "5454:149:6",
													"nodeType": "YulBlock",
													"src": "5454:149:6",
													"statements": [
														{
															"nativeSrc": "5464:25:6",
															"nodeType": "YulAssignment",
															"src": "5464:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5487:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5487:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5469:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5469:17:6"
																},
																"nativeSrc": "5469:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5469:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5464:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5464:1:6"
																}
															]
														},
														{
															"nativeSrc": "5498:25:6",
															"nodeType": "YulAssignment",
															"src": "5498:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5521:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5521:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5503:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5503:17:6"
																},
																"nativeSrc": "5503:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5503:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5498:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5498:1:6"
																}
															]
														},
														{
															"nativeSrc": "5532:17:6",
															"nodeType": "YulAssignment",
															"src": "5532:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5544:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5544:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5547:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5547:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5540:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5540:3:6"
																},
																"nativeSrc": "5540:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5540:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5532:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5532:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5574:22:6",
																"nodeType": "YulBlock",
																"src": "5574:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5576:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5576:16:6"
																			},
																			"nativeSrc": "5576:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5576:18:6"
																		},
																		"nativeSrc": "5576:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5576:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5565:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5565:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5571:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5571:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5562:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5562:2:6"
																},
																"nativeSrc": "5562:11:6",
																"nodeType": "YulFunctionCall",
																"src": "5562:11:6"
															},
															"nativeSrc": "5559:37:6",
															"nodeType": "YulIf",
															"src": "5559:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5409:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5440:1:6",
														"nodeType": "YulTypedName",
														"src": "5440:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5443:1:6",
														"nodeType": "YulTypedName",
														"src": "5443:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5449:4:6",
														"nodeType": "YulTypedName",
														"src": "5449:4:6",
														"type": ""
													}
												],
												"src": "5409:194:6"
											},
											{
												"body": {
													"nativeSrc": "5674:53:6",
													"nodeType": "YulBlock",
													"src": "5674:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5691:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5691:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5714:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5714:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5696:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5696:17:6"
																		},
																		"nativeSrc": "5696:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5696:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5684:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5684:6:6"
																},
																"nativeSrc": "5684:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5684:37:6"
															},
															"nativeSrc": "5684:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5684:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5609:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5662:5:6",
														"nodeType": "YulTypedName",
														"src": "5662:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5669:3:6",
														"nodeType": "YulTypedName",
														"src": "5669:3:6",
														"type": ""
													}
												],
												"src": "5609:118:6"
											},
											{
												"body": {
													"nativeSrc": "5859:206:6",
													"nodeType": "YulBlock",
													"src": "5859:206:6",
													"statements": [
														{
															"nativeSrc": "5869:26:6",
															"nodeType": "YulAssignment",
															"src": "5869:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5881:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5881:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5892:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5892:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5877:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5877:3:6"
																},
																"nativeSrc": "5877:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5877:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5869:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5869:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5962:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5973:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5973:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5958:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:6"
																		},
																		"nativeSrc": "5958:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5905:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5905:43:6"
																},
																"nativeSrc": "5905:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5905:71:6"
															},
															"nativeSrc": "5905:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5905:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6030:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6030:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6043:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6054:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6054:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6039:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:6"
																		},
																		"nativeSrc": "6039:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6039:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5986:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5986:43:6"
																},
																"nativeSrc": "5986:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5986:72:6"
															},
															"nativeSrc": "5986:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5986:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5733:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5823:9:6",
														"nodeType": "YulTypedName",
														"src": "5823:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5835:6:6",
														"nodeType": "YulTypedName",
														"src": "5835:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5843:6:6",
														"nodeType": "YulTypedName",
														"src": "5843:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5854:4:6",
														"nodeType": "YulTypedName",
														"src": "5854:4:6",
														"type": ""
													}
												],
												"src": "5733:332:6"
											},
											{
												"body": {
													"nativeSrc": "6113:48:6",
													"nodeType": "YulBlock",
													"src": "6113:48:6",
													"statements": [
														{
															"nativeSrc": "6123:32:6",
															"nodeType": "YulAssignment",
															"src": "6123:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6148:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6148:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6141:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:6"
																		},
																		"nativeSrc": "6141:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6141:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6134:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:6"
																},
																"nativeSrc": "6134:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6134:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6123:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6123:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6071:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6095:5:6",
														"nodeType": "YulTypedName",
														"src": "6095:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6105:7:6",
														"nodeType": "YulTypedName",
														"src": "6105:7:6",
														"type": ""
													}
												],
												"src": "6071:90:6"
											},
											{
												"body": {
													"nativeSrc": "6207:76:6",
													"nodeType": "YulBlock",
													"src": "6207:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6261:16:6",
																"nodeType": "YulBlock",
																"src": "6261:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6270:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6270:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6273:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6273:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6263:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6263:6:6"
																			},
																			"nativeSrc": "6263:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6263:12:6"
																		},
																		"nativeSrc": "6263:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6263:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6230:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6230:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6252:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6252:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6237:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "6237:14:6"
																				},
																				"nativeSrc": "6237:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6237:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6227:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6227:2:6"
																		},
																		"nativeSrc": "6227:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6227:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:6"
																},
																"nativeSrc": "6220:40:6",
																"nodeType": "YulFunctionCall",
																"src": "6220:40:6"
															},
															"nativeSrc": "6217:60:6",
															"nodeType": "YulIf",
															"src": "6217:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6167:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6200:5:6",
														"nodeType": "YulTypedName",
														"src": "6200:5:6",
														"type": ""
													}
												],
												"src": "6167:116:6"
											},
											{
												"body": {
													"nativeSrc": "6349:77:6",
													"nodeType": "YulBlock",
													"src": "6349:77:6",
													"statements": [
														{
															"nativeSrc": "6359:22:6",
															"nodeType": "YulAssignment",
															"src": "6359:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6374:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6374:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6368:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6368:5:6"
																},
																"nativeSrc": "6368:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6368:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6359:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6359:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6390:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "6390:23:6"
																},
																"nativeSrc": "6390:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6390:30:6"
															},
															"nativeSrc": "6390:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6390:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6289:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6327:6:6",
														"nodeType": "YulTypedName",
														"src": "6327:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6335:3:6",
														"nodeType": "YulTypedName",
														"src": "6335:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6343:5:6",
														"nodeType": "YulTypedName",
														"src": "6343:5:6",
														"type": ""
													}
												],
												"src": "6289:137:6"
											},
											{
												"body": {
													"nativeSrc": "6506:271:6",
													"nodeType": "YulBlock",
													"src": "6506:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6552:83:6",
																"nodeType": "YulBlock",
																"src": "6552:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6554:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6554:77:6"
																			},
																			"nativeSrc": "6554:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6554:79:6"
																		},
																		"nativeSrc": "6554:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6554:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6527:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6527:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6536:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6536:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6523:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:6"
																		},
																		"nativeSrc": "6523:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6523:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6548:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6548:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6519:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6519:3:6"
																},
																"nativeSrc": "6519:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6519:32:6"
															},
															"nativeSrc": "6516:119:6",
															"nodeType": "YulIf",
															"src": "6516:119:6"
														},
														{
															"nativeSrc": "6645:125:6",
															"nodeType": "YulBlock",
															"src": "6645:125:6",
															"statements": [
																{
																	"nativeSrc": "6660:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6660:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6674:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6674:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6664:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6664:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6689:71:6",
																	"nodeType": "YulAssignment",
																	"src": "6689:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6732:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6732:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6743:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6743:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6728:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6728:3:6"
																				},
																				"nativeSrc": "6728:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6728:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6752:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6752:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6699:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6699:28:6"
																		},
																		"nativeSrc": "6699:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6699:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6689:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6689:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6432:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6476:9:6",
														"nodeType": "YulTypedName",
														"src": "6476:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6487:7:6",
														"nodeType": "YulTypedName",
														"src": "6487:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6499:6:6",
														"nodeType": "YulTypedName",
														"src": "6499:6:6",
														"type": ""
													}
												],
												"src": "6432:345:6"
											},
											{
												"body": {
													"nativeSrc": "6937:288:6",
													"nodeType": "YulBlock",
													"src": "6937:288:6",
													"statements": [
														{
															"nativeSrc": "6947:26:6",
															"nodeType": "YulAssignment",
															"src": "6947:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6959:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6959:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6970:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6970:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6955:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:6"
																},
																"nativeSrc": "6955:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6955:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6947:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6947:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7027:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7027:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7040:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7040:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7051:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7051:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7036:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7036:3:6"
																		},
																		"nativeSrc": "7036:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7036:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6983:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6983:43:6"
																},
																"nativeSrc": "6983:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6983:71:6"
															},
															"nativeSrc": "6983:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6983:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7108:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7108:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7121:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7121:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7132:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7132:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7117:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7117:3:6"
																		},
																		"nativeSrc": "7117:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7117:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7064:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7064:43:6"
																},
																"nativeSrc": "7064:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7064:72:6"
															},
															"nativeSrc": "7064:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7064:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7190:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7190:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7203:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7203:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7214:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7214:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7199:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7199:3:6"
																		},
																		"nativeSrc": "7199:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7199:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7146:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7146:43:6"
																},
																"nativeSrc": "7146:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7146:72:6"
															},
															"nativeSrc": "7146:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7146:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6783:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6893:9:6",
														"nodeType": "YulTypedName",
														"src": "6893:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6905:6:6",
														"nodeType": "YulTypedName",
														"src": "6905:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6913:6:6",
														"nodeType": "YulTypedName",
														"src": "6913:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6921:6:6",
														"nodeType": "YulTypedName",
														"src": "6921:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6932:4:6",
														"nodeType": "YulTypedName",
														"src": "6932:4:6",
														"type": ""
													}
												],
												"src": "6783:442:6"
											},
											{
												"body": {
													"nativeSrc": "7329:124:6",
													"nodeType": "YulBlock",
													"src": "7329:124:6",
													"statements": [
														{
															"nativeSrc": "7339:26:6",
															"nodeType": "YulAssignment",
															"src": "7339:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7351:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7351:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7362:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7362:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7347:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7347:3:6"
																},
																"nativeSrc": "7347:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7347:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7339:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7339:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7419:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7419:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7432:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7432:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7443:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7443:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7428:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7428:3:6"
																		},
																		"nativeSrc": "7428:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7428:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7375:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7375:43:6"
																},
																"nativeSrc": "7375:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7375:71:6"
															},
															"nativeSrc": "7375:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7375:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7231:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7301:9:6",
														"nodeType": "YulTypedName",
														"src": "7301:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7313:6:6",
														"nodeType": "YulTypedName",
														"src": "7313:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7324:4:6",
														"nodeType": "YulTypedName",
														"src": "7324:4:6",
														"type": ""
													}
												],
												"src": "7231:222:6"
											},
											{
												"body": {
													"nativeSrc": "7522:80:6",
													"nodeType": "YulBlock",
													"src": "7522:80:6",
													"statements": [
														{
															"nativeSrc": "7532:22:6",
															"nodeType": "YulAssignment",
															"src": "7532:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7547:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7547:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7541:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7541:5:6"
																},
																"nativeSrc": "7541:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7541:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7532:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7590:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7590:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7563:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "7563:26:6"
																},
																"nativeSrc": "7563:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7563:33:6"
															},
															"nativeSrc": "7563:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7563:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7459:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7500:6:6",
														"nodeType": "YulTypedName",
														"src": "7500:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7508:3:6",
														"nodeType": "YulTypedName",
														"src": "7508:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7516:5:6",
														"nodeType": "YulTypedName",
														"src": "7516:5:6",
														"type": ""
													}
												],
												"src": "7459:143:6"
											},
											{
												"body": {
													"nativeSrc": "7685:274:6",
													"nodeType": "YulBlock",
													"src": "7685:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7731:83:6",
																"nodeType": "YulBlock",
																"src": "7731:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7733:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7733:77:6"
																			},
																			"nativeSrc": "7733:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7733:79:6"
																		},
																		"nativeSrc": "7733:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7733:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7706:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7706:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7715:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7715:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7702:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7702:3:6"
																		},
																		"nativeSrc": "7702:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7702:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7727:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7727:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7698:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7698:3:6"
																},
																"nativeSrc": "7698:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7698:32:6"
															},
															"nativeSrc": "7695:119:6",
															"nodeType": "YulIf",
															"src": "7695:119:6"
														},
														{
															"nativeSrc": "7824:128:6",
															"nodeType": "YulBlock",
															"src": "7824:128:6",
															"statements": [
																{
																	"nativeSrc": "7839:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7839:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7853:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7853:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7843:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7843:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7868:74:6",
																	"nodeType": "YulAssignment",
																	"src": "7868:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7914:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7914:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7925:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7925:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7910:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7910:3:6"
																				},
																				"nativeSrc": "7910:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7910:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7934:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7934:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7878:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "7878:31:6"
																		},
																		"nativeSrc": "7878:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7878:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7868:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7868:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7608:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7655:9:6",
														"nodeType": "YulTypedName",
														"src": "7655:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7666:7:6",
														"nodeType": "YulTypedName",
														"src": "7666:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7678:6:6",
														"nodeType": "YulTypedName",
														"src": "7678:6:6",
														"type": ""
													}
												],
												"src": "7608:351:6"
											},
											{
												"body": {
													"nativeSrc": "8009:147:6",
													"nodeType": "YulBlock",
													"src": "8009:147:6",
													"statements": [
														{
															"nativeSrc": "8019:25:6",
															"nodeType": "YulAssignment",
															"src": "8019:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8042:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8042:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8024:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8024:17:6"
																},
																"nativeSrc": "8024:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8024:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8019:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8019:1:6"
																}
															]
														},
														{
															"nativeSrc": "8053:25:6",
															"nodeType": "YulAssignment",
															"src": "8053:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8076:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8076:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8058:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8058:17:6"
																},
																"nativeSrc": "8058:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8058:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8053:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8053:1:6"
																}
															]
														},
														{
															"nativeSrc": "8087:16:6",
															"nodeType": "YulAssignment",
															"src": "8087:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8098:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8098:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8101:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8101:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8094:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8094:3:6"
																},
																"nativeSrc": "8094:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8094:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8087:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8087:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8127:22:6",
																"nodeType": "YulBlock",
																"src": "8127:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8129:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8129:16:6"
																			},
																			"nativeSrc": "8129:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8129:18:6"
																		},
																		"nativeSrc": "8129:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8129:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8119:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8119:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8122:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8122:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8116:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8116:2:6"
																},
																"nativeSrc": "8116:10:6",
																"nodeType": "YulFunctionCall",
																"src": "8116:10:6"
															},
															"nativeSrc": "8113:36:6",
															"nodeType": "YulIf",
															"src": "8113:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7965:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7996:1:6",
														"nodeType": "YulTypedName",
														"src": "7996:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7999:1:6",
														"nodeType": "YulTypedName",
														"src": "7999:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8005:3:6",
														"nodeType": "YulTypedName",
														"src": "8005:3:6",
														"type": ""
													}
												],
												"src": "7965:191:6"
											},
											{
												"body": {
													"nativeSrc": "8258:73:6",
													"nodeType": "YulBlock",
													"src": "8258:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8275:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8275:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8280:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8280:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8268:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8268:6:6"
																},
																"nativeSrc": "8268:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8268:19:6"
															},
															"nativeSrc": "8268:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "8268:19:6"
														},
														{
															"nativeSrc": "8296:29:6",
															"nodeType": "YulAssignment",
															"src": "8296:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8315:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8315:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8320:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8320:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8311:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:6"
																},
																"nativeSrc": "8311:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8311:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8296:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8296:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8162:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8230:3:6",
														"nodeType": "YulTypedName",
														"src": "8230:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8235:6:6",
														"nodeType": "YulTypedName",
														"src": "8235:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8246:11:6",
														"nodeType": "YulTypedName",
														"src": "8246:11:6",
														"type": ""
													}
												],
												"src": "8162:169:6"
											},
											{
												"body": {
													"nativeSrc": "8443:58:6",
													"nodeType": "YulBlock",
													"src": "8443:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8465:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8465:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8473:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8473:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8461:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8461:3:6"
																		},
																		"nativeSrc": "8461:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8461:14:6"
																	},
																	{
																		"hexValue": "556e61626c6520746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "8477:16:6",
																		"nodeType": "YulLiteral",
																		"src": "8477:16:6",
																		"type": "",
																		"value": "Unable to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8454:6:6"
																},
																"nativeSrc": "8454:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8454:40:6"
															},
															"nativeSrc": "8454:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "8454:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb",
												"nativeSrc": "8337:164:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8435:6:6",
														"nodeType": "YulTypedName",
														"src": "8435:6:6",
														"type": ""
													}
												],
												"src": "8337:164:6"
											},
											{
												"body": {
													"nativeSrc": "8653:220:6",
													"nodeType": "YulBlock",
													"src": "8653:220:6",
													"statements": [
														{
															"nativeSrc": "8663:74:6",
															"nodeType": "YulAssignment",
															"src": "8663:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8729:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8729:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8734:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8734:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8670:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8670:58:6"
																},
																"nativeSrc": "8670:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8670:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8663:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8663:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8835:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8835:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb",
																	"nativeSrc": "8746:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8746:88:6"
																},
																"nativeSrc": "8746:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8746:93:6"
															},
															"nativeSrc": "8746:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8746:93:6"
														},
														{
															"nativeSrc": "8848:19:6",
															"nodeType": "YulAssignment",
															"src": "8848:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8859:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8859:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8855:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8855:3:6"
																},
																"nativeSrc": "8855:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8855:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8848:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8848:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8507:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8641:3:6",
														"nodeType": "YulTypedName",
														"src": "8641:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8649:3:6",
														"nodeType": "YulTypedName",
														"src": "8649:3:6",
														"type": ""
													}
												],
												"src": "8507:366:6"
											},
											{
												"body": {
													"nativeSrc": "9050:248:6",
													"nodeType": "YulBlock",
													"src": "9050:248:6",
													"statements": [
														{
															"nativeSrc": "9060:26:6",
															"nodeType": "YulAssignment",
															"src": "9060:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9072:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9072:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9083:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9068:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9068:3:6"
																},
																"nativeSrc": "9068:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9068:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9060:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9060:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9107:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9107:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9118:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9118:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9103:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9103:3:6"
																		},
																		"nativeSrc": "9103:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9103:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9126:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9126:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9132:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9132:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9122:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9122:3:6"
																		},
																		"nativeSrc": "9122:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9122:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9096:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9096:6:6"
																},
																"nativeSrc": "9096:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9096:47:6"
															},
															"nativeSrc": "9096:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9096:47:6"
														},
														{
															"nativeSrc": "9152:139:6",
															"nodeType": "YulAssignment",
															"src": "9152:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9286:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9286:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9160:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9160:124:6"
																},
																"nativeSrc": "9160:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9160:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9152:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9152:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8879:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9030:9:6",
														"nodeType": "YulTypedName",
														"src": "9030:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9045:4:6",
														"nodeType": "YulTypedName",
														"src": "9045:4:6",
														"type": ""
													}
												],
												"src": "8879:419:6"
											},
											{
												"body": {
													"nativeSrc": "9410:55:6",
													"nodeType": "YulBlock",
													"src": "9410:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9432:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9432:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9440:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9440:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9428:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9428:3:6"
																		},
																		"nativeSrc": "9428:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9428:14:6"
																	},
																	{
																		"hexValue": "57726f6e6720546f6b656e",
																		"kind": "string",
																		"nativeSrc": "9444:13:6",
																		"nodeType": "YulLiteral",
																		"src": "9444:13:6",
																		"type": "",
																		"value": "Wrong Token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9421:6:6"
																},
																"nativeSrc": "9421:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9421:37:6"
															},
															"nativeSrc": "9421:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9421:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78",
												"nativeSrc": "9304:161:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9402:6:6",
														"nodeType": "YulTypedName",
														"src": "9402:6:6",
														"type": ""
													}
												],
												"src": "9304:161:6"
											},
											{
												"body": {
													"nativeSrc": "9617:220:6",
													"nodeType": "YulBlock",
													"src": "9617:220:6",
													"statements": [
														{
															"nativeSrc": "9627:74:6",
															"nodeType": "YulAssignment",
															"src": "9627:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9693:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9693:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9698:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9698:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9634:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9634:58:6"
																},
																"nativeSrc": "9634:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9634:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9627:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9627:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9799:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9799:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78",
																	"nativeSrc": "9710:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9710:88:6"
																},
																"nativeSrc": "9710:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9710:93:6"
															},
															"nativeSrc": "9710:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9710:93:6"
														},
														{
															"nativeSrc": "9812:19:6",
															"nodeType": "YulAssignment",
															"src": "9812:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9823:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9823:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9828:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9828:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9819:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9819:3:6"
																},
																"nativeSrc": "9819:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9819:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9812:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9471:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9605:3:6",
														"nodeType": "YulTypedName",
														"src": "9605:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9613:3:6",
														"nodeType": "YulTypedName",
														"src": "9613:3:6",
														"type": ""
													}
												],
												"src": "9471:366:6"
											},
											{
												"body": {
													"nativeSrc": "10014:248:6",
													"nodeType": "YulBlock",
													"src": "10014:248:6",
													"statements": [
														{
															"nativeSrc": "10024:26:6",
															"nodeType": "YulAssignment",
															"src": "10024:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10036:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10036:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10047:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10032:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10032:3:6"
																},
																"nativeSrc": "10032:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10032:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10024:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10024:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10071:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10071:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10082:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10082:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10067:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10067:3:6"
																		},
																		"nativeSrc": "10067:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10067:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10090:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10090:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10096:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10086:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:6"
																		},
																		"nativeSrc": "10086:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10086:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10060:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:6"
																},
																"nativeSrc": "10060:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10060:47:6"
															},
															"nativeSrc": "10060:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10060:47:6"
														},
														{
															"nativeSrc": "10116:139:6",
															"nodeType": "YulAssignment",
															"src": "10116:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10250:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10250:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10124:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10124:124:6"
																},
																"nativeSrc": "10124:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10124:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10116:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10116:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9843:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9994:9:6",
														"nodeType": "YulTypedName",
														"src": "9994:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10009:4:6",
														"nodeType": "YulTypedName",
														"src": "10009:4:6",
														"type": ""
													}
												],
												"src": "9843:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unable to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wrong Token\")\n\n    }\n\n    function abi_encode_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 494
									},
									{
										"length": 32,
										"start": 680
									},
									{
										"length": 32,
										"start": 1008
									},
									{
										"length": 32,
										"start": 1325
									},
									{
										"length": 32,
										"start": 1845
									},
									{
										"length": 32,
										"start": 2074
									},
									{
										"length": 32,
										"start": 2195
									},
									{
										"length": 32,
										"start": 2233
									},
									{
										"length": 32,
										"start": 2333
									}
								],
								"794": [
									{
										"length": 32,
										"start": 845
									},
									{
										"length": 32,
										"start": 1166
									},
									{
										"length": 32,
										"start": 1480
									},
									{
										"length": 32,
										"start": 1930
									},
									{
										"length": 32,
										"start": 2162
									},
									{
										"length": 32,
										"start": 2266
									},
									{
										"length": 32,
										"start": 2865
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c806370a082311161006457806370a082311461010d5780639c8f9f231461013d5780639cd441da1461016e578063d004f0f71461019e578063d21220a7146101ce57610091565b80630dfe16811461009557806318160ddd146100b3578063443cb4bc146100d15780635a76f25e146100ef575b5f80fd5b61009d6101ec565b6040516100aa9190610cbc565b60405180910390f35b6100bb610210565b6040516100c89190610ced565b60405180910390f35b6100d9610216565b6040516100e69190610ced565b60405180910390f35b6100f761021b565b6040516101049190610ced565b60405180910390f35b61012760048036038101906101229190610d45565b610221565b6040516101349190610ced565b60405180910390f35b61015760048036038101906101529190610d9a565b610236565b604051610165929190610dc5565b60405180910390f35b61018860048036038101906101839190610dec565b6103ed565b6040516101959190610ced565b60405180910390f35b6101b860048036038101906101b39190610e2a565b610732565b6040516101c59190610ced565b60405180910390f35b6101d6610b2f565b6040516101e39190610cbc565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b5f5481565b60015481565b6003602052805f5260405f205f915090505481565b5f806002545f54846102489190610e95565b6102529190610f03565b9150600254600154846102659190610e95565b61026f9190610f03565b905061027b3384610b53565b61029e825f5461028b9190610f33565b826001546102999190610f33565b610bc2565b5f821115610343577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610301929190610f75565b6020604051808303815f875af115801561031d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103419190610fd1565b505b5f8111156103e8577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103a6929190610f75565b6020604051808303815f875af11580156103c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e69190610fd1565b505b915091565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161044b93929190610ffc565b6020604051808303815f875af1158015610467573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061048b9190610fd1565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104e993929190610ffc565b6020604051808303815f875af1158015610505573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105299190610fd1565b505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105849190611031565b602060405180830381865afa15801561059f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c3919061105e565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161061f9190611031565b602060405180830381865afa15801561063a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065e919061105e565b90505f80548361066e9190610f33565b90505f6001548361067f9190610f33565b90505f6002540361069d5780826106969190611089565b94506106d2565b6001545f546106ac9190611089565b60025482846106bb9190611089565b6106c59190611089565b6106cf9190610f03565b94505b5f8511610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611116565b60405180910390fd5b61071e3386610bd3565b6107288282610bc2565b5050505092915050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806107d857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e9061117e565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f80826108b7577f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006108fa565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b915091505f808461090f576001545f54610915565b5f546001545b915091505f827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109749190611031565b602060405180830381865afa15801561098f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b3919061105e565b6109bd9190610f33565b90508473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b81526004016109fc93929190610ffc565b6020604051808303815f875af1158015610a18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3c9190610fd1565b506103e86103e582610a4e9190610e95565b610a589190610f03565b96505f8087610a7e578885610a6d9190610f33565b8a85610a799190611089565b610a97565b8985610a8a9190611089565b8985610a969190610f33565b5b91509150610aa58282610bc2565b8573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338b6040518363ffffffff1660e01b8152600401610ae0929190610f75565b6020604051808303815f875af1158015610afc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b209190610fd1565b50505050505050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b9f9190610f33565b925050819055508060025f828254610bb79190610f33565b925050819055505050565b815f81905550806001819055505050565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c1f9190611089565b925050819055508060025f828254610c379190611089565b925050819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610c84610c7f610c7a84610c42565b610c61565b610c42565b9050919050565b5f610c9582610c6a565b9050919050565b5f610ca682610c8b565b9050919050565b610cb681610c9c565b82525050565b5f602082019050610ccf5f830184610cad565b92915050565b5f819050919050565b610ce781610cd5565b82525050565b5f602082019050610d005f830184610cde565b92915050565b5f80fd5b5f610d1482610c42565b9050919050565b610d2481610d0a565b8114610d2e575f80fd5b50565b5f81359050610d3f81610d1b565b92915050565b5f60208284031215610d5a57610d59610d06565b5b5f610d6784828501610d31565b91505092915050565b610d7981610cd5565b8114610d83575f80fd5b50565b5f81359050610d9481610d70565b92915050565b5f60208284031215610daf57610dae610d06565b5b5f610dbc84828501610d86565b91505092915050565b5f604082019050610dd85f830185610cde565b610de56020830184610cde565b9392505050565b5f8060408385031215610e0257610e01610d06565b5b5f610e0f85828601610d86565b9250506020610e2085828601610d86565b9150509250929050565b5f8060408385031215610e4057610e3f610d06565b5b5f610e4d85828601610d31565b9250506020610e5e85828601610d86565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e9f82610cd5565b9150610eaa83610cd5565b9250828202610eb881610cd5565b91508282048414831517610ecf57610ece610e68565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f0d82610cd5565b9150610f1883610cd5565b925082610f2857610f27610ed6565b5b828204905092915050565b5f610f3d82610cd5565b9150610f4883610cd5565b9250828203905081811115610f6057610f5f610e68565b5b92915050565b610f6f81610d0a565b82525050565b5f604082019050610f885f830185610f66565b610f956020830184610cde565b9392505050565b5f8115159050919050565b610fb081610f9c565b8114610fba575f80fd5b50565b5f81519050610fcb81610fa7565b92915050565b5f60208284031215610fe657610fe5610d06565b5b5f610ff384828501610fbd565b91505092915050565b5f60608201905061100f5f830186610f66565b61101c6020830185610f66565b6110296040830184610cde565b949350505050565b5f6020820190506110445f830184610f66565b92915050565b5f8151905061105881610d70565b92915050565b5f6020828403121561107357611072610d06565b5b5f6110808482850161104a565b91505092915050565b5f61109382610cd5565b915061109e83610cd5565b92508282019050808211156110b6576110b5610e68565b5b92915050565b5f82825260208201905092915050565b7f556e61626c6520746f206d696e740000000000000000000000000000000000005f82015250565b5f611100600e836110bc565b915061110b826110cc565b602082019050919050565b5f6020820190508181035f83015261112d816110f4565b9050919050565b7f57726f6e6720546f6b656e0000000000000000000000000000000000000000005f82015250565b5f611168600b836110bc565b915061117382611134565b602082019050919050565b5f6020820190508181035f8301526111958161115c565b905091905056fea264697066735822122088c4b9f6e2e025a0a7611d76812420c5678fb1cd361770620e3d60df2824197764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1CE JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xEF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP3 SWAP2 SWAP1 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 SLOAD PUSH0 SLOAD DUP5 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP PUSH2 0x27B CALLER DUP5 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x29E DUP3 PUSH0 SLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST DUP3 PUSH1 0x1 SLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x343 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP3 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x3E8 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A6 SWAP3 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x467 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD DUP4 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP4 PUSH2 0x67F SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SUB PUSH2 0x69D JUMPI DUP1 DUP3 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP5 POP PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP5 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71E CALLER DUP7 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x728 DUP3 DUP3 PUSH2 0xBC2 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7D8 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 DUP3 PUSH2 0x8B7 JUMPI PUSH32 0x0 PUSH32 0x0 PUSH2 0x8FA JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP1 DUP5 PUSH2 0x90F JUMPI PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x915 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP12 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP PUSH2 0x3E8 PUSH2 0x3E5 DUP3 PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP7 POP PUSH0 DUP1 DUP8 PUSH2 0xA7E JUMPI DUP9 DUP6 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST DUP11 DUP6 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST DUP10 DUP6 PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST DUP10 DUP6 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xAA5 DUP3 DUP3 PUSH2 0xBC2 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP12 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE0 SWAP3 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAFC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC84 PUSH2 0xC7F PUSH2 0xC7A DUP5 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC95 DUP3 PUSH2 0xC6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCA6 DUP3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB6 DUP2 PUSH2 0xC9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCF PUSH0 DUP4 ADD DUP5 PUSH2 0xCAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE7 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD00 PUSH0 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD14 DUP3 PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP2 EQ PUSH2 0xD2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD3F DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5A JUMPI PUSH2 0xD59 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD67 DUP5 DUP3 DUP6 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD79 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP2 EQ PUSH2 0xD83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD94 DUP2 PUSH2 0xD70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAF JUMPI PUSH2 0xDAE PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBC DUP5 DUP3 DUP6 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0F DUP6 DUP3 DUP7 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE20 DUP6 DUP3 DUP7 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE40 JUMPI PUSH2 0xE3F PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4D DUP6 DUP3 DUP7 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE5E DUP6 DUP3 DUP7 ADD PUSH2 0xD86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE9F DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAA DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEB8 DUP2 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xE68 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF0D DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF18 DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF28 JUMPI PUSH2 0xF27 PUSH2 0xED6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF3D DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF48 DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0xE68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF88 PUSH0 DUP4 ADD DUP6 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF95 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB0 DUP2 PUSH2 0xF9C JUMP JUMPDEST DUP2 EQ PUSH2 0xFBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFCB DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF3 DUP5 DUP3 DUP6 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x100F PUSH0 DUP4 ADD DUP7 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x101C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1044 PUSH0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1058 DUP2 PUSH2 0xD70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1072 PUSH2 0xD06 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1080 DUP5 DUP3 DUP6 ADD PUSH2 0x104A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1093 DUP3 PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x109E DUP4 PUSH2 0xCD5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B5 PUSH2 0xE68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E61626C6520746F206D696E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1100 PUSH1 0xE DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x110B DUP3 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x112D DUP2 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57726F6E6720546F6B656E000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1168 PUSH1 0xB DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1173 DUP3 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1195 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC4 0xB9 0xF6 0xE2 0xE0 0x25 LOG0 0xA7 PUSH2 0x1D76 DUP2 0x24 KECCAK256 0xC5 PUSH8 0x8FB1CD361770620E RETURNDATASIZE PUSH1 0xDF 0x28 0x24 NOT PUSH24 0x64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "114:3829:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;135:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;260:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;208:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;234;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3395:418;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2727:661;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;726:1972;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;171:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;135;;;:::o;260:23::-;;;;:::o;208:20::-;;;;:::o;234:::-;;;;:::o;290:42::-;;;;;;;;;;;;;;;;;:::o;3395:418::-;3451:7;3459;3505:11;;3493:8;;3483:7;:18;;;;:::i;:::-;3482:34;;;;:::i;:::-;3477:39;;3554:11;;3542:8;;3532:7;:18;;;;:::i;:::-;3531:34;;;;:::i;:::-;3526:39;;3576:26;3582:10;3594:7;3576:5;:26::i;:::-;3613:37;3632:2;3621:8;;:13;;;;:::i;:::-;3647:2;3636:8;;:13;;;;:::i;:::-;3613:7;:37::i;:::-;3668:1;3663:2;:6;3660:69;;;3685:6;:15;;;3701:10;3713:2;3685:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3660:69;3747:1;3742:2;:6;3738:69;;;3764:6;:15;;;3780:10;3792:2;3764:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3738:69;3395:418;;;:::o;2727:661::-;2795:11;2818:6;:19;;;2838:10;2858:4;2865:8;2818:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2884:6;:19;;;2904:10;2924:4;2931:8;2884:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2950:9;2962:6;:16;;;2987:4;2962:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2950:43;;3003:9;3015:6;:16;;;3040:4;3015:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3003:43;;3057:7;3074:8;;3067:4;:15;;;;:::i;:::-;3057:25;;3092:7;3109:8;;3102:4;:15;;;;:::i;:::-;3092:25;;3146:1;3131:11;;:16;3128:147;;3176:2;3171;:7;;;;:::i;:::-;3162:16;;3128:147;;;3255:8;;3244;;:19;;;;:::i;:::-;3229:11;;3223:2;3218;:7;;;;:::i;:::-;3216:24;;;;:::i;:::-;3215:49;;;;:::i;:::-;3207:57;;3128:147;3302:1;3293:6;:10;3285:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;3331:25;3337:10;3349:6;3331:5;:25::i;:::-;3366:15;3374:2;3378;3366:7;:15::i;:::-;2807:581;;;;2727:661;;;;:::o;726:1972::-;792:14;847:6;827:27;;:8;:27;;;:57;;;;877:6;857:27;;:8;:27;;;827:57;819:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;911:13;947:6;927:27;;:8;:27;;;911:43;;965:14;980:15;999:8;:42;;1027:6;1034;999:42;;;1011:6;1018;999:42;964:77;;;;1052:14;1067:15;1086:8;:50;;1118:8;;1127;;1086:50;;;1098:8;;1107;;1086:50;1051:85;;;;1146:14;1197:9;1163:6;:16;;;1188:4;1163:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;1146:60;;1923:7;:20;;;1944:10;1964:4;1971:9;1923:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2146:4;2141:3;2130:8;:14;;;;:::i;:::-;:20;;;;:::i;:::-;2118:32;;2162:9;2172;2185:8;:124;;2276:9;2264;:21;;;;:::i;:::-;2299:9;2286:10;:22;;;;:::i;:::-;2185:124;;;2218:9;2206;:21;;;;:::i;:::-;2241:9;2228:10;:22;;;;:::i;:::-;2185:124;2161:148;;;;2321:18;2329:4;2334;2321:7;:18::i;:::-;2652:8;:17;;;2670:10;2681:9;2652:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;809:1889;;;;;;;;726:1972;;;;:::o;171:30::-;;;:::o;468:123::-;545:7;527:9;:14;537:3;527:14;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;577:7;562:11;;:22;;;;;;;:::i;:::-;;;;;;;;468:123;;:::o;597:::-;674:9;663:8;:20;;;;704:9;693:8;:20;;;;597:123;;:::o;339:::-;416:7;398:9;:14;408:3;398:14;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;448:7;433:11;;:22;;;;;;;:::i;:::-;;;;;;;;339:123;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:77::-;1089:7;1118:5;1107:16;;1052:77;;;:::o;1135:118::-;1222:24;1240:5;1222:24;:::i;:::-;1217:3;1210:37;1135:118;;:::o;1259:222::-;1352:4;1390:2;1379:9;1375:18;1367:26;;1403:71;1471:1;1460:9;1456:17;1447:6;1403:71;:::i;:::-;1259:222;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:96;1851:7;1880:24;1898:5;1880:24;:::i;:::-;1869:35;;1814:96;;;:::o;1916:122::-;1989:24;2007:5;1989:24;:::i;:::-;1982:5;1979:35;1969:63;;2028:1;2025;2018:12;1969:63;1916:122;:::o;2044:139::-;2090:5;2128:6;2115:20;2106:29;;2144:33;2171:5;2144:33;:::i;:::-;2044:139;;;;:::o;2189:329::-;2248:6;2297:2;2285:9;2276:7;2272:23;2268:32;2265:119;;;2303:79;;:::i;:::-;2265:119;2423:1;2448:53;2493:7;2484:6;2473:9;2469:22;2448:53;:::i;:::-;2438:63;;2394:117;2189:329;;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:332::-;3253:4;3291:2;3280:9;3276:18;3268:26;;3304:71;3372:1;3361:9;3357:17;3348:6;3304:71;:::i;:::-;3385:72;3453:2;3442:9;3438:18;3429:6;3385:72;:::i;:::-;3132:332;;;;;:::o;3470:474::-;3538:6;3546;3595:2;3583:9;3574:7;3570:23;3566:32;3563:119;;;3601:79;;:::i;:::-;3563:119;3721:1;3746:53;3791:7;3782:6;3771:9;3767:22;3746:53;:::i;:::-;3736:63;;3692:117;3848:2;3874:53;3919:7;3910:6;3899:9;3895:22;3874:53;:::i;:::-;3864:63;;3819:118;3470:474;;;;;:::o;3950:::-;4018:6;4026;4075:2;4063:9;4054:7;4050:23;4046:32;4043:119;;;4081:79;;:::i;:::-;4043:119;4201:1;4226:53;4271:7;4262:6;4251:9;4247:22;4226:53;:::i;:::-;4216:63;;4172:117;4328:2;4354:53;4399:7;4390:6;4379:9;4375:22;4354:53;:::i;:::-;4344:63;;4299:118;3950:474;;;;;:::o;4430:180::-;4478:77;4475:1;4468:88;4575:4;4572:1;4565:15;4599:4;4596:1;4589:15;4616:410;4656:7;4679:20;4697:1;4679:20;:::i;:::-;4674:25;;4713:20;4731:1;4713:20;:::i;:::-;4708:25;;4768:1;4765;4761:9;4790:30;4808:11;4790:30;:::i;:::-;4779:41;;4969:1;4960:7;4956:15;4953:1;4950:22;4930:1;4923:9;4903:83;4880:139;;4999:18;;:::i;:::-;4880:139;4664:362;4616:410;;;;:::o;5032:180::-;5080:77;5077:1;5070:88;5177:4;5174:1;5167:15;5201:4;5198:1;5191:15;5218:185;5258:1;5275:20;5293:1;5275:20;:::i;:::-;5270:25;;5309:20;5327:1;5309:20;:::i;:::-;5304:25;;5348:1;5338:35;;5353:18;;:::i;:::-;5338:35;5395:1;5392;5388:9;5383:14;;5218:185;;;;:::o;5409:194::-;5449:4;5469:20;5487:1;5469:20;:::i;:::-;5464:25;;5503:20;5521:1;5503:20;:::i;:::-;5498:25;;5547:1;5544;5540:9;5532:17;;5571:1;5565:4;5562:11;5559:37;;;5576:18;;:::i;:::-;5559:37;5409:194;;;;:::o;5609:118::-;5696:24;5714:5;5696:24;:::i;:::-;5691:3;5684:37;5609:118;;:::o;5733:332::-;5854:4;5892:2;5881:9;5877:18;5869:26;;5905:71;5973:1;5962:9;5958:17;5949:6;5905:71;:::i;:::-;5986:72;6054:2;6043:9;6039:18;6030:6;5986:72;:::i;:::-;5733:332;;;;;:::o;6071:90::-;6105:7;6148:5;6141:13;6134:21;6123:32;;6071:90;;;:::o;6167:116::-;6237:21;6252:5;6237:21;:::i;:::-;6230:5;6227:32;6217:60;;6273:1;6270;6263:12;6217:60;6167:116;:::o;6289:137::-;6343:5;6374:6;6368:13;6359:22;;6390:30;6414:5;6390:30;:::i;:::-;6289:137;;;;:::o;6432:345::-;6499:6;6548:2;6536:9;6527:7;6523:23;6519:32;6516:119;;;6554:79;;:::i;:::-;6516:119;6674:1;6699:61;6752:7;6743:6;6732:9;6728:22;6699:61;:::i;:::-;6689:71;;6645:125;6432:345;;;;:::o;6783:442::-;6932:4;6970:2;6959:9;6955:18;6947:26;;6983:71;7051:1;7040:9;7036:17;7027:6;6983:71;:::i;:::-;7064:72;7132:2;7121:9;7117:18;7108:6;7064:72;:::i;:::-;7146;7214:2;7203:9;7199:18;7190:6;7146:72;:::i;:::-;6783:442;;;;;;:::o;7231:222::-;7324:4;7362:2;7351:9;7347:18;7339:26;;7375:71;7443:1;7432:9;7428:17;7419:6;7375:71;:::i;:::-;7231:222;;;;:::o;7459:143::-;7516:5;7547:6;7541:13;7532:22;;7563:33;7590:5;7563:33;:::i;:::-;7459:143;;;;:::o;7608:351::-;7678:6;7727:2;7715:9;7706:7;7702:23;7698:32;7695:119;;;7733:79;;:::i;:::-;7695:119;7853:1;7878:64;7934:7;7925:6;7914:9;7910:22;7878:64;:::i;:::-;7868:74;;7824:128;7608:351;;;;:::o;7965:191::-;8005:3;8024:20;8042:1;8024:20;:::i;:::-;8019:25;;8058:20;8076:1;8058:20;:::i;:::-;8053:25;;8101:1;8098;8094:9;8087:16;;8122:3;8119:1;8116:10;8113:36;;;8129:18;;:::i;:::-;8113:36;7965:191;;;;:::o;8162:169::-;8246:11;8280:6;8275:3;8268:19;8320:4;8315:3;8311:14;8296:29;;8162:169;;;;:::o;8337:164::-;8477:16;8473:1;8465:6;8461:14;8454:40;8337:164;:::o;8507:366::-;8649:3;8670:67;8734:2;8729:3;8670:67;:::i;:::-;8663:74;;8746:93;8835:3;8746:93;:::i;:::-;8864:2;8859:3;8855:12;8848:19;;8507:366;;;:::o;8879:419::-;9045:4;9083:2;9072:9;9068:18;9060:26;;9132:9;9126:4;9122:20;9118:1;9107:9;9103:17;9096:47;9160:131;9286:4;9160:131;:::i;:::-;9152:139;;8879:419;;;:::o;9304:161::-;9444:13;9440:1;9432:6;9428:14;9421:37;9304:161;:::o;9471:366::-;9613:3;9634:67;9698:2;9693:3;9634:67;:::i;:::-;9627:74;;9710:93;9799:3;9710:93;:::i;:::-;9828:2;9823:3;9819:12;9812:19;;9471:366;;;:::o;9843:419::-;10009:4;10047:2;10036:9;10032:18;10024:26;;10096:9;10090:4;10086:20;10082:1;10071:9;10067:17;10060:47;10124:131;10250:4;10124:131;:::i;:::-;10116:139;;9843:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "912400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"balanceOf(address)": "2802",
								"removeLiquidity(uint256)": "infinite",
								"reserve0()": "2469",
								"reserve1()": "2492",
								"swap(address,uint256)": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2448"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_update(uint256,uint256)": "44240"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3819,
									"end": 3939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3890,
									"end": 3897,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3898,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3924,
									"end": 3931,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3932,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3819,
									"end": 3939,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "794"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "791"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3943,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088c4b9f6e2e025a0a7611d76812420c5678fb1cd361770620e3d60df2824197764736f6c634300081a0033",
									".code": [
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "D004F0F7"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "D21220A7"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "DFE1681"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "5A76F25E"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3943,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 135,
											"end": 165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 135,
											"end": 165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 208,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 208,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 234,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 234,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 290,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 290,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3395,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3395,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3395,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2727,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 726,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 726,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 726,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 171,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 171,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 135,
											"end": 165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 135,
											"end": 165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 234,
											"end": 254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 290,
											"end": 332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3516,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3505,
											"end": 3516,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3493,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3501,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3490,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3483,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3482,
											"end": 3516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3482,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3516,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3482,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3554,
											"end": 3565,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3542,
											"end": 3550,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3532,
											"end": 3550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3531,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3526,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3526,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3582,
											"end": 3592,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3601,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3576,
											"end": 3602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3632,
											"end": 3634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3629,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3621,
											"end": 3634,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3621,
											"end": 3634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3634,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3621,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3644,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3636,
											"end": 3644,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3636,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3636,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3613,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3650,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3613,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3669,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3729,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3660,
											"end": 3729,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3701,
											"end": 3711,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3685,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3685,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3660,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3744,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3807,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3738,
											"end": 3807,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3764,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3764,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3807,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3738,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2862,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2873,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2818,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2818,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2890,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2904,
											"end": 2914,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2928,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2939,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2884,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2884,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 2959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2978,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2987,
											"end": 2991,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2962,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2962,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2962,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3040,
											"end": 3044,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3015,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3015,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3015,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3082,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3067,
											"end": 3082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3067,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3082,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3067,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3117,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3109,
											"end": 3117,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3106,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3102,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3131,
											"end": 3142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3147,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3171,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3178,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3263,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3255,
											"end": 3263,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3252,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3244,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3244,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3263,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3244,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3240,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3229,
											"end": 3240,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3218,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3216,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3215,
											"end": 3264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3215,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3264,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3215,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3264,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3128,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3303,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3285,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3285,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3337,
											"end": 3347,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3331,
											"end": 3356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3356,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3331,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3374,
											"end": 3376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3366,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 3388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 3388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 3388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 3388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 792,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 853,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 827,
											"end": 835,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 827,
											"end": 854,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 827,
											"end": 884,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 827,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 827,
											"end": 884,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 827,
											"end": 884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 877,
											"end": 883,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 857,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 857,
											"end": 884,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 857,
											"end": 865,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 857,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 857,
											"end": 884,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 857,
											"end": 884,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 827,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 827,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 819,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 819,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 819,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 953,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 927,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 927,
											"end": 954,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 927,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 927,
											"end": 954,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 927,
											"end": 954,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 911,
											"end": 954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 999,
											"end": 1007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1033,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 999,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1126,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1126,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1135,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1115,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1107,
											"end": 1115,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1086,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 1163,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1163,
											"end": 1179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1188,
											"end": 1192,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1163,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1163,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1163,
											"end": 1206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1163,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1206,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1163,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1930,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1943,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1968,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1923,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1923,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2141,
											"end": 2144,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 2130,
											"end": 2138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2130,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2130,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2130,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2150,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2193,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2285,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2264,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2296,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2286,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2215,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2206,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2238,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2228,
											"end": 2250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2228,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2250,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2228,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2185,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2329,
											"end": 2333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2321,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2660,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2669,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2669,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2669,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2670,
											"end": 2680,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2652,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2652,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 171,
											"end": 201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 171,
											"end": 201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 468,
											"end": 591,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 468,
											"end": 591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 536,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 527,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 540,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 527,
											"end": 541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 527,
											"end": 541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 527,
											"end": 541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 527,
											"end": 541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 541,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 527,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 527,
											"end": 552,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 527,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 527,
											"end": 552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 577,
											"end": 584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 562,
											"end": 573,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 562,
											"end": 573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 562,
											"end": 584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 562,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 562,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 562,
											"end": 584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 468,
											"end": 591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 468,
											"end": 591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 468,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 720,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 597,
											"end": 720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 674,
											"end": 683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 663,
											"end": 671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 663,
											"end": 683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 663,
											"end": 683,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 663,
											"end": 683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 693,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 693,
											"end": 713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 462,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 339,
											"end": 462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 416,
											"end": 423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 398,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 398,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 411,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 412,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 412,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 412,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 398,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 398,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 398,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 398,
											"end": 423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 448,
											"end": 455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 433,
											"end": 455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 433,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 433,
											"end": 455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1222,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1403,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1403,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1898,
											"end": 1903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1880,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1989,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 2038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2283,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2272,
											"end": 2295,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2300,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2448,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2597,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2752,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2911,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3056,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3132,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3289,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3372,
											"end": 3373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3304,
											"end": 3375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3375,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3304,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3385,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3385,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3464,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3464,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3944,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3597,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3598,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3563,
											"end": 3682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3601,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3601,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3680,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3601,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3682,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3563,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3791,
											"end": 3798,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3746,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3799,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3746,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3799,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3910,
											"end": 3916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3908,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3874,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3927,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3874,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3950,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4077,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4061,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4050,
											"end": 4073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4078,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4043,
											"end": 4162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4081,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4162,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4043,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4271,
											"end": 4278,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4260,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4226,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4279,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4226,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4354,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4399,
											"end": 4406,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4388,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4354,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4407,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4354,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4610,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4430,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4475,
											"end": 4476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4579,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4565,
											"end": 4580,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4603,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4604,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 5026,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4616,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4679,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4731,
											"end": 4732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4713,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4733,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4770,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4790,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4808,
											"end": 4819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4790,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4790,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4790,
											"end": 4820,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4790,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4956,
											"end": 4971,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4954,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4972,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4930,
											"end": 4931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4932,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4903,
											"end": 4986,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4880,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4880,
											"end": 5019,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4999,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4880,
											"end": 5019,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4880,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 5026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 5026,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 5026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 5026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 5026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 5026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5212,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5032,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5157,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5077,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5070,
											"end": 5158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5181,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5174,
											"end": 5175,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5167,
											"end": 5182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5205,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5198,
											"end": 5199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5206,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5403,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5218,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5293,
											"end": 5294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5275,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5295,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5275,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5309,
											"end": 5329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5338,
											"end": 5373,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5353,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5373,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5338,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5397,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5603,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5409,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5469,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5489,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5503,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5523,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5503,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5572,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5565,
											"end": 5569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5562,
											"end": 5573,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5596,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 5559,
											"end": 5596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5576,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5576,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5576,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5576,
											"end": 5594,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5576,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5596,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 5559,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5603,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5727,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5609,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5714,
											"end": 5719,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5696,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 6065,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5733,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5905,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 5905,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5986,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5986,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 6065,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 6065,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 6065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 6065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 6065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6161,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6071,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6153,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6154,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6155,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6283,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6167,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6252,
											"end": 6257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6237,
											"end": 6258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6259,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6217,
											"end": 6277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6275,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6277,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6217,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6426,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6289,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6381,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6414,
											"end": 6419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6390,
											"end": 6420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6420,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6390,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6777,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6432,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6534,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6519,
											"end": 6551,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 6516,
											"end": 6635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6554,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6554,
											"end": 6633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6633,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6554,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6635,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 6516,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6752,
											"end": 6759,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6741,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6699,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6760,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6699,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6760,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 6936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6983,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7033,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6983,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6983,
											"end": 7054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6983,
											"end": 7054,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 6983,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7132,
											"end": 7134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7130,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7114,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7064,
											"end": 7136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7136,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7064,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7146,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7203,
											"end": 7212,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7146,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7146,
											"end": 7218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7146,
											"end": 7218,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 7146,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7453,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7231,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7351,
											"end": 7360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7443,
											"end": 7444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7441,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7425,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7375,
											"end": 7446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7446,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7375,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7602,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7459,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7554,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7590,
											"end": 7595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7563,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7596,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7563,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7602,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7959,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7608,
											"end": 7959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7678,
											"end": 7684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7729,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7702,
											"end": 7725,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7730,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7695,
											"end": 7814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7695,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7695,
											"end": 7814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7733,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 7733,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7812,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7733,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7695,
											"end": 7814,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7695,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7934,
											"end": 7941,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7925,
											"end": 7931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7878,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 7942,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7878,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7824,
											"end": 7952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7959,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7959,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8156,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 7965,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8005,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8024,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8042,
											"end": 8043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8024,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8024,
											"end": 8044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8024,
											"end": 8044,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8024,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8076,
											"end": 8077,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8058,
											"end": 8078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8078,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8058,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8053,
											"end": 8078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8053,
											"end": 8078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8101,
											"end": 8102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8149,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8113,
											"end": 8149,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8129,
											"end": 8147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8149,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8113,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8156,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8331,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8162,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8268,
											"end": 8287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8324,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8315,
											"end": 8318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8311,
											"end": 8325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8501,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8337,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8493,
											"name": "PUSH",
											"source": 6,
											"value": "556E61626C6520746F206D696E74000000000000000000000000000000000000"
										},
										{
											"begin": 8473,
											"end": 8474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8494,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8873,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8507,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8734,
											"end": 8736,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 8729,
											"end": 8732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8670,
											"end": 8737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8737,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8670,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8737,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8746,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8835,
											"end": 8838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8746,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8746,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8746,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8746,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8864,
											"end": 8866,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8873,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8879,
											"end": 9298,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 8879,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9045,
											"end": 9049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9083,
											"end": 9085,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9072,
											"end": 9081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9132,
											"end": 9141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9126,
											"end": 9130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9107,
											"end": 9116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9286,
											"end": 9290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 9160,
											"end": 9291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9291,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9160,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9152,
											"end": 9291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9152,
											"end": 9291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8879,
											"end": 9298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8879,
											"end": 9298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8879,
											"end": 9298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8879,
											"end": 9298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9465,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9304,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9457,
											"name": "PUSH",
											"source": 6,
											"value": "57726F6E6720546F6B656E000000000000000000000000000000000000000000"
										},
										{
											"begin": 9440,
											"end": 9441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9432,
											"end": 9438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 9458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9698,
											"end": 9700,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 9693,
											"end": 9696,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9634,
											"end": 9701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9799,
											"end": 9802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9710,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10009,
											"end": 10013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10105,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10090,
											"end": 10094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10060,
											"end": 10107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 10124,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 10262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"CSAMM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"balanceOf(address)": "70a08231",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(address,uint256)": "d004f0f7",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"d0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CSAMM.sol\":\"CSAMM\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"CSAMM.sol\":{\"keccak256\":\"0xb81e656cc226cdec7620efe9c69810701c78a1773a1e708ca0a0d5122dc9b84b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://226a14036f6d3588774b8868c99dc55eb1a401ffe694d4f4862b3cbdba3146d8\",\"dweb:/ipfs/QmNThEJGa5YffLHvyuvJUKiJ9ke2Kyb6hNZQc6wXL9t9UY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 796,
								"contract": "CSAMM.sol:CSAMM",
								"label": "reserve0",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 798,
								"contract": "CSAMM.sol:CSAMM",
								"label": "reserve1",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "CSAMM.sol:CSAMM",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 804,
								"contract": "CSAMM.sol:CSAMM",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"CSAMM.sol": {
				"ast": {
					"absolutePath": "CSAMM.sol",
					"exportedSymbols": {
						"CSAMM": [
							1187
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 652,
							"src": "57:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CSAMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187
							],
							"name": "CSAMM",
							"nameLocation": "123:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 791,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "159:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "135:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "IERC20",
											"nameLocations": [
												"135:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "135:6:5"
										},
										"referencedDeclaration": 729,
										"src": "135:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 794,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "195:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "171:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"171:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "171:6:5"
										},
										"referencedDeclaration": 729,
										"src": "171:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 796,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "220:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "208:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "208:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 798,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "246:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "234:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "234:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 800,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "272:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "260:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "260:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 804,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "323:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "290:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 803,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "299:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "290:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 802,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "310:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "388:74:5",
										"statements": [
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 811,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "398:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 813,
														"indexExpression": {
															"id": 812,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "408:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "398:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 814,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "416:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "398:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "398:25:5"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "433:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 818,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "448:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "433:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "433:22:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "348:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "362:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "354:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "371:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "366:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "366:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:26:5"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:0:5"
									},
									"scope": 1187,
									"src": "339:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "517:74:5",
										"statements": [
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 829,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "527:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 831,
														"indexExpression": {
															"id": 830,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "537:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "527:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 832,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "545:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "527:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "527:25:5"
											},
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "562:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 836,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "577:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "562:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "562:22:5"
											}
										]
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "477:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "491:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "483:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "500:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "495:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "495:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:26:5"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:5"
									},
									"scope": 1187,
									"src": "468:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "653:67:5",
										"statements": [
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "663:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "674:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "663:20:5"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "693:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 852,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "704:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "693:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "693:20:5"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "606:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "_reserve0",
												"nameLocation": "619:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "614:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "614:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_reserve1",
												"nameLocation": "634:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "629:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:31:5"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "653:0:5"
									},
									"scope": 1187,
									"src": "597:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "809:1889:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 866,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "827:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 869,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "847:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "839:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 867,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "839:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "839:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "827:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 872,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "857:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 875,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "877:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "869:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 873,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "869:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "869:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "857:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "827:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57726f6e6720546f6b656e",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "886:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78",
																"typeString": "literal_string \"Wrong Token\""
															},
															"value": "Wrong Token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2e69b4cd02f9d0e1e48fb5b28aa03fc372512372579b84c4935e3a96d0c7a78",
																"typeString": "literal_string \"Wrong Token\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "819:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "819:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "819:81:5"
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "isToken0",
														"nameLocation": "916:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "911:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 882,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "911:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "_tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "927:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 887,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "947:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "939:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "939:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "939:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "927:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:43:5"
											},
											{
												"assignments": [
													893,
													896
												],
												"declarations": [
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "972:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "965:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 892,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 891,
																"name": "IERC20",
																"nameLocations": [
																	"965:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 729,
																"src": "965:6:5"
															},
															"referencedDeclaration": 729,
															"src": "965:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "987:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "980:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 895,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 894,
																"name": "IERC20",
																"nameLocations": [
																	"980:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 729,
																"src": "980:6:5"
															},
															"referencedDeclaration": 729,
															"src": "980:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"condition": {
														"id": 897,
														"name": "isToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "999:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 901,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1027:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 902,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "1034:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															}
														],
														"id": 903,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1026:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "999:42:5",
													"trueExpression": {
														"components": [
															{
																"id": 898,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "1011:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 899,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1018:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															}
														],
														"id": 900,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1010:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$",
														"typeString": "tuple(contract IERC20,contract IERC20)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "964:77:5"
											},
											{
												"assignments": [
													907,
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "1057:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "1052:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 906,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1052:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "1072:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "1067:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 908,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1067:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"condition": {
														"id": 910,
														"name": "isToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "1086:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 914,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "1118:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 915,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "1127:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 916,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1117:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1086:50:5",
													"trueExpression": {
														"components": [
															{
																"id": 911,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "1098:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 912,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "1107:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 913,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1097:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1051:85:5"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "1152:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "1146:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 919,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1146:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 925,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1188:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CSAMM_$1187",
																			"typeString": "contract CSAMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CSAMM_$1187",
																			"typeString": "contract CSAMM"
																		}
																	],
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1180:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 923,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1180:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1180:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 921,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "1163:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1170:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "1163:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1163:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 928,
														"name": "reserveIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "1197:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1163:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1146:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 934,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1944:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1948:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1944:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 938,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1964:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1956:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1956:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1956:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "1971:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 931,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1923:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1931:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "1923:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1923:58:5"
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 943,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "2118:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 944,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "2130:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "393937",
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2141:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_997_by_1",
																	"typeString": "int_const 997"
																},
																"value": "997"
															},
															"src": "2130:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2146:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2130:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2118:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "2118:32:5"
											},
											{
												"assignments": [
													952,
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "res0",
														"nameLocation": "2167:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "2162:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "res1",
														"nameLocation": "2177:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "2172:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2172:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 971,
												"initialValue": {
													"condition": {
														"id": 955,
														"name": "isToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2185:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 963,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "2264:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 964,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "2276:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2264:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 966,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2286:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 967,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "2299:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2286:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 969,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2263:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2185:124:5",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 956,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "2206:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 957,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "2218:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2206:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 959,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2228:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 960,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "2241:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2228:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 962,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2205:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:148:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2329:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 974,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "2334:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2321:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "2321:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 980,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2670:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2674:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2670:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2681:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 977,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "2652:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2661:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2652:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "2652:39:5"
											}
										]
									},
									"functionSelector": "d004f0f7",
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "735:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_tokenIn",
												"nameLocation": "748:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "740:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "762:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "757:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:33:5"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "797:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "792:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "792:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:16:5"
									},
									"scope": 1187,
									"src": "726:1972:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "2807:581:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 998,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2838:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2842:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2838:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1002,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2858:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2850:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1000,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2850:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2850:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "2865:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 995,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2818:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2825:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2818:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2818:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2818:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1010,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2904:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2908:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2904:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1014,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2924:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2916:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2916:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2916:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2931:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1007,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2884:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2891:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2884:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2884:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "2884:56:5"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "bal0",
														"nameLocation": "2955:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "2950:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2950:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1025,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2987:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2979:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1023,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2979:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2979:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1021,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2962:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2962:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2962:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2950:43:5"
											},
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "bal1",
														"nameLocation": "3008:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "3003:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1029,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3003:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1038,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1035,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3040:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1187",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3032:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3032:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3032:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1031,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3015:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3022:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3015:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3015:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3003:43:5"
											},
											{
												"assignments": [
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "d0",
														"nameLocation": "3062:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "3057:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1039,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3057:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "bal0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3067:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1042,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3074:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3067:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3057:25:5"
											},
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "d1",
														"nameLocation": "3097:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "3092:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1045,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "bal1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "3102:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1048,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3092:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "3131:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3146:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3131:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "3193:82:5",
													"statements": [
														{
															"expression": {
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1061,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "3207:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1064,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1062,
																								"name": "d0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1040,
																								"src": "3218:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1063,
																								"name": "d1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1046,
																								"src": "3223:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3218:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1065,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3216:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1066,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "3229:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3216:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3215:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1069,
																					"name": "reserve0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "3244:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1070,
																					"name": "reserve1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "3255:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3244:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1072,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3243:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3215:49:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3207:57:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1075,
															"nodeType": "ExpressionStatement",
															"src": "3207:57:5"
														}
													]
												},
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "3128:147:5",
												"trueBody": {
													"id": 1060,
													"nodeType": "Block",
													"src": "3148:41:5",
													"statements": [
														{
															"expression": {
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1054,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "3162:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1055,
																		"name": "d0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "3171:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1056,
																		"name": "d1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "3176:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3162:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1059,
															"nodeType": "ExpressionStatement",
															"src": "3162:16:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "3293:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3293:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e61626c6520746f206d696e74",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3304:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb",
																"typeString": "literal_string \"Unable to mint\""
															},
															"value": "Unable to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20f88f38b24962fa25df2d3a6b4c7b2f3d3296df05691a02ff8320da0dfd0acb",
																"typeString": "literal_string \"Unable to mint\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3285:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "3285:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1086,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3337:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3341:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3337:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "3349:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1085,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "3331:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "d0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "3374:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1093,
															"name": "d1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "3378:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3366:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3366:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "3366:15:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2736:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2754:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2749:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2749:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "2768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2748:29:5"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2800:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2795:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2795:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:13:5"
									},
									"scope": 1187,
									"src": "2727:661:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "3467:346:5",
										"statements": [
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "d0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "3477:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1107,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "3483:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1108,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "3493:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3483:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1110,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3482:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1111,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "3505:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3482:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3477:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "3477:39:5"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1115,
														"name": "d1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "3526:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1116,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "3532:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1117,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "3542:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3532:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1119,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3531:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1120,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "3554:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3531:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3526:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "3526:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3582:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3586:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3582:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3594:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "3576:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3576:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "3576:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1131,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "3621:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1132,
																"name": "d0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "3632:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3621:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1134,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "3636:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1135,
																"name": "d1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "3647:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3636:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1130,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3613:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3613:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "3613:37:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1139,
														"name": "d0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "3663:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3668:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3663:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1151,
												"nodeType": "IfStatement",
												"src": "3660:69:5",
												"trueBody": {
													"id": 1150,
													"nodeType": "Block",
													"src": "3671:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1145,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3701:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3705:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3701:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1147,
																		"name": "d0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3713:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1142,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "3685:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3692:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "3685:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3685:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1149,
															"nodeType": "ExpressionStatement",
															"src": "3685:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "d1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "3742:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3747:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3742:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "3738:69:5",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "3750:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1158,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3780:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3784:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3780:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1160,
																		"name": "d1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "3792:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1155,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "3764:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3771:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "3764:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3764:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1162,
															"nodeType": "ExpressionStatement",
															"src": "3764:32:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3404:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "3425:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "3420:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3420:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3419:14:5"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "d0",
												"nameLocation": "3456:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "3451:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3451:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "d1",
												"nameLocation": "3464:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "3459:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3459:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:17:5"
									},
									"scope": 1187,
									"src": "3395:418:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "3864:75:5",
										"statements": [
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "3874:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1175,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "3890:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1174,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3883:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3883:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "3874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "3874:24:5"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3908:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1181,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "3924:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1180,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3917:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3917:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "3908:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "3908:24:5"
											}
										]
									},
									"id": 1186,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "3839:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3831:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "3856:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3848:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:34:5"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3864:0:5"
									},
									"scope": 1187,
									"src": "3819:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1188,
							"src": "114:3829:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:3911:5"
				},
				"id": 5
			}
		}
	}
}